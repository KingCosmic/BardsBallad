{
  "creatures": [
      {
          "_id": "c6qLnT4xfvSCDhCEm",
          "owner": "hGTm5DrrL8XtFHHg5",
          "name": "Test",
          "gender": "ad",
          "alignment": "dad",
          "deathSave": {
              "pass": 0,
              "fail": 0,
              "canDeathSave": true,
              "stable": false
          },
          "denormalizedStats": {
              "xp": 0,
              "milestoneLevels": 1
          },
          "type": "pc",
          "damageMultipliers": {},
          "settings": {},
          "readers": [],
          "writers": [],
          "public": false
      }
  ],
  "creatureProperties": [
      {
          "_id": "x45G5tefgW5u5pnrJ",
          "type": "propertySlot",
          "name": "Ruleset",
          "description": {
              "text": "Choose a starting point for your character, this will define the basic setup of your character sheet. Without a base ruleset, your sheet will be empty.",
              "inlineCalculations": [],
              "value": "Choose a starting point for your character, this will define the basic setup of your character sheet. Without a base ruleset, your sheet will be empty.",
              "hash": 8030999935138279
          },
          "slotTags": [
              "base"
          ],
          "tags": [],
          "quantityExpected": {
              "calculation": "1",
              "_key": "quantityExpected",
              "type": "_calculation",
              "hash": 1485272252048968,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 1
              },
              "parseError": null,
              "errors": [],
              "value": 1
          },
          "hideWhenFull": true,
          "spaceLeft": 0,
          "totalFilled": 1,
          "order": 0,
          "parent": {
              "collection": "creatures",
              "id": "c6qLnT4xfvSCDhCEm"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              }
          ],
          "extraTags": [],
          "unique": "uniqueInSlot"
      },
      {
          "_id": "Ye7C2TLFF5vDbrGfc",
          "type": "folder",
          "name": "Inventory",
          "tags": [
              "inventory"
          ],
          "order": 206,
          "parent": {
              "collection": "creatures",
              "id": "c6qLnT4xfvSCDhCEm"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              }
          ]
      },
      {
          "_id": "EAkKXya3Mi9bNDE27",
          "type": "folder",
          "name": "Equipment",
          "tags": [
              "equipment"
          ],
          "order": 207,
          "parent": {
              "collection": "creatureProperties",
              "id": "Ye7C2TLFF5vDbrGfc"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Ye7C2TLFF5vDbrGfc"
              }
          ]
      },
      {
          "_id": "MBo6sKKnNzjuQMeSw",
          "type": "folder",
          "name": "Carried",
          "tags": [
              "carried"
          ],
          "order": 208,
          "parent": {
              "collection": "creatureProperties",
              "id": "Ye7C2TLFF5vDbrGfc"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Ye7C2TLFF5vDbrGfc"
              }
          ]
      },
      {
          "_id": "R7WGoSicaBhTxEMxy",
          "slotQuantityFilled": 1,
          "type": "folder",
          "name": "Tameran's Library of Everything: Character Base",
          "parent": {
              "id": "x45G5tefgW5u5pnrJ",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              }
          ],
          "order": 1,
          "tags": [
              "LoV",
              "base"
          ],
          "icon": {
              "name": "spell-book",
              "shape": "M319.61 20.654c13.145 33.114 13.144 33.115-5.46 63.5 33.114-13.145 33.116-13.146 63.5 5.457-13.145-33.114-13.146-33.113 5.457-63.498-33.114 13.146-33.113 13.145-63.498-5.459zM113.024 38.021c-11.808 21.04-11.808 21.04-35.724 24.217 21.04 11.809 21.04 11.808 24.217 35.725 11.808-21.04 11.808-21.04 35.724-24.217-21.04-11.808-21.04-11.808-24.217-35.725zm76.55 56.184c-.952 50.588-.95 50.588-41.991 80.18 50.587.95 50.588.95 80.18 41.99.95-50.588.95-50.588 41.99-80.18-50.588-.95-50.588-.95-80.18-41.99zm191.177 55.885c-.046 24.127-.048 24.125-19.377 38.564 24.127.047 24.127.046 38.566 19.375.047-24.126.046-24.125 19.375-38.564-24.126-.047-24.125-.046-38.564-19.375zm-184.086 83.88c-1.191.024-2.36.07-3.492.134-18.591 1.064-41.868 8.416-77.445 22.556L76.012 433.582c78.487-20.734 132.97-21.909 170.99-4.615V247.71c-18.076-8.813-31.79-13.399-46.707-13.737a91.166 91.166 0 0 0-3.629-.002zm122.686 11.42c-2.916-.026-5.81.011-8.514.098-12.81.417-27.638 2.215-45.84 4.522V427.145c43.565-7.825 106.85-4.2 171.244 7.566l-39.78-177.197c-35.904-8.37-56.589-11.91-77.11-12.123zm2.289 16.95c18.889.204 36.852 2.768 53.707 5.02l4.437 16.523c-23.78-3.75-65.966-4.906-92.467-.98l-.636-17.805c11.959-2.154 23.625-2.88 34.959-2.758zm-250.483 4.658l-10.617 46.004h24.094l10.326-46.004H71.158zm345.881 0l39.742 177.031 2.239 9.973 22.591-.152-40.855-186.852h-23.717zm-78.857 57.82c16.993.026 33.67.791 49.146 2.223l3.524 17.174c-32.645-3.08-72.58-2.889-102.995 0l-.709-17.174c16.733-1.533 34.04-2.248 51.034-2.223zm-281.793 6.18l-6.924 30.004h24.394l6.735-30.004H56.389zm274.418 27.244c4.656.021 9.487.085 14.716.203l2.555 17.498c-19.97-.471-47.115.56-59.728 1.05l-.7-17.985c16.803-.493 29.189-.828 43.157-.766zm41.476.447c8.268.042 16.697.334 24.121.069l2.58 17.74c-8.653-.312-24.87-.83-32.064-.502l-2.807-17.234a257.25 257.25 0 0 1 8.17-.073zm-326.97 20.309l-17.985 77.928 25.035-.17 17.455-77.758H45.313zm303.164 11.848c19.608-.01 38.66.774 56.449 2.572l2.996 20.787c-34.305-4.244-85.755-7.697-119.1-3.244l-.14-17.922c20.02-1.379 40.186-2.183 59.795-2.193zm-166.606 44.05c-30.112.09-67.916 6.25-115.408 19.76l-7.22 2.053 187.759-1.27v-6.347c-16.236-9.206-37.42-14.278-65.13-14.196zm134.41 6.174c-19.63.067-37.112 1.439-51.283 4.182v10.064l177.594-1.203c-44.322-8.634-89.137-13.17-126.31-13.043zM26 475v18h460v-18H26z"
          },
          "color": "#2196f3",
          "description": {
              "text": "A large-scale library that attempts to provide users which a much more thorough 5e experience than what the default 5e SRD library provides.\n\n_Pleased to meet you, I'm Tameran Vacillo, Prince of the Moon! Welcome to my library. A scholar by trade and by interest, I've taken every opportunity I can to research and discover new things, and I'm always looking to expand my collection. Here, you will find everything from a personal account of the Netherese Civil War to textbooks, ehrm, borrowed from the University of Jena. Please, come in, come in!_",
              "value": "A large-scale library that attempts to provide users which a much more thorough 5e experience than what the default 5e SRD library provides.\n\n_Pleased to meet you, I'm Tameran Vacillo, Prince of the Moon! Welcome to my library. A scholar by trade and by interest, I've taken every opportunity I can to research and discover new things, and I'm always looking to expand my collection. Here, you will find everything from a personal account of the Netherese Civil War to textbooks, ehrm, borrowed from the University of Jena. Please, come in, come in!_",
              "hash": 2546364503502231,
              "inlineCalculations": []
          },
          "libraryTags": [
              "LoV",
              "base"
          ],
          "fillSlots": true,
          "searchable": true,
          "slotFillImage": "https://i.pinimg.com/originals/38/7c/db/387cdbba39ef0e6818195c3e51b5cad0.jpg",
          "libraryNodeId": "oTSfYuom8R54MvpBZ"
      },
      {
          "_id": "2M3EuA8LobukNXjPK",
          "slotTags": [
              "class",
              "LoV"
          ],
          "type": "propertySlot",
          "name": "Starting Class",
          "slotType": "folder",
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 184,
          "tags": [
              "startingClassSlot"
          ],
          "unique": "uniqueInCreature",
          "quantityExpected": {
              "calculation": "1",
              "_key": "quantityExpected",
              "type": "_calculation",
              "hash": 1485272252048968,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 1
              },
              "parseError": null,
              "errors": [],
              "value": 1
          },
          "libraryTags": [],
          "extraTags": [
              {
                  "_id": "QEkWKvWECpr2ZbRWy",
                  "operation": "NOT",
                  "tags": [
                      "multiclassLevel1"
                  ]
              }
          ],
          "hideWhenFull": true,
          "slotCondition": {
              "calculation": "(jonStatus <= 1) && (tutorialStatus <= 1)",
              "_key": "slotCondition",
              "type": "_calculation",
              "hash": 7654397209521769,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "operator": "&&",
                  "fn": "and"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "searchable": false,
          "libraryNodeId": "scSZAPsGQwtdEurhd",
          "spaceLeft": 1,
          "totalFilled": 0
      },
      {
          "_id": "bNwiCn5LHLfGgtZEL",
          "slotTags": [
              "race",
              "LoV"
          ],
          "type": "propertySlot",
          "name": "Race",
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 183,
          "tags": [
              "raceSlot"
          ],
          "unique": "uniqueInCreature",
          "quantityExpected": {
              "calculation": "1",
              "_key": "quantityExpected",
              "type": "_calculation",
              "hash": 1485272252048968,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 1
              },
              "parseError": null,
              "errors": [],
              "value": 1
          },
          "libraryTags": [],
          "extraTags": [],
          "hideWhenFull": true,
          "slotCondition": {
              "calculation": "(jonStatus <=1) && (tutorialStatus <= 1)",
              "_key": "slotCondition",
              "type": "_calculation",
              "hash": 8157192827504166,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "operator": "&&",
                  "fn": "and"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "libraryNodeId": "mEFpKY7HLzhBg4pYj",
          "spaceLeft": 1,
          "totalFilled": 0
      },
      {
          "_id": "95gb2k62fzHi9RLHL",
          "slotTags": [
              "background",
              "LoV"
          ],
          "type": "propertySlot",
          "name": "Background",
          "slotType": "folder",
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 182,
          "tags": [
              "backgroundSlot"
          ],
          "unique": "uniqueInCreature",
          "hideWhenFull": true,
          "quantityExpected": {
              "calculation": "1",
              "_key": "quantityExpected",
              "type": "_calculation",
              "hash": 1485272252048968,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 1
              },
              "parseError": null,
              "errors": [],
              "value": 1
          },
          "libraryTags": [],
          "extraTags": [],
          "slotCondition": {
              "calculation": "(jonStatus <= 1) && (tutorialStatus <= 1)",
              "_key": "slotCondition",
              "type": "_calculation",
              "hash": 7654397209521769,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "operator": "&&",
                  "fn": "and"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "fillSlots": false,
          "libraryNodeId": "HXP4S9TMh2a3yYoDJ",
          "spaceLeft": 1,
          "totalFilled": 0
      },
      {
          "_id": "bSsaHZJ6TkjKFLG63",
          "type": "note",
          "name": "Tameran's Library of Everything",
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 204,
          "tags": [],
          "summary": {
              "text": "## <span style=\"background-color: #FFA500\">This library is still in development!</span>  \n\nWe have done our best to fix all the bugs we are aware of before releasing version 1.0- however, with a project of this scale it is all but guaranteed that some slipped through the cracks!\n\nIf you have found a bug or issue, or if you simply would like to request that something be added sooner rather than later, please visit the LoV Discord server linked here: https://discord.gg/z3FRWzr63B.\n\nThank you for your patience! And thank you for helping us build this massive community project!",
              "value": "## <span style=\"background-color: #FFA500\">This library is still in development!</span>  \n\nWe have done our best to fix all the bugs we are aware of before releasing version 1.0- however, with a project of this scale it is all but guaranteed that some slipped through the cracks!\n\nIf you have found a bug or issue, or if you simply would like to request that something be added sooner rather than later, please visit the LoV Discord server linked here: https://discord.gg/z3FRWzr63B.\n\nThank you for your patience! And thank you for helping us build this massive community project!",
              "hash": 4560183673243489,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "description": {
              "text": "A huge thank you to the people who contributed to the beta development of the Libraries of Vexus:\n\n- Jonpot\n- Ganonslayer\n- StormDragon\n- Ashelynn Sedai\n- Big Saffron\n- ChaoticUnreal\n- Dai\n- Foxer\n- gregovin\n- Hexa\n- KrisP\n- Langston_hughes\n- NappingPiglet\n- Omar Little\n- puffinz\n- redfacedone\n- Sandwizard\n- Scorpy\n- winded\n- Zarfey\n- zipcodeman\n- DMurnett\n\nAnd, of course, Thaum Rystra for their continued development of Dicecloud v2 and their support of this community.\n\nIt took a over a year to get here, and there will be years to come of development, but it's been quite the journey!",
              "value": "A huge thank you to the people who contributed to the beta development of the Libraries of Vexus:\n\n- Jonpot\n- Ganonslayer\n- StormDragon\n- Ashelynn Sedai\n- Big Saffron\n- ChaoticUnreal\n- Dai\n- Foxer\n- gregovin\n- Hexa\n- KrisP\n- Langston_hughes\n- NappingPiglet\n- Omar Little\n- puffinz\n- redfacedone\n- Sandwizard\n- Scorpy\n- winded\n- Zarfey\n- zipcodeman\n- DMurnett\n\nAnd, of course, Thaum Rystra for their continued development of Dicecloud v2 and their support of this community.\n\nIt took a over a year to get here, and there will be years to come of development, but it's been quite the journey!",
              "hash": 3075770728771242,
              "inlineCalculations": []
          },
          "libraryNodeId": "heg5i2YFSS7AmDG6a"
      },
      {
          "_id": "gTqDmEvx3nSegxx8f",
          "type": "folder",
          "name": "Ability Scores",
          "parent": {
              "id": "Qh9pbGT24RYW8MBzw",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              }
          ],
          "order": 114,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "KGp6sr7LdHJfXyj4w"
      },
      {
          "_id": "3wvNb3kzGdiiuao3T",
          "variableName": "TLoEinstalled",
          "errors": [],
          "type": "constant",
          "name": "Tameran's Library of Everything Installed",
          "calculation": "true",
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 205,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "CKLvYHDLwDBu6fZKu"
      },
      {
          "_id": "QPp7QCAbGMKFbFMkY",
          "name": "Strength",
          "variableName": "strength",
          "attributeType": "ability",
          "type": "attribute",
          "parent": {
              "id": "gTqDmEvx3nSegxx8f",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              }
          ],
          "order": 115,
          "tags": [
              "abilityCheck",
              "strengthCheck"
          ],
          "baseValue": {
              "calculation": "unmodifiedStrength",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 8223934651834346,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "unmodifiedStrength"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "unmodifiedStrength not found, set to 0"
                  }
              ],
              "value": 0
          },
          "description": {
              "text": "Strength measures bodily power, athletic Training, and the extent to which you can exert raw physical force. A Strength check can model any attempt to lift, push, pull, or break something, to force your body through a space, or to otherwise apply brute force to a situation. The Athletics skill reflects aptitude in certain kinds of Strength Checks. \n\nThe GM might call for a Strength check when you try to accomplish tasks like the following:\n- Force open a stuck, locked, or barred door\n- Break free of bonds\n- Push through a tunnel that is too small\n- Hang on to a wagon while being dragged behind it\n- Tip over a statue\n- Keep a boulder from rolling  \n<br></br>\n\n**Variant: Encumbrance**\nThe rules for Lifting and Carrying are intentionally simple. Here is a variant if you are looking for more detailed rules for determining how a character is hindered by the weight of Equipment. When you use this variant, ignore the Strength column of the Armor table.\n\n**Lifting and Carrying**\nYour Strength score determines the amount of weight you can bear. The following terms define what you can lift or carry.\n\n**Carrying Capacity.** Your carrying Capacity is **{carryingCapacity}**. This is the weight (in pounds) that you can carry, which is high enough that most characters don’t usually have to worry about it.\n\n**Push, Drag, or Lift.** You can push, drag, or lift up to **{carryingCapacity*2}** pounds. While pushing or dragging weight in excess of your carrying Capacity, your speed drops to 5 feet.\n\n**Size and Strength.** Larger creatures can bear more weight, whereas Tiny creatures can carry less. For each size category above Medium, double the creature’s carrying Capacity and the amount it can push, drag, or lift. For a Tiny creature, halve these weights.\n\n**Long Jump**\nWhen you make a long jump, you cover **{longJumpDistance}** feet if you move at least 10 feet on foot immediately before the jump. When you make a standing long jump, you can leap only **{standingLongJumpDistance}** feet. Either way, each foot you clear on the jump costs a foot of movement.\n\nThis rule assumes that the height of your jump doesn't matter, such as a jump across a stream or chasm. At your DM's option, you must succeed on a DC 10 Strength (Athletics) check to clear a low obstacle (no taller than a quarter of the jump's distance), such as a hedge or low wall. Otherwise, you hit it.\n\nWhen you land in difficult terrain, you must succeed on a DC 10 Dexterity (Acrobatics) check to land on your feet. Otherwise, you land prone.\n\n**High Jump**\nWhen you make a high jump, you leap **{highJumpDistance}** feet into the air if you move at least 10 feet on foot immediately before the jump. When you make a standing high jump, you can jump **{standingHighJumpDistance}** feet. Either way, each foot you clear on the jump costs a foot of movement. In some circumstances, your DM might allow you to make a Strength (Athletics) check to jump higher than you normally can.\n\nYou can extend your arms half your height above yourself during the jump. Thus, you can reach above you a difference equal to the height of the jump plus 1 1/2 times your height.",
              "value": "Strength measures bodily power, athletic Training, and the extent to which you can exert raw physical force. A Strength check can model any attempt to lift, push, pull, or break something, to force your body through a space, or to otherwise apply brute force to a situation. The Athletics skill reflects aptitude in certain kinds of Strength Checks. \n\nThe GM might call for a Strength check when you try to accomplish tasks like the following:\n- Force open a stuck, locked, or barred door\n- Break free of bonds\n- Push through a tunnel that is too small\n- Hang on to a wagon while being dragged behind it\n- Tip over a statue\n- Keep a boulder from rolling  \n<br></br>\n\n**Variant: Encumbrance**\nThe rules for Lifting and Carrying are intentionally simple. Here is a variant if you are looking for more detailed rules for determining how a character is hindered by the weight of Equipment. When you use this variant, ignore the Strength column of the Armor table.\n\n**Lifting and Carrying**\nYour Strength score determines the amount of weight you can bear. The following terms define what you can lift or carry.\n\n**Carrying Capacity.** Your carrying Capacity is **NaN**. This is the weight (in pounds) that you can carry, which is high enough that most characters don’t usually have to worry about it.\n\n**Push, Drag, or Lift.** You can push, drag, or lift up to **NaN** pounds. While pushing or dragging weight in excess of your carrying Capacity, your speed drops to 5 feet.\n\n**Size and Strength.** Larger creatures can bear more weight, whereas Tiny creatures can carry less. For each size category above Medium, double the creature’s carrying Capacity and the amount it can push, drag, or lift. For a Tiny creature, halve these weights.\n\n**Long Jump**\nWhen you make a long jump, you cover **0** feet if you move at least 10 feet on foot immediately before the jump. When you make a standing long jump, you can leap only **0** feet. Either way, each foot you clear on the jump costs a foot of movement.\n\nThis rule assumes that the height of your jump doesn't matter, such as a jump across a stream or chasm. At your DM's option, you must succeed on a DC 10 Strength (Athletics) check to clear a low obstacle (no taller than a quarter of the jump's distance), such as a hedge or low wall. Otherwise, you hit it.\n\nWhen you land in difficult terrain, you must succeed on a DC 10 Dexterity (Acrobatics) check to land on your feet. Otherwise, you land prone.\n\n**High Jump**\nWhen you make a high jump, you leap **0** feet into the air if you move at least 10 feet on foot immediately before the jump. When you make a standing high jump, you can jump **0** feet. Either way, each foot you clear on the jump costs a foot of movement. In some circumstances, your DM might allow you to make a Strength (Athletics) check to jump higher than you normally can.\n\nYou can extend your arms half your height above yourself during the jump. Thus, you can reach above you a difference equal to the height of the jump plus 1 1/2 times your height.",
              "hash": 4984814973538502,
              "inlineCalculations": [
                  {
                      "calculation": "carryingCapacity",
                      "_key": "description.inlineCalculations[0]",
                      "type": "_calculation",
                      "hash": 6997942009923035,
                      "parseNode": {
                          "parseType": "symbol",
                          "name": "carryingCapacity"
                      },
                      "parseError": null,
                      "errors": [],
                      "value": null
                  },
                  {
                      "calculation": "carryingCapacity*2",
                      "_key": "description.inlineCalculations[1]",
                      "type": "_calculation",
                      "hash": 6191061912358917,
                      "parseNode": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "carryingCapacity"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 2
                          },
                          "operator": "*",
                          "fn": "multiply"
                      },
                      "parseError": null,
                      "errors": [],
                      "value": null
                  },
                  {
                      "calculation": "longJumpDistance",
                      "_key": "description.inlineCalculations[2]",
                      "type": "_calculation",
                      "hash": 1402486909811367,
                      "parseNode": {
                          "parseType": "symbol",
                          "name": "longJumpDistance"
                      },
                      "parseError": null,
                      "errors": [],
                      "value": 0
                  },
                  {
                      "calculation": "standingLongJumpDistance",
                      "_key": "description.inlineCalculations[3]",
                      "type": "_calculation",
                      "hash": 8860965257820906,
                      "parseNode": {
                          "parseType": "symbol",
                          "name": "standingLongJumpDistance"
                      },
                      "parseError": null,
                      "errors": [],
                      "value": 0
                  },
                  {
                      "calculation": "highJumpDistance",
                      "_key": "description.inlineCalculations[4]",
                      "type": "_calculation",
                      "hash": 1929181741216232,
                      "parseNode": {
                          "parseType": "symbol",
                          "name": "highJumpDistance"
                      },
                      "parseError": null,
                      "errors": [],
                      "value": 0
                  },
                  {
                      "calculation": "standingHighJumpDistance",
                      "_key": "description.inlineCalculations[5]",
                      "type": "_calculation",
                      "hash": 2080804089365979,
                      "parseNode": {
                          "parseType": "symbol",
                          "name": "standingHighJumpDistance"
                      },
                      "parseError": null,
                      "errors": [],
                      "value": 0
                  }
              ]
          },
          "libraryTags": [
              "abilityCheck"
          ],
          "fillSlots": true,
          "searchable": true,
          "reset": "longRest",
          "libraryNodeId": "tjcgNBtrwE27WmS5r",
          "advantage": 0,
          "effects": [
              {
                  "_id": "QPp7QCAbGMKFbFMkY",
                  "name": "Strength",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              },
              {
                  "_id": "uXByyFFqHZE7p9yYA",
                  "name": "Max Strength",
                  "operation": "max",
                  "amount": {
                      "value": 20
                  },
                  "type": "effect"
              }
          ],
          "modifier": -5,
          "total": 0,
          "value": 0
      },
      {
          "_id": "vyo6F69fKbTW5uD2u",
          "name": "Constitution",
          "variableName": "constitution",
          "attributeType": "ability",
          "type": "attribute",
          "parent": {
              "id": "gTqDmEvx3nSegxx8f",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              }
          ],
          "order": 124,
          "tags": [
              "abilityCheck",
              "constitutionCheck"
          ],
          "baseValue": {
              "calculation": "unmodifiedConstitution",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 3650735091148614,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "unmodifiedConstitution"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "unmodifiedConstitution not found, set to 0"
                  }
              ],
              "value": 0
          },
          "description": {
              "text": "Constitution measures health, stamina, and vital force.\n\nConstitution Checks are uncommon, and no Skills apply to Constitution Checks, because The Endurance this ability represents is largely passive rather than involving a specific effort on the part of a character or monster. A Constitution check can model your attempt to push beyond normal limits, however.\n\nThe GM might call for a Constitution check when you try to accomplish tasks like the following:\n- Hold your breath\n- March or labor for hours without rest\n- Go without sleep\n- Survive without food or water\n- Quaff an entire stein of ale in one go",
              "value": "Constitution measures health, stamina, and vital force.\n\nConstitution Checks are uncommon, and no Skills apply to Constitution Checks, because The Endurance this ability represents is largely passive rather than involving a specific effort on the part of a character or monster. A Constitution check can model your attempt to push beyond normal limits, however.\n\nThe GM might call for a Constitution check when you try to accomplish tasks like the following:\n- Hold your breath\n- March or labor for hours without rest\n- Go without sleep\n- Survive without food or water\n- Quaff an entire stein of ale in one go",
              "hash": 2362479246246212,
              "inlineCalculations": []
          },
          "libraryTags": [
              "abilityCheck"
          ],
          "fillSlots": true,
          "searchable": true,
          "reset": "longRest",
          "libraryNodeId": "sYQLxShma2PRHjA5J",
          "advantage": 0,
          "effects": [
              {
                  "_id": "vyo6F69fKbTW5uD2u",
                  "name": "Constitution",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              },
              {
                  "_id": "NBbWavwSRXKcAoEky",
                  "name": "Max Constitution",
                  "operation": "max",
                  "amount": {
                      "value": 20
                  },
                  "type": "effect"
              }
          ],
          "modifier": -5,
          "total": 0,
          "value": 0
      },
      {
          "_id": "5hyW93yiinJkPGecs",
          "name": "Intelligence",
          "variableName": "intelligence",
          "attributeType": "ability",
          "type": "attribute",
          "parent": {
              "id": "gTqDmEvx3nSegxx8f",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              }
          ],
          "order": 126,
          "tags": [
              "abilityCheck",
              "intelligenceCheck"
          ],
          "baseValue": {
              "calculation": "unmodifiedIntelligence",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 7245189004734411,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "unmodifiedIntelligence"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "unmodifiedIntelligence not found, set to 0"
                  }
              ],
              "value": 0
          },
          "description": {
              "text": "Intelligence measures mental acuity, accuracy of recall, and the ability to reason.\n\nAn Intelligence check comes into play when you need to draw on logic, education, memory, or deductive reasoning. The Arcana, History, Investigation, Nature, and Religion Skills reflect aptitude in certain kinds of Intelligence Checks.\n\nThe GM might call for an Intelligence check when you try to accomplish tasks like the following:\n- Communicate with a creature without using words\n- Estimate the value of a precious item\n- Pull together a disguise to pass as a city guard\n- Forge a document\n- Recall lore about a craft or trade\n- Win a game of skill",
              "value": "Intelligence measures mental acuity, accuracy of recall, and the ability to reason.\n\nAn Intelligence check comes into play when you need to draw on logic, education, memory, or deductive reasoning. The Arcana, History, Investigation, Nature, and Religion Skills reflect aptitude in certain kinds of Intelligence Checks.\n\nThe GM might call for an Intelligence check when you try to accomplish tasks like the following:\n- Communicate with a creature without using words\n- Estimate the value of a precious item\n- Pull together a disguise to pass as a city guard\n- Forge a document\n- Recall lore about a craft or trade\n- Win a game of skill",
              "hash": 3464417848840727,
              "inlineCalculations": []
          },
          "libraryTags": [
              "abilityCheck"
          ],
          "fillSlots": true,
          "searchable": true,
          "reset": "longRest",
          "libraryNodeId": "GmKTrQExiZoLK7wFE",
          "advantage": 0,
          "effects": [
              {
                  "_id": "5hyW93yiinJkPGecs",
                  "name": "Intelligence",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              },
              {
                  "_id": "xr93hyGxpXo9yf7cy",
                  "name": "Max Intelligence",
                  "operation": "max",
                  "amount": {
                      "value": 20
                  },
                  "type": "effect"
              }
          ],
          "modifier": -5,
          "total": 0,
          "value": 0
      },
      {
          "_id": "TH77JQjP4WPJYg5mT",
          "name": "High Jump Distance",
          "variableName": "highJumpDistance",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "QPp7QCAbGMKFbFMkY",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              },
              {
                  "id": "QPp7QCAbGMKFbFMkY",
                  "collection": "creatureProperties"
              }
          ],
          "order": 118,
          "tags": [],
          "baseValue": {
              "calculation": "max(3 + strength.modifier,0)",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 1029843560798829,
              "parseNode": {
                  "parseType": "call",
                  "functionName": "max",
                  "args": [
                      {
                          "parseType": "operator",
                          "left": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 3
                          },
                          "right": {
                              "parseType": "accessor",
                              "path": [
                                  "modifier"
                              ],
                              "name": "strength"
                          },
                          "operator": "+",
                          "fn": "add"
                      },
                      {
                          "parseType": "constant",
                          "valueType": "number",
                          "value": 0
                      }
                  ]
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "libraryTags": [],
          "libraryNodeId": "GkewkjfiAFGRBnquj",
          "effects": [
              {
                  "_id": "TH77JQjP4WPJYg5mT",
                  "name": "High Jump Distance",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "xXYFTLauq8WekikwX",
          "skillType": "check",
          "type": "skill",
          "name": "Initiative",
          "variableName": "initiative",
          "ability": "dexterity",
          "parent": {
              "id": "ss46JEMWKxKBiPce3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 92,
          "tags": [
              "initiativeRoll"
          ],
          "description": {
              "text": "Initiative determines the order of turns during combat. When combat starts, every participant makes a Dexterity check to determine their place in the initiative order. The DM makes one roll for an entire group of identical creatures, so each member of the group acts at the same time.\n\nThe DM ranks the combatants in order from the one with the highest Dexterity check total to the one with the lowest. This is the order (called the initiative order) in which they act during each round. The initiative order remains the same from round to round.\n\nIf a tie occurs, the DM decides the order among tied DM-controlled creatures, and the players decide the order among their tied characters. The DM can decide the order if the tie is between a monster and a player character. Optionally, the DM can have the tied characters and monsters each roll a d20 to determine the order, highest roll going first.",
              "value": "Initiative determines the order of turns during combat. When combat starts, every participant makes a Dexterity check to determine their place in the initiative order. The DM makes one roll for an entire group of identical creatures, so each member of the group acts at the same time.\n\nThe DM ranks the combatants in order from the one with the highest Dexterity check total to the one with the lowest. This is the order (called the initiative order) in which they act during each round. The initiative order remains the same from round to round.\n\nIf a tie occurs, the DM decides the order among tied DM-controlled creatures, and the players decide the order among their tied characters. The DM can decide the order if the tie is between a monster and a player character. Optionally, the DM can have the tied characters and monsters each roll a d20 to determine the order, highest roll going first.",
              "hash": 5765655148636001,
              "inlineCalculations": []
          },
          "libraryTags": [
              "initiativeRoll"
          ],
          "fillSlots": true,
          "searchable": false,
          "libraryNodeId": "HHgAHuzDSGjqXxB4N",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "smd7QtGwKjmfELGiz",
          "name": "Proficiency Bonus",
          "variableName": "proficiencyBonus",
          "attributeType": "modifier",
          "type": "attribute",
          "parent": {
              "id": "ss46JEMWKxKBiPce3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 93,
          "tags": [],
          "baseValue": {
              "calculation": "2+floor((level-1)/4)",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 5031043758359286,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 2
                  },
                  "right": {
                      "parseType": "call",
                      "functionName": "floor",
                      "args": [
                          {
                              "parseType": "operator",
                              "left": {
                                  "parseType": "parenthesis",
                                  "content": {
                                      "parseType": "operator",
                                      "left": {
                                          "parseType": "symbol",
                                          "name": "level"
                                      },
                                      "right": {
                                          "parseType": "constant",
                                          "valueType": "number",
                                          "value": 1
                                      },
                                      "operator": "-",
                                      "fn": "add"
                                  }
                              },
                              "right": {
                                  "parseType": "constant",
                                  "valueType": "number",
                                  "value": 4
                              },
                              "operator": "/",
                              "fn": "multiply"
                          }
                      ]
                  },
                  "operator": "+",
                  "fn": "add"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "level not found, set to 0"
                  }
              ],
              "value": 1
          },
          "description": {
              "text": "The table that appears in your class description shows your proficiency bonus, which is +2 for a 1st-level character. Your proficiency bonus applies to many of the numbers you'll be recording on your character sheet:\n\n- Attack rolls using weapons you're proficient with\n- Attack rolls with spells you cast\n- Ability checks using skills you're proficient in\n- Ability checks using tools you're proficient with\n- Saving throws you're proficient in\n- Saving throw DCs for spells you cast (explained in each spellcasting class)\n\nYour class determines your weapon proficiencies, your saving throw proficiencies, and some of your skill and tool proficiencies. (Skills are described in chapter 7, tools in chapter 5.) Your background gives you additional skill and tool proficiencies, and some races give you more proficiencies. Be sure to note all of these proficiencies, as well as your proficiency bonus, on your character sheet.\n\nYour proficiency bonus can't be added to a single die roll or other number more than once. Occasionally, your proficiency bonus might be modified (doubled or halved, for example) before you apply it. If a circumstance suggests that your proficiency bonus applies more than once to the same roll or that it should be multiplied more than once, you nevertheless add it only once, multiply it only once, and halve it only once.",
              "value": "The table that appears in your class description shows your proficiency bonus, which is +2 for a 1st-level character. Your proficiency bonus applies to many of the numbers you'll be recording on your character sheet:\n\n- Attack rolls using weapons you're proficient with\n- Attack rolls with spells you cast\n- Ability checks using skills you're proficient in\n- Ability checks using tools you're proficient with\n- Saving throws you're proficient in\n- Saving throw DCs for spells you cast (explained in each spellcasting class)\n\nYour class determines your weapon proficiencies, your saving throw proficiencies, and some of your skill and tool proficiencies. (Skills are described in chapter 7, tools in chapter 5.) Your background gives you additional skill and tool proficiencies, and some races give you more proficiencies. Be sure to note all of these proficiencies, as well as your proficiency bonus, on your character sheet.\n\nYour proficiency bonus can't be added to a single die roll or other number more than once. Occasionally, your proficiency bonus might be modified (doubled or halved, for example) before you apply it. If a circumstance suggests that your proficiency bonus applies more than once to the same roll or that it should be multiplied more than once, you nevertheless add it only once, multiply it only once, and halve it only once.",
              "hash": 4722390157390356,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "libraryNodeId": "HfiP6AAsWs54dHYrN",
          "effects": [
              {
                  "_id": "smd7QtGwKjmfELGiz",
                  "name": "Proficiency Bonus",
                  "operation": "base",
                  "amount": {
                      "value": 1
                  },
                  "type": "attribute"
              }
          ],
          "total": 1,
          "value": 1
      },
      {
          "_id": "ss46JEMWKxKBiPce3",
          "type": "folder",
          "name": "Stats",
          "parent": {
              "id": "Qh9pbGT24RYW8MBzw",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              }
          ],
          "order": 46,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "wzPBCCLaitX6oNwHy"
      },
      {
          "_id": "yobsWF82fk3H6rcWs",
          "name": "Wisdom",
          "variableName": "wisdom",
          "attributeType": "ability",
          "type": "attribute",
          "parent": {
              "id": "gTqDmEvx3nSegxx8f",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              }
          ],
          "order": 128,
          "tags": [
              "abilityCheck",
              "wisdomCheck"
          ],
          "baseValue": {
              "calculation": "unmodifiedWisdom",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 4588504102685352,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "unmodifiedWisdom"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "unmodifiedWisdom not found, set to 0"
                  }
              ],
              "value": 0
          },
          "description": {
              "text": "Wisdom reflects how attuned you are to the world around you and represents perceptiveness and intuition. A Wisdom check might reflect an effort to read body language, understand someone’s feelings, notice things about the environment, or care for an injured person. The Animal Handling, Insight, Medicine, Perception, and Survival Skills reflect aptitude in certain kinds of Wisdom Checks.\n\nThe GM might call for a Wisdom check when you try to accomplish tasks like the following:\n- Get a gut feeling about what course of action to follow\n- Discern whether a seemingly dead or living creature is Undead",
              "value": "Wisdom reflects how attuned you are to the world around you and represents perceptiveness and intuition. A Wisdom check might reflect an effort to read body language, understand someone’s feelings, notice things about the environment, or care for an injured person. The Animal Handling, Insight, Medicine, Perception, and Survival Skills reflect aptitude in certain kinds of Wisdom Checks.\n\nThe GM might call for a Wisdom check when you try to accomplish tasks like the following:\n- Get a gut feeling about what course of action to follow\n- Discern whether a seemingly dead or living creature is Undead",
              "hash": 6573960610326175,
              "inlineCalculations": []
          },
          "libraryTags": [
              "abilityCheck"
          ],
          "fillSlots": true,
          "searchable": true,
          "reset": "longRest",
          "libraryNodeId": "tJXX8kneEbCmXaJxY",
          "advantage": 0,
          "effects": [
              {
                  "_id": "yobsWF82fk3H6rcWs",
                  "name": "Wisdom",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              },
              {
                  "_id": "xNkYbk5Lkijwj2Ppd",
                  "name": "Max Wisdom",
                  "operation": "max",
                  "amount": {
                      "value": 20
                  },
                  "type": "effect"
              }
          ],
          "modifier": -5,
          "total": 0,
          "value": 0
      },
      {
          "_id": "cQQJsn6ZHdcscnNdy",
          "skillType": "save",
          "type": "skill",
          "name": "Strength Save",
          "variableName": "strengthSave",
          "ability": "strength",
          "parent": {
              "id": "QPp7QCAbGMKFbFMkY",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              },
              {
                  "id": "QPp7QCAbGMKFbFMkY",
                  "collection": "creatureProperties"
              }
          ],
          "order": 121,
          "tags": [
              "savingThrow"
          ],
          "description": {
              "text": "Strength measures bodily power, athletic training, and the extent to which you can exert raw physical force.\n\n### Strength Checks\nA Strength check can model any attempt to lift, push, pull, or break something, to force your body through a space, or to otherwise apply brute force to a situation. The Athletics skill reflects aptitude in certain kinds of Strength checks.\n\n***Athletics.*** Your Strength (Athletics) check covers difficult situations you encounter while climbing, jumping, or swimming. Examples include the following activities:\n\n- You attempt to climb a sheer or slippery cliff, avoid hazards while scaling a wall, or cling to a surface while something is trying to knock you off.\n- You try to jump an unusually long distance or pull off a stunt mid jump.\n- You struggle to swim or stay afloat in treacherous currents, storm-tossed waves, or areas of thick seaweed. Or another creature tries to push or pull you underwater or otherwise interfere with your swimming.\n\n***Other Strength Checks.*** The DM might also call for a Strength check when you try to accomplish tasks like the following:\n\n- Force open a stuck, locked, or barred door\n- Break free of bonds\n- Push through a tunnel that is too small\n- Hang on to a wagon while being dragged behind it\n- Tip over a statue\n- Keep a boulder from rolling\n\n### Attack Rolls and Damage\nYou add your Strength modifier to your attack roll and your damage roll when attacking with a melee weapon such as a mace, a battleaxe, or a javelin. You use melee weapons to make melee attacks in hand-to-hand combat, and some of them can be thrown to make a ranged attack.\n\n### Lifting and Carrying\nYour Strength score determines the amount of weight you can bear. The following terms define what you can lift or carry.\n\n***Carrying Capacity.*** Your carrying capacity is your Strength score multiplied by 15. This is the weight (in pounds) that you can carry, which is high enough that most characters don't usually have to worry about it.\n***Push, Drag, or Lift.*** You can push, drag, or lift a weight in pounds up to twice your carrying capacity (or 30 times your Strength score). While pushing or dragging weight in excess of your carrying capacity, your speed drops to 5 feet.\n***Size and Strength.*** Larger creatures can bear more weight, whereas Tiny creatures can carry less. For each size category above Medium, double the creature's carrying capacity and the amount it can push, drag, or lift. For a Tiny creature, halve these weights.\n\n### Variant: Encumbrance\nThe rules for lifting and carrying are intentionally simple. Here is a variant if you are looking for more detailed rules for determining how a character is hindered by the weight of equipment. When you use this variant, ignore the Strength column of the Armor table in chapter 5.\n\nIf you carry weight in excess of 5 times your Strength score, you are encumbered, which means your speed drops by 10 feet.\n\nIf you carry weight in excess of 10 times your Strength score, up to your maximum carrying capacity, you are instead heavily encumbered, which means your speed drops by 20 feet and you have disadvantage on ability checks, attack rolls, and saving throws that use Strength, Dexterity, or Constitution.",
              "value": "Strength measures bodily power, athletic training, and the extent to which you can exert raw physical force.\n\n### Strength Checks\nA Strength check can model any attempt to lift, push, pull, or break something, to force your body through a space, or to otherwise apply brute force to a situation. The Athletics skill reflects aptitude in certain kinds of Strength checks.\n\n***Athletics.*** Your Strength (Athletics) check covers difficult situations you encounter while climbing, jumping, or swimming. Examples include the following activities:\n\n- You attempt to climb a sheer or slippery cliff, avoid hazards while scaling a wall, or cling to a surface while something is trying to knock you off.\n- You try to jump an unusually long distance or pull off a stunt mid jump.\n- You struggle to swim or stay afloat in treacherous currents, storm-tossed waves, or areas of thick seaweed. Or another creature tries to push or pull you underwater or otherwise interfere with your swimming.\n\n***Other Strength Checks.*** The DM might also call for a Strength check when you try to accomplish tasks like the following:\n\n- Force open a stuck, locked, or barred door\n- Break free of bonds\n- Push through a tunnel that is too small\n- Hang on to a wagon while being dragged behind it\n- Tip over a statue\n- Keep a boulder from rolling\n\n### Attack Rolls and Damage\nYou add your Strength modifier to your attack roll and your damage roll when attacking with a melee weapon such as a mace, a battleaxe, or a javelin. You use melee weapons to make melee attacks in hand-to-hand combat, and some of them can be thrown to make a ranged attack.\n\n### Lifting and Carrying\nYour Strength score determines the amount of weight you can bear. The following terms define what you can lift or carry.\n\n***Carrying Capacity.*** Your carrying capacity is your Strength score multiplied by 15. This is the weight (in pounds) that you can carry, which is high enough that most characters don't usually have to worry about it.\n***Push, Drag, or Lift.*** You can push, drag, or lift a weight in pounds up to twice your carrying capacity (or 30 times your Strength score). While pushing or dragging weight in excess of your carrying capacity, your speed drops to 5 feet.\n***Size and Strength.*** Larger creatures can bear more weight, whereas Tiny creatures can carry less. For each size category above Medium, double the creature's carrying capacity and the amount it can push, drag, or lift. For a Tiny creature, halve these weights.\n\n### Variant: Encumbrance\nThe rules for lifting and carrying are intentionally simple. Here is a variant if you are looking for more detailed rules for determining how a character is hindered by the weight of equipment. When you use this variant, ignore the Strength column of the Armor table in chapter 5.\n\nIf you carry weight in excess of 5 times your Strength score, you are encumbered, which means your speed drops by 10 feet.\n\nIf you carry weight in excess of 10 times your Strength score, up to your maximum carrying capacity, you are instead heavily encumbered, which means your speed drops by 20 feet and you have disadvantage on ability checks, attack rolls, and saving throws that use Strength, Dexterity, or Constitution.",
              "hash": 7741804650381958,
              "inlineCalculations": []
          },
          "libraryTags": [
              "savingThrow"
          ],
          "fillSlots": true,
          "searchable": false,
          "libraryNodeId": "Mp4L9hGjD92tt6u3S",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "v6jNFcMpvWmTc2rAN",
          "skillType": "save",
          "type": "skill",
          "name": "Dexterity Save",
          "variableName": "dexteritySave",
          "ability": "dexterity",
          "parent": {
              "id": "aDTewoAYXYJDKhTxb",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              },
              {
                  "id": "aDTewoAYXYJDKhTxb",
                  "collection": "creatureProperties"
              }
          ],
          "order": 123,
          "tags": [
              "savingThrow"
          ],
          "description": {
              "text": "Dexterity measures agility, reflexes, and balance.\n\n### Dexterity Checks\nA Dexterity check can model any attempt to move nimbly, quickly, or quietly, or to keep from falling on tricky footing. The Acrobatics, Sleight of Hand, and Stealth skills reflect aptitude in certain kinds of Dexterity checks.\n\n***Acrobatics.*** Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The DM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips.\n***Sleight of Hand.*** Whenever you attempt an act of legerdemain or manual trickery, such as planting something on someone else or concealing an object on your person, make a Dexterity (Sleight of Hand) check. The DM might also call for a Dexterity (Sleight of Hand) check to determine whether you can lift a coin purse off another person or slip something out of another person's pocket.\n***Stealth.*** Make a Dexterity (Stealth) check when you attempt to conceal yourself from enemies, slink past guards, slip away without being noticed, or sneak up on someone without being seen or heard.\n\n***Other Dexterity Checks.*** The DM might call for a Dexterity check when you try to accomplish tasks like the following:\n\n- Control a heavily laden cart on a steep descent\n- Steer a chariot around a tight turn\n- Pick a lock\n- Disable a trap\n- Securely tie up a prisoner\n- Wriggle free of bonds\n- Play a stringed instrument\n- Craft a small or detailed object\n\n### Attack Rolls and Damage\nYou add your Dexterity modifier to your attack roll and your damage roll when attacking with a ranged weapon, such as a sling or a longbow. You can also add your Dexterity modifier to your attack roll and your damage roll when attacking with a melee weapon that has the finesse property, such as a dagger or a rapier.\n\n### Armor Class\nDepending on the armor you wear, you might add some or all of your Dexterity modifier to your Armor Class, as described in chapter 5.\n\n### Initiative\nAt the beginning of every combat, you roll initiative by making a Dexterity check. Initiative determines the order of creatures' turns in combat, as described in chapter 9.",
              "value": "Dexterity measures agility, reflexes, and balance.\n\n### Dexterity Checks\nA Dexterity check can model any attempt to move nimbly, quickly, or quietly, or to keep from falling on tricky footing. The Acrobatics, Sleight of Hand, and Stealth skills reflect aptitude in certain kinds of Dexterity checks.\n\n***Acrobatics.*** Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The DM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips.\n***Sleight of Hand.*** Whenever you attempt an act of legerdemain or manual trickery, such as planting something on someone else or concealing an object on your person, make a Dexterity (Sleight of Hand) check. The DM might also call for a Dexterity (Sleight of Hand) check to determine whether you can lift a coin purse off another person or slip something out of another person's pocket.\n***Stealth.*** Make a Dexterity (Stealth) check when you attempt to conceal yourself from enemies, slink past guards, slip away without being noticed, or sneak up on someone without being seen or heard.\n\n***Other Dexterity Checks.*** The DM might call for a Dexterity check when you try to accomplish tasks like the following:\n\n- Control a heavily laden cart on a steep descent\n- Steer a chariot around a tight turn\n- Pick a lock\n- Disable a trap\n- Securely tie up a prisoner\n- Wriggle free of bonds\n- Play a stringed instrument\n- Craft a small or detailed object\n\n### Attack Rolls and Damage\nYou add your Dexterity modifier to your attack roll and your damage roll when attacking with a ranged weapon, such as a sling or a longbow. You can also add your Dexterity modifier to your attack roll and your damage roll when attacking with a melee weapon that has the finesse property, such as a dagger or a rapier.\n\n### Armor Class\nDepending on the armor you wear, you might add some or all of your Dexterity modifier to your Armor Class, as described in chapter 5.\n\n### Initiative\nAt the beginning of every combat, you roll initiative by making a Dexterity check. Initiative determines the order of creatures' turns in combat, as described in chapter 9.",
              "hash": 350657113461298,
              "inlineCalculations": []
          },
          "libraryTags": [
              "savingThrow"
          ],
          "fillSlots": true,
          "searchable": false,
          "libraryNodeId": "TPGWkMXXfxudHe3b8",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "NGX4nAJrvTAfAgnYg",
          "skillType": "save",
          "type": "skill",
          "name": "Intelligence Save",
          "variableName": "intelligenceSave",
          "ability": "intelligence",
          "parent": {
              "id": "5hyW93yiinJkPGecs",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5hyW93yiinJkPGecs",
                  "collection": "creatureProperties"
              }
          ],
          "order": 127,
          "tags": [
              "savingThrow"
          ],
          "description": {
              "text": "Intelligence measures mental acuity, accuracy of recall, and the ability to reason.\n\n### Intelligence Checks\nAn Intelligence check comes into play when you need to draw on logic, education, memory, or deductive reasoning. The Arcana, History, Investigation, Nature, and Religion skills reflect aptitude in certain kinds of Intelligence checks.\n\n***Arcana.*** Your Intelligence (Arcana) check measures your ability to recall lore about spells, magic items, eldritch symbols, magical traditions, the planes of existence, and the inhabitants of those planes.\n***History.*** Your Intelligence (History) check measures your ability to recall lore about historical events, legendary people, ancient kingdoms, past disputes, recent wars, and lost civilizations.\n***Investigation.*** When you look around for clues and make deductions based on those clues, you make an Intelligence (Investigation) check. You might deduce the location of a hidden object, discern from the appearance of a wound what kind of weapon dealt it, or determine the weakest point in a tunnel that could cause it to collapse. Poring through ancient scrolls in search of a hidden fragment of knowledge might also call for an Intelligence (Investigation) check.\n***Nature.*** Your Intelligence (Nature) check measures your ability to recall lore about terrain, plants and animals, the weather, and natural cycles.\n***Religion.*** Your Intelligence (Religion) check measures your ability to recall lore about deities, rites and prayers, religious hierarchies, holy symbols, and the practices of secret cults.\n\n***Other Intelligence Checks.*** The DM might call for an Intelligence check when you try to accomplish tasks like the following:\n\n- Communicate with a creature without using words\n- Estimate the value of a precious item\n- Pull together a disguise to pass as a city guard\n- Forge a document\n- Recall lore about a craft or trade\n- Win a game of skill\n\n### Spellcasting Ability\nWizards use Intelligence as their spellcasting ability, which helps determine the saving throw DCs of spells they cast.",
              "value": "Intelligence measures mental acuity, accuracy of recall, and the ability to reason.\n\n### Intelligence Checks\nAn Intelligence check comes into play when you need to draw on logic, education, memory, or deductive reasoning. The Arcana, History, Investigation, Nature, and Religion skills reflect aptitude in certain kinds of Intelligence checks.\n\n***Arcana.*** Your Intelligence (Arcana) check measures your ability to recall lore about spells, magic items, eldritch symbols, magical traditions, the planes of existence, and the inhabitants of those planes.\n***History.*** Your Intelligence (History) check measures your ability to recall lore about historical events, legendary people, ancient kingdoms, past disputes, recent wars, and lost civilizations.\n***Investigation.*** When you look around for clues and make deductions based on those clues, you make an Intelligence (Investigation) check. You might deduce the location of a hidden object, discern from the appearance of a wound what kind of weapon dealt it, or determine the weakest point in a tunnel that could cause it to collapse. Poring through ancient scrolls in search of a hidden fragment of knowledge might also call for an Intelligence (Investigation) check.\n***Nature.*** Your Intelligence (Nature) check measures your ability to recall lore about terrain, plants and animals, the weather, and natural cycles.\n***Religion.*** Your Intelligence (Religion) check measures your ability to recall lore about deities, rites and prayers, religious hierarchies, holy symbols, and the practices of secret cults.\n\n***Other Intelligence Checks.*** The DM might call for an Intelligence check when you try to accomplish tasks like the following:\n\n- Communicate with a creature without using words\n- Estimate the value of a precious item\n- Pull together a disguise to pass as a city guard\n- Forge a document\n- Recall lore about a craft or trade\n- Win a game of skill\n\n### Spellcasting Ability\nWizards use Intelligence as their spellcasting ability, which helps determine the saving throw DCs of spells they cast.",
              "hash": 3118855513388764,
              "inlineCalculations": []
          },
          "libraryTags": [
              "savingThrow"
          ],
          "fillSlots": true,
          "searchable": false,
          "libraryNodeId": "AoDcJ2txdCEcj2HKM",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "8xifea4KFi2xaXs9f",
          "name": "Speed",
          "variableName": "speed",
          "attributeType": "stat",
          "type": "attribute",
          "parent": {
              "id": "hGdiFYdc6g9qXfSYq",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "G2ho3rua9A3MAfwmW",
                  "collection": "creatureProperties"
              },
              {
                  "id": "hGdiFYdc6g9qXfSYq",
                  "collection": "creatureProperties"
              }
          ],
          "order": 52,
          "tags": [],
          "baseValue": {
              "calculation": "0",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "description": {
              "text": "On your turn, you can move a distance up to your speed. You can use as much or as little of your speed as you like on your turn, following the rules here.\nYour movement can include jumping, climbing, and swimming. These different modes of movement can be combined with walking, or they can constitute your entire move. However you’re moving, you deduct the distance of each part of your move from your speed until it is used up or until you are done moving.\n\n**Breaking Up Your Move**\nYou can break up your Movement on Your Turn, using some of your speed before and after your action. For example, if you have a speed of 30 feet, you can move 10 feet, take your action, and then move 20 feet.\n\n**Moving between Attacks**\nIf you take an action that includes more than one weapon attack, you can break up your movement even further by moving between those attacks. For example, a Fighter who can make two attacks with the Extra Attack feature and who has a speed of 25 feet could move 10 feet, make an Attack, move 15 feet, and then Attack again.\n\n**Using Different Speeds**\nIf you have more than one speed, such as your walking speed and a flying speed, you can switch back and forth between your speeds during your move. Whenever you switch, subtract the distance you’ve already moved from the new speed. The result determines how much farther you can move. If the result is 0 or less, you can’t use the new speed during the current move.\n\n**Difficult Terrain**\nCombat rarely takes place in bare rooms or on featureless plains. Boulder--strewn caverns, briar-- choked forests, treacherous staircases—the setting of a typical fight contains difficult terrain. Every foot of Movement in difficult terrain costs 1 extra foot. This rule is true even if multiple things in a space count as difficult terrain. Low furniture, rubble, undergrowth, steep stairs, snow, and shallow bogs are examples of difficult terrain. The space of another creature, whether Hostile or not, also counts as difficult terrain.\n\n**Being Prone**\nCombatants often find themselves lying on the ground, either because they are knocked down or because they throw themselves down. In the game, they are Prone. You can drop prone without using any of your speed. Standing up takes more effort; doing so costs an amount of Movement equal to half your speed.\nFor example, if your speed is 30 feet, you must spend 15 feet of Movement to stand up. You can’t stand up if you don’t have enough Movement left or if your speed is 0. To move while prone, you must crawl or use magic such as teleportation. Every foot of Movement while crawling costs 1 extra foot. Crawling 1 foot in difficult terrain, therefore, costs 3 feet of Movement.",
              "value": "On your turn, you can move a distance up to your speed. You can use as much or as little of your speed as you like on your turn, following the rules here.\nYour movement can include jumping, climbing, and swimming. These different modes of movement can be combined with walking, or they can constitute your entire move. However you’re moving, you deduct the distance of each part of your move from your speed until it is used up or until you are done moving.\n\n**Breaking Up Your Move**\nYou can break up your Movement on Your Turn, using some of your speed before and after your action. For example, if you have a speed of 30 feet, you can move 10 feet, take your action, and then move 20 feet.\n\n**Moving between Attacks**\nIf you take an action that includes more than one weapon attack, you can break up your movement even further by moving between those attacks. For example, a Fighter who can make two attacks with the Extra Attack feature and who has a speed of 25 feet could move 10 feet, make an Attack, move 15 feet, and then Attack again.\n\n**Using Different Speeds**\nIf you have more than one speed, such as your walking speed and a flying speed, you can switch back and forth between your speeds during your move. Whenever you switch, subtract the distance you’ve already moved from the new speed. The result determines how much farther you can move. If the result is 0 or less, you can’t use the new speed during the current move.\n\n**Difficult Terrain**\nCombat rarely takes place in bare rooms or on featureless plains. Boulder--strewn caverns, briar-- choked forests, treacherous staircases—the setting of a typical fight contains difficult terrain. Every foot of Movement in difficult terrain costs 1 extra foot. This rule is true even if multiple things in a space count as difficult terrain. Low furniture, rubble, undergrowth, steep stairs, snow, and shallow bogs are examples of difficult terrain. The space of another creature, whether Hostile or not, also counts as difficult terrain.\n\n**Being Prone**\nCombatants often find themselves lying on the ground, either because they are knocked down or because they throw themselves down. In the game, they are Prone. You can drop prone without using any of your speed. Standing up takes more effort; doing so costs an amount of Movement equal to half your speed.\nFor example, if your speed is 30 feet, you must spend 15 feet of Movement to stand up. You can’t stand up if you don’t have enough Movement left or if your speed is 0. To move while prone, you must crawl or use magic such as teleportation. Every foot of Movement while crawling costs 1 extra foot. Crawling 1 foot in difficult terrain, therefore, costs 3 feet of Movement.",
              "hash": 4692255785694738,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "libraryNodeId": "ZhKaf3dWaAFKgFJ8y",
          "advantage": 0,
          "effects": [
              {
                  "_id": "Jq93fy4RZgeSTxDbF",
                  "name": "Minimum",
                  "operation": "min",
                  "amount": {
                      "value": 0
                  },
                  "type": "effect"
              },
              {
                  "_id": "aysGyCPDW4s6awbKi",
                  "name": "Zero while unconscious",
                  "operation": "max",
                  "amount": {
                      "value": 0
                  },
                  "type": "effect"
              },
              {
                  "_id": "8xifea4KFi2xaXs9f",
                  "name": "Speed",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "FYytXv8D2gRjxY4YP",
          "operation": "min",
          "stats": [
              "hitPoints"
          ],
          "type": "effect",
          "parent": {
              "id": "KmSJkLLQXv8ubDRM9",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "KmSJkLLQXv8ubDRM9",
                  "collection": "creatureProperties"
              }
          ],
          "order": 54,
          "tags": [],
          "amount": {
              "calculation": "level",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1099032145722476,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "level"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "level not found, set to 0"
                  }
              ],
              "value": 0
          },
          "name": "Minimum",
          "libraryTags": [],
          "libraryNodeId": "paAjfWcv9irqfupiP"
      },
      {
          "_id": "aDTewoAYXYJDKhTxb",
          "name": "Dexterity",
          "variableName": "dexterity",
          "attributeType": "ability",
          "type": "attribute",
          "parent": {
              "id": "gTqDmEvx3nSegxx8f",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              }
          ],
          "order": 122,
          "tags": [
              "abilityCheck",
              "dexterityCheck"
          ],
          "baseValue": {
              "calculation": "unmodifiedDexterity",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 5378078943829974,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "unmodifiedDexterity"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "unmodifiedDexterity not found, set to 0"
                  }
              ],
              "value": 0
          },
          "description": {
              "text": "Dexterity measures agility, reflexes, and balance.\n\nA Dexterity check can model any attempt to move nimbly, quickly, or quietly, or to keep from Falling on tricky footing. The Acrobatics, Sleight of Hand, and Stealth Skills reflect aptitude in certain kinds of Dexterity Checks. \n\nThe GM might call for a Dexterity check when you try to accomplish tasks like the following:\n- Control a heavily laden cart on a steep descent\n- Steer a chariot around a tight turn\n- Pick a lock\n- Disable a trap\n- Securely tie up a prisoner\n- Wriggle free of bonds\n- Play a stringed Instrument\n- Craft a small or detailed object",
              "value": "Dexterity measures agility, reflexes, and balance.\n\nA Dexterity check can model any attempt to move nimbly, quickly, or quietly, or to keep from Falling on tricky footing. The Acrobatics, Sleight of Hand, and Stealth Skills reflect aptitude in certain kinds of Dexterity Checks. \n\nThe GM might call for a Dexterity check when you try to accomplish tasks like the following:\n- Control a heavily laden cart on a steep descent\n- Steer a chariot around a tight turn\n- Pick a lock\n- Disable a trap\n- Securely tie up a prisoner\n- Wriggle free of bonds\n- Play a stringed Instrument\n- Craft a small or detailed object",
              "hash": 6539753287428290,
              "inlineCalculations": []
          },
          "libraryTags": [
              "abilityCheck"
          ],
          "fillSlots": true,
          "searchable": true,
          "reset": "longRest",
          "libraryNodeId": "7MywmBLTvgPnsyS5P",
          "advantage": 0,
          "effects": [
              {
                  "_id": "aDTewoAYXYJDKhTxb",
                  "name": "Dexterity",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              },
              {
                  "_id": "ZX4FocoCgrvq5hpWo",
                  "name": "Max Dexterity",
                  "operation": "max",
                  "amount": {
                      "value": 20
                  },
                  "type": "effect"
              }
          ],
          "modifier": -5,
          "total": 0,
          "value": 0
      },
      {
          "_id": "r7rwXhEPDKx7mjyKQ",
          "name": "Charisma",
          "variableName": "charisma",
          "attributeType": "ability",
          "type": "attribute",
          "parent": {
              "id": "gTqDmEvx3nSegxx8f",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              }
          ],
          "order": 130,
          "tags": [
              "abilityCheck",
              "charismaCheck"
          ],
          "baseValue": {
              "calculation": "unmodifiedCharisma",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 6503339487711312,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "unmodifiedCharisma"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "unmodifiedCharisma not found, set to 0"
                  }
              ],
              "value": 0
          },
          "description": {
              "text": "Charisma measures your ability to interact effectively with others. It includes such factors as confidence and eloquence, and it can represent a charming or commanding personality. A Charisma check might arise when you try to influence or entertain others, when you try to make an impression or tell a convincing lie, or when you are navigating a tricky social situation. The Deception, Intimidation, Performance, and Persuasion Skills reflect aptitude in certain kinds of Charisma Checks.\n\nThe GM might call for a Charisma check when you try to accomplish tasks like the following:\n- Find the best person to talk to for news, rumors, and gossip\n- Blend into a crowd to get the sense of key topics of conversation",
              "value": "Charisma measures your ability to interact effectively with others. It includes such factors as confidence and eloquence, and it can represent a charming or commanding personality. A Charisma check might arise when you try to influence or entertain others, when you try to make an impression or tell a convincing lie, or when you are navigating a tricky social situation. The Deception, Intimidation, Performance, and Persuasion Skills reflect aptitude in certain kinds of Charisma Checks.\n\nThe GM might call for a Charisma check when you try to accomplish tasks like the following:\n- Find the best person to talk to for news, rumors, and gossip\n- Blend into a crowd to get the sense of key topics of conversation",
              "hash": 2879343985870081,
              "inlineCalculations": []
          },
          "libraryTags": [
              "abilityCheck"
          ],
          "fillSlots": true,
          "searchable": true,
          "reset": "longRest",
          "libraryNodeId": "GN62QGNXdB3fztcoq",
          "advantage": 0,
          "effects": [
              {
                  "_id": "r7rwXhEPDKx7mjyKQ",
                  "name": "Charisma",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              },
              {
                  "_id": "8jsYT2dRWfLtXKH2d",
                  "name": "Max Charisma",
                  "operation": "max",
                  "amount": {
                      "value": 20
                  },
                  "type": "effect"
              }
          ],
          "modifier": -5,
          "total": 0,
          "value": 0
      },
      {
          "_id": "m4b8F9CpFMYNHfvrm",
          "name": "Carrying Capacity",
          "variableName": "carryingCapacity",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "QPp7QCAbGMKFbFMkY",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              },
              {
                  "id": "QPp7QCAbGMKFbFMkY",
                  "collection": "creatureProperties"
              }
          ],
          "order": 120,
          "tags": [],
          "baseValue": {
              "calculation": "strength * 15 * [0.5,1,1,2,4,8][creatureSize]",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 4597180825239598,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "operator",
                      "left": {
                          "parseType": "symbol",
                          "name": "strength"
                      },
                      "right": {
                          "parseType": "constant",
                          "valueType": "number",
                          "value": 15
                      },
                      "operator": "*",
                      "fn": "multiply"
                  },
                  "right": {
                      "parseType": "index",
                      "array": {
                          "parseType": "array",
                          "values": [
                              {
                                  "parseType": "constant",
                                  "valueType": "number",
                                  "value": 0.5
                              },
                              {
                                  "parseType": "constant",
                                  "valueType": "number",
                                  "value": 1
                              },
                              {
                                  "parseType": "constant",
                                  "valueType": "number",
                                  "value": 1
                              },
                              {
                                  "parseType": "constant",
                                  "valueType": "number",
                                  "value": 2
                              },
                              {
                                  "parseType": "constant",
                                  "valueType": "number",
                                  "value": 4
                              },
                              {
                                  "parseType": "constant",
                                  "valueType": "number",
                                  "value": 8
                              }
                          ]
                      },
                      "index": {
                          "parseType": "symbol",
                          "name": "creatureSize"
                      }
                  },
                  "operator": "*",
                  "fn": "multiply"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "warning",
                      "message": "Index of 0 is out of range for an array of length 6"
                  }
              ],
              "value": "0 * [0.5, 1, 1, 2, 4, 8][0]"
          },
          "libraryTags": [],
          "libraryNodeId": "kqwvxNSxzN5bFSK2z",
          "effects": [
              {
                  "_id": "m4b8F9CpFMYNHfvrm",
                  "name": "Carrying Capacity",
                  "operation": "base",
                  "amount": {
                      "value": "0 * [0.5, 1, 1, 2, 4, 8][0]"
                  },
                  "type": "attribute"
              }
          ],
          "total": "0 * [0.5, 1, 1, 2, 4, 8][0]",
          "value": null
      },
      {
          "_id": "fdgdsYt2T52isjkTE",
          "skillType": "save",
          "type": "skill",
          "name": "Constitution Save",
          "variableName": "constitutionSave",
          "ability": "constitution",
          "parent": {
              "id": "vyo6F69fKbTW5uD2u",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              },
              {
                  "id": "vyo6F69fKbTW5uD2u",
                  "collection": "creatureProperties"
              }
          ],
          "order": 125,
          "tags": [
              "savingThrow"
          ],
          "description": {
              "text": "Constitution measures health, stamina, and vital force.\n\n### Constitution Checks\nConstitution checks are uncommon, and no skills apply to Constitution checks, because the endurance this ability represents is largely passive rather than involving a specific effort on the part of a character or monster.\n\nA Constitution check can model your attempt to push beyond normal limits, however.\n\nThe DM might call for a Constitution check when you try to accomplish tasks like the following:\n\n- Hold your breath\n- March or labor for hours without rest\n- Go without sleep\n- Survive without food or water\n- Quaff an entire stein of ale in one go\n\n### Hit Points\nYour Constitution modifier contributes to your hit points. Typically, you add your Constitution modifier to each Hit Die you roll for your hit points.\n\nIf your Constitution modifier changes, your hit point maximum changes as well, as though you had the new modifier from 1st level. For example, if you raise your Constitution score when you reach 4th level and your Constitution modifier increases from +1 to +2, you adjust your hit point maximum as though the modifier had always been +2. So you add 3 hit points for your first three levels, and then roll your hit points for 4th level using your new modifier. Or if you're 7th level and some effect lowers your Constitution score so as to reduce your Constitution modifier by 1, your hit point maximum is reduced by 7.",
              "value": "Constitution measures health, stamina, and vital force.\n\n### Constitution Checks\nConstitution checks are uncommon, and no skills apply to Constitution checks, because the endurance this ability represents is largely passive rather than involving a specific effort on the part of a character or monster.\n\nA Constitution check can model your attempt to push beyond normal limits, however.\n\nThe DM might call for a Constitution check when you try to accomplish tasks like the following:\n\n- Hold your breath\n- March or labor for hours without rest\n- Go without sleep\n- Survive without food or water\n- Quaff an entire stein of ale in one go\n\n### Hit Points\nYour Constitution modifier contributes to your hit points. Typically, you add your Constitution modifier to each Hit Die you roll for your hit points.\n\nIf your Constitution modifier changes, your hit point maximum changes as well, as though you had the new modifier from 1st level. For example, if you raise your Constitution score when you reach 4th level and your Constitution modifier increases from +1 to +2, you adjust your hit point maximum as though the modifier had always been +2. So you add 3 hit points for your first three levels, and then roll your hit points for 4th level using your new modifier. Or if you're 7th level and some effect lowers your Constitution score so as to reduce your Constitution modifier by 1, your hit point maximum is reduced by 7.",
              "hash": 4713130219719661,
              "inlineCalculations": []
          },
          "libraryTags": [
              "savingThrow"
          ],
          "fillSlots": true,
          "searchable": false,
          "libraryNodeId": "y5rYA7gL57jseJu5D",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "Yp9NHs3pN7bZYe7bN",
          "skillType": "save",
          "type": "skill",
          "name": "Wisdom Save",
          "variableName": "wisdomSave",
          "ability": "wisdom",
          "parent": {
              "id": "yobsWF82fk3H6rcWs",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              },
              {
                  "id": "yobsWF82fk3H6rcWs",
                  "collection": "creatureProperties"
              }
          ],
          "order": 129,
          "tags": [
              "savingThrow"
          ],
          "description": {
              "text": "Wisdom reflects how attuned you are to the world around you and represents perceptiveness and intuition.\n\n### Wisdom Checks\nA Wisdom check might reflect an effort to read body language, understand someone's feelings, notice things about the environment, or care for an injured person. The Animal Handling, Insight, Medicine, Perception, and Survival skills reflect aptitude in certain kinds of Wisdom checks.\n\n***Animal Handling.*** When there is any question whether you can calm down a domesticated animal, keep a mount from getting spooked, or intuit an animal's intentions, the DM might call for a Wisdom (Animal Handling) check. You also make a Wisdom (Animal Handling) check to control your mount when you attempt a risky maneuver.\n\n***Insight.*** Your Wisdom (Insight) check decides whether you can determine the true intentions of a creature, such as when searching out a lie or predicting someone's next move. Doing so involves gleaning clues from body language, speech habits, and changes in mannerisms.\n\n***Medicine.*** A Wisdom (Medicine) check lets you try to stabilize a dying companion or diagnose an illness.\n\n***Perception.*** Your Wisdom (Perception) check lets you spot, hear, or otherwise detect the presence of something. It measures your general awareness of your surroundings and the keenness of your senses.\nFor example, you might try to hear a conversation through a closed door, eavesdrop under an open window, or hear monsters moving stealthily in the forest. Or you might try to spot things that are obscured or easy to miss, whether they are orcs lying in ambush on a road, thugs hiding in the shadows of an alley, or candlelight under a closed secret door.\n\n***Survival.*** The DM might ask you to make a Wisdom (Survival) check to follow tracks, hunt wild game, guide your group through frozen wastelands, identify signs that owlbears live nearby, predict the weather, or avoid quicksand and other natural hazards.\n\n***Other Wisdom Checks.*** The DM might call for a Wisdom check when you try to accomplish tasks like the following:\n\n- Get a gut feeling about what course of action to follow\n- Discern whether a seemingly dead or living creature is undead\n\n### Spellcasting Ability\nClerics, druids, and rangers use Wisdom as their spellcasting ability, which helps determine the saving throw DCs of spells they cast.",
              "value": "Wisdom reflects how attuned you are to the world around you and represents perceptiveness and intuition.\n\n### Wisdom Checks\nA Wisdom check might reflect an effort to read body language, understand someone's feelings, notice things about the environment, or care for an injured person. The Animal Handling, Insight, Medicine, Perception, and Survival skills reflect aptitude in certain kinds of Wisdom checks.\n\n***Animal Handling.*** When there is any question whether you can calm down a domesticated animal, keep a mount from getting spooked, or intuit an animal's intentions, the DM might call for a Wisdom (Animal Handling) check. You also make a Wisdom (Animal Handling) check to control your mount when you attempt a risky maneuver.\n\n***Insight.*** Your Wisdom (Insight) check decides whether you can determine the true intentions of a creature, such as when searching out a lie or predicting someone's next move. Doing so involves gleaning clues from body language, speech habits, and changes in mannerisms.\n\n***Medicine.*** A Wisdom (Medicine) check lets you try to stabilize a dying companion or diagnose an illness.\n\n***Perception.*** Your Wisdom (Perception) check lets you spot, hear, or otherwise detect the presence of something. It measures your general awareness of your surroundings and the keenness of your senses.\nFor example, you might try to hear a conversation through a closed door, eavesdrop under an open window, or hear monsters moving stealthily in the forest. Or you might try to spot things that are obscured or easy to miss, whether they are orcs lying in ambush on a road, thugs hiding in the shadows of an alley, or candlelight under a closed secret door.\n\n***Survival.*** The DM might ask you to make a Wisdom (Survival) check to follow tracks, hunt wild game, guide your group through frozen wastelands, identify signs that owlbears live nearby, predict the weather, or avoid quicksand and other natural hazards.\n\n***Other Wisdom Checks.*** The DM might call for a Wisdom check when you try to accomplish tasks like the following:\n\n- Get a gut feeling about what course of action to follow\n- Discern whether a seemingly dead or living creature is undead\n\n### Spellcasting Ability\nClerics, druids, and rangers use Wisdom as their spellcasting ability, which helps determine the saving throw DCs of spells they cast.",
              "hash": 8387525951273524,
              "inlineCalculations": []
          },
          "libraryTags": [
              "savingThrow"
          ],
          "fillSlots": true,
          "searchable": false,
          "libraryNodeId": "Jsxt7SzgoSorwkBAJ",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "Jq93fy4RZgeSTxDbF",
          "operation": "min",
          "stats": [
              "speed",
              "unmodifiedSpeed"
          ],
          "type": "effect",
          "parent": {
              "id": "G2ho3rua9A3MAfwmW",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "G2ho3rua9A3MAfwmW",
                  "collection": "creatureProperties"
              }
          ],
          "order": 49,
          "tags": [],
          "amount": {
              "calculation": "0",
              "_key": "amount",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "name": "Minimum",
          "libraryTags": [],
          "libraryNodeId": "gqGiG6x9wWDRzxaFo"
      },
      {
          "_id": "6MZCHjJAFnXEhJTAH",
          "name": "Armor Class",
          "variableName": "armor",
          "attributeType": "stat",
          "type": "attribute",
          "parent": {
              "id": "ss46JEMWKxKBiPce3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 91,
          "tags": [],
          "baseValue": {
              "calculation": "10+dexterity.modifier",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 8485884389787522,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 10
                  },
                  "right": {
                      "parseType": "accessor",
                      "path": [
                          "modifier"
                      ],
                      "name": "dexterity"
                  },
                  "operator": "+",
                  "fn": "add"
              },
              "parseError": null,
              "errors": [],
              "value": 5
          },
          "description": {
              "text": "Your Armor Class (AC) represents how well your character avoids being wounded in battle. Things that contribute to your AC include the armor you wear, the shield you carry, and your Dexterity modifier. Not all characters wear armor or carry shields, however.\n\nWithout armor or a shield, your character's AC equals 10 + his or her Dexterity modifier. If your character wears armor, carries a shield, or both, calculate your AC using the rules in chapter 5. Record your AC on your character sheet.\n\nYour character needs to be proficient with armor and shields to wear and use them effectively, and your armor and shield proficiencies are determined by your class.\n\nThere are drawbacks to wearing armor or carrying a shield if you lack the required proficiency, as explained in chapter 5.\n\nSome spells and class features give you a different way to calculate your AC. If you have multiple features that give you different ways to calculate your AC, you choose which one to use.",
              "value": "Your Armor Class (AC) represents how well your character avoids being wounded in battle. Things that contribute to your AC include the armor you wear, the shield you carry, and your Dexterity modifier. Not all characters wear armor or carry shields, however.\n\nWithout armor or a shield, your character's AC equals 10 + his or her Dexterity modifier. If your character wears armor, carries a shield, or both, calculate your AC using the rules in chapter 5. Record your AC on your character sheet.\n\nYour character needs to be proficient with armor and shields to wear and use them effectively, and your armor and shield proficiencies are determined by your class.\n\nThere are drawbacks to wearing armor or carrying a shield if you lack the required proficiency, as explained in chapter 5.\n\nSome spells and class features give you a different way to calculate your AC. If you have multiple features that give you different ways to calculate your AC, you choose which one to use.",
              "hash": 8051908672890785,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "libraryNodeId": "SNhNNJbAmnAKFSg8g",
          "effects": [
              {
                  "_id": "6MZCHjJAFnXEhJTAH",
                  "name": "Armor Class",
                  "operation": "base",
                  "amount": {
                      "value": 5
                  },
                  "type": "attribute"
              }
          ],
          "total": 5,
          "value": 5
      },
      {
          "_id": "Qh9pbGT24RYW8MBzw",
          "type": "folder",
          "name": "Base",
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 45,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "k2wa8JyQHaTWXx7bQ"
      },
      {
          "_id": "dKpfbjniudhCdcGBK",
          "name": "Long Jump Distance",
          "variableName": "longJumpDistance",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "QPp7QCAbGMKFbFMkY",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              },
              {
                  "id": "QPp7QCAbGMKFbFMkY",
                  "collection": "creatureProperties"
              }
          ],
          "order": 116,
          "tags": [],
          "baseValue": {
              "calculation": "strength",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 5770508834547116,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "strength"
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "libraryTags": [],
          "libraryNodeId": "H5LWTpSR8XfcesQ7N",
          "effects": [
              {
                  "_id": "dKpfbjniudhCdcGBK",
                  "name": "Long Jump Distance",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "JLdf4GfpphazunEfi",
          "skillType": "save",
          "type": "skill",
          "name": "Charisma Save",
          "variableName": "charismaSave",
          "ability": "charisma",
          "parent": {
              "id": "r7rwXhEPDKx7mjyKQ",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              },
              {
                  "id": "r7rwXhEPDKx7mjyKQ",
                  "collection": "creatureProperties"
              }
          ],
          "order": 131,
          "tags": [
              "savingThrow"
          ],
          "description": {
              "text": "Charisma measures your ability to interact effectively with others. It includes such factors as confidence and eloquence, and it can represent a charming or commanding personality.\n\n### Charisma Checks\nA Charisma check might arise when you try to influence or entertain others, when you try to make an impression or tell a convincing lie, or when you are navigating a tricky social situation. The Deception, Intimidation, Performance, and Persuasion skills reflect aptitude in certain kinds of Charisma checks.\n\n***Deception.*** Your Charisma (Deception) check determines whether you can convincingly hide the truth, either verbally or through your actions. This deception can encompass everything from misleading others through ambiguity to telling outright lies. Typical situations include trying to fast-talk a guard, con a merchant, earn money through gambling, pass yourself off in a disguise, dull someone's suspicions with false assurances, or maintain a straight face while telling a blatant lie.\n\n***Intimidation.*** When you attempt to influence someone through overt threats, hostile actions, and physical violence, the DM might ask you to make a Charisma (Intimidation) check. Examples include trying to pry information out of a prisoner, convincing street thugs to back down from a confrontation, or using the edge of a broken bottle to convince a sneering vizier to reconsider a decision.\n\n***Performance.*** Your Charisma (Performance) check determines how well you can delight an audience with music, dance, acting, storytelling, or some other form of entertainment.\n\n***Persuasion.*** When you attempt to influence someone or a group of people with tact, social graces, or good nature, the DM might ask you to make a Charisma (Persuasion) check. Typically, you use persuasion when acting in good faith, to foster friendships, make cordial requests, or exhibit proper etiquette. Examples of persuading others include convincing a chamberlain to let your party see the king, negotiating peace between warring tribes, or inspiring a crowd of townsfolk.\n\n***Other Charisma Checks.*** The DM might call for a Charisma check when you try to accomplish tasks like the following:\n\n- Find the best person to talk to for news, rumors, and gossip\n- Blend into a crowd to get the sense of key topics of conversation\n\n### Spellcasting Ability\nBards, paladins, sorcerers, and warlocks use Charisma as their spellcasting ability, which helps determine the saving throw DCs of spells they cast.",
              "value": "Charisma measures your ability to interact effectively with others. It includes such factors as confidence and eloquence, and it can represent a charming or commanding personality.\n\n### Charisma Checks\nA Charisma check might arise when you try to influence or entertain others, when you try to make an impression or tell a convincing lie, or when you are navigating a tricky social situation. The Deception, Intimidation, Performance, and Persuasion skills reflect aptitude in certain kinds of Charisma checks.\n\n***Deception.*** Your Charisma (Deception) check determines whether you can convincingly hide the truth, either verbally or through your actions. This deception can encompass everything from misleading others through ambiguity to telling outright lies. Typical situations include trying to fast-talk a guard, con a merchant, earn money through gambling, pass yourself off in a disguise, dull someone's suspicions with false assurances, or maintain a straight face while telling a blatant lie.\n\n***Intimidation.*** When you attempt to influence someone through overt threats, hostile actions, and physical violence, the DM might ask you to make a Charisma (Intimidation) check. Examples include trying to pry information out of a prisoner, convincing street thugs to back down from a confrontation, or using the edge of a broken bottle to convince a sneering vizier to reconsider a decision.\n\n***Performance.*** Your Charisma (Performance) check determines how well you can delight an audience with music, dance, acting, storytelling, or some other form of entertainment.\n\n***Persuasion.*** When you attempt to influence someone or a group of people with tact, social graces, or good nature, the DM might ask you to make a Charisma (Persuasion) check. Typically, you use persuasion when acting in good faith, to foster friendships, make cordial requests, or exhibit proper etiquette. Examples of persuading others include convincing a chamberlain to let your party see the king, negotiating peace between warring tribes, or inspiring a crowd of townsfolk.\n\n***Other Charisma Checks.*** The DM might call for a Charisma check when you try to accomplish tasks like the following:\n\n- Find the best person to talk to for news, rumors, and gossip\n- Blend into a crowd to get the sense of key topics of conversation\n\n### Spellcasting Ability\nBards, paladins, sorcerers, and warlocks use Charisma as their spellcasting ability, which helps determine the saving throw DCs of spells they cast.",
              "hash": 8208166129133497,
              "inlineCalculations": []
          },
          "libraryTags": [
              "savingThrow"
          ],
          "fillSlots": true,
          "searchable": false,
          "libraryNodeId": "pTSYTgMiqcrgHwkGC",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "aysGyCPDW4s6awbKi",
          "operation": "max",
          "stats": [
              "speed",
              "unmodifiedSpeed",
              "flySpeed",
              "swimSpeed",
              "burrowSpeed"
          ],
          "type": "effect",
          "parent": {
              "id": "G2ho3rua9A3MAfwmW",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "G2ho3rua9A3MAfwmW",
                  "collection": "creatureProperties"
              }
          ],
          "order": 50,
          "tags": [],
          "amount": {
              "calculation": "hitPoints <= 0 ? 0 : 'N/A'",
              "_key": "amount",
              "type": "_calculation",
              "hash": 6790848891183177,
              "parseNode": {
                  "parseType": "if",
                  "condition": {
                      "parseType": "operator",
                      "left": {
                          "parseType": "symbol",
                          "name": "hitPoints"
                      },
                      "right": {
                          "parseType": "constant",
                          "valueType": "number",
                          "value": 0
                      },
                      "operator": "<=",
                      "fn": "relation"
                  },
                  "consequent": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 0
                  },
                  "alternative": {
                      "parseType": "constant",
                      "valueType": "string",
                      "value": "N/A"
                  }
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "name": "Zero while unconscious",
          "libraryTags": [],
          "libraryNodeId": "iEfQqb8jKgASYwx7Z"
      },
      {
          "_id": "iMHDsMjueKDSEAgx9",
          "name": "Unmodified Speed",
          "variableName": "unmodifiedSpeed",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "G2ho3rua9A3MAfwmW",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "G2ho3rua9A3MAfwmW",
                  "collection": "creatureProperties"
              }
          ],
          "order": 48,
          "tags": [],
          "baseValue": {
              "calculation": "0",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "libraryTags": [],
          "libraryNodeId": "TdsWmo7AykBkyBkZF",
          "advantage": 0,
          "effects": [
              {
                  "_id": "iMHDsMjueKDSEAgx9",
                  "name": "Unmodified Speed",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              },
              {
                  "_id": "Jq93fy4RZgeSTxDbF",
                  "name": "Minimum",
                  "operation": "min",
                  "amount": {
                      "value": 0
                  },
                  "type": "effect"
              },
              {
                  "_id": "aysGyCPDW4s6awbKi",
                  "name": "Zero while unconscious",
                  "operation": "max",
                  "amount": {
                      "value": 0
                  },
                  "type": "effect"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "G2ho3rua9A3MAfwmW",
          "type": "folder",
          "name": "Speed",
          "parent": {
              "id": "ss46JEMWKxKBiPce3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 47,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "k6jvcSPDKK9B9wb74"
      },
      {
          "_id": "hGdiFYdc6g9qXfSYq",
          "type": "toggle",
          "name": "Wild Shape Inactive?",
          "parent": {
              "id": "G2ho3rua9A3MAfwmW",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "G2ho3rua9A3MAfwmW",
                  "collection": "creatureProperties"
              }
          ],
          "order": 51,
          "tags": [],
          "condition": {
              "calculation": "!wildShapeActive",
              "_key": "condition",
              "type": "_calculation",
              "hash": 2682706654298046,
              "parseNode": {
                  "parseType": "not",
                  "right": {
                      "parseType": "symbol",
                      "name": "wildShapeActive"
                  }
              },
              "parseError": null,
              "errors": [],
              "value": true
          },
          "libraryTags": [],
          "libraryNodeId": "by6qd5WrgXDinxLFR"
      },
      {
          "_id": "WSdpYYZzr6tDgnazh",
          "slotTags": [
              "extension",
              "LoV"
          ],
          "type": "propertySlot",
          "name": "Extensions",
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 186,
          "tags": [
              "extensionSlot"
          ],
          "ignored": false,
          "hideWhenFull": false,
          "quantityExpected": {
              "calculation": "0",
              "_key": "quantityExpected",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "slotCondition": {
              "calculation": "(jonStatus <= 2) && (tutorialStatus <= 2)",
              "_key": "slotCondition",
              "type": "_calculation",
              "hash": 8473276353802711,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 2
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 2
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "operator": "&&",
                  "fn": "and"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "libraryTags": [],
          "extraTags": [],
          "unique": "uniqueInSlot",
          "libraryNodeId": "6hhx7DHPCTng38Sp3",
          "totalFilled": 0
      },
      {
          "_id": "6veZ6Qw2KRvkcYEF8",
          "slotTags": [
              "LoV"
          ],
          "type": "propertySlot",
          "name": "Items",
          "slotType": "item",
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 188,
          "tags": [
              "itemSlot"
          ],
          "ignored": true,
          "hideWhenFull": false,
          "quantityExpected": {
              "calculation": "0",
              "_key": "quantityExpected",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "libraryTags": [],
          "extraTags": [],
          "unique": "uniqueInSlot",
          "slotCondition": {
              "calculation": "(jonStatus <= 1) && (tutorialStatus <= 1)",
              "_key": "slotCondition",
              "type": "_calculation",
              "hash": 7654397209521769,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "operator": "&&",
                  "fn": "and"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "libraryNodeId": "JXLphTrqgnCP9Bn8i",
          "totalFilled": 0
      },
      {
          "_id": "xr93hyGxpXo9yf7cy",
          "operation": "max",
          "stats": [
              "intelligence"
          ],
          "type": "effect",
          "parent": {
              "id": "6z9BGmCDDGQxroK6h",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              }
          ],
          "order": 139,
          "tags": [],
          "amount": {
              "calculation": "maxIntelligenceScore",
              "_key": "amount",
              "type": "_calculation",
              "hash": 6833517280162936,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "maxIntelligenceScore"
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "name": "Max Intelligence",
          "libraryTags": [],
          "libraryNodeId": "LGEWjELQxFGhf7iDr"
      },
      {
          "_id": "ZX4FocoCgrvq5hpWo",
          "operation": "max",
          "stats": [
              "dexterity"
          ],
          "type": "effect",
          "parent": {
              "id": "6z9BGmCDDGQxroK6h",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              }
          ],
          "order": 135,
          "tags": [],
          "amount": {
              "calculation": "maxDexterityScore",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1673960936433274,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "maxDexterityScore"
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "name": "Max Dexterity",
          "libraryTags": [],
          "libraryNodeId": "Y7wiBMNqi2iBk2xvJ"
      },
      {
          "_id": "BmS88tM4W7i7cszce",
          "name": "maxCharismaScore",
          "variableName": "maxCharismaScore",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "8jsYT2dRWfLtXKH2d",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8jsYT2dRWfLtXKH2d",
                  "collection": "creatureProperties"
              }
          ],
          "order": 144,
          "tags": [],
          "baseValue": {
              "calculation": "20",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 5429744425536711,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 20
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "libraryTags": [],
          "libraryNodeId": "qQq6PoeiWG5dCxxES",
          "advantage": 0,
          "effects": [
              {
                  "_id": "BmS88tM4W7i7cszce",
                  "name": "maxCharismaScore",
                  "operation": "base",
                  "amount": {
                      "value": 20
                  },
                  "type": "attribute"
              },
              {
                  "_id": "jkPF7WnSepfggNWLN",
                  "name": "True Stat Cap",
                  "operation": "max",
                  "amount": {
                      "value": 30
                  },
                  "type": "effect"
              }
          ],
          "total": 20,
          "value": 20
      },
      {
          "_id": "MWKidsNZw4f7ePrbM",
          "name": "maxConstitutionScore",
          "variableName": "maxConstitutionScore",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "NBbWavwSRXKcAoEky",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              },
              {
                  "id": "NBbWavwSRXKcAoEky",
                  "collection": "creatureProperties"
              }
          ],
          "order": 138,
          "tags": [],
          "baseValue": {
              "calculation": "20",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 5429744425536711,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 20
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "libraryTags": [],
          "libraryNodeId": "zz6GHZGiQhFTkoThZ",
          "advantage": 0,
          "effects": [
              {
                  "_id": "MWKidsNZw4f7ePrbM",
                  "name": "maxConstitutionScore",
                  "operation": "base",
                  "amount": {
                      "value": 20
                  },
                  "type": "attribute"
              },
              {
                  "_id": "jkPF7WnSepfggNWLN",
                  "name": "True Stat Cap",
                  "operation": "max",
                  "amount": {
                      "value": 30
                  },
                  "type": "effect"
              }
          ],
          "total": 20,
          "value": 20
      },
      {
          "_id": "6z9BGmCDDGQxroK6h",
          "type": "folder",
          "name": "Caps",
          "parent": {
              "collection": "creatureProperties",
              "id": "gTqDmEvx3nSegxx8f"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              }
          ],
          "order": 132,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "PWFmw2jMEzP5bvCdT"
      },
      {
          "_id": "NBbWavwSRXKcAoEky",
          "operation": "max",
          "stats": [
              "constitution"
          ],
          "type": "effect",
          "parent": {
              "id": "6z9BGmCDDGQxroK6h",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              }
          ],
          "order": 137,
          "tags": [],
          "amount": {
              "calculation": "maxConstitutionScore",
              "_key": "amount",
              "type": "_calculation",
              "hash": 5705048960537682,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "maxConstitutionScore"
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "name": "Max Constitution",
          "libraryTags": [],
          "libraryNodeId": "cPkjw7wkDprJ2dtqz"
      },
      {
          "_id": "djNNtY2XS4rnCfHfv",
          "name": "maxWisdomScore",
          "variableName": "maxWisdomScore",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "xNkYbk5Lkijwj2Ppd",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              },
              {
                  "id": "xNkYbk5Lkijwj2Ppd",
                  "collection": "creatureProperties"
              }
          ],
          "order": 142,
          "tags": [],
          "baseValue": {
              "calculation": "20",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 5429744425536711,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 20
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "libraryTags": [],
          "libraryNodeId": "ueiuhZk8YgaK5H7Dj",
          "advantage": 0,
          "effects": [
              {
                  "_id": "djNNtY2XS4rnCfHfv",
                  "name": "maxWisdomScore",
                  "operation": "base",
                  "amount": {
                      "value": 20
                  },
                  "type": "attribute"
              },
              {
                  "_id": "jkPF7WnSepfggNWLN",
                  "name": "True Stat Cap",
                  "operation": "max",
                  "amount": {
                      "value": 30
                  },
                  "type": "effect"
              }
          ],
          "total": 20,
          "value": 20
      },
      {
          "_id": "xNkYbk5Lkijwj2Ppd",
          "operation": "max",
          "stats": [
              "wisdom"
          ],
          "type": "effect",
          "parent": {
              "id": "6z9BGmCDDGQxroK6h",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              }
          ],
          "order": 141,
          "tags": [],
          "amount": {
              "calculation": "maxWisdomScore",
              "_key": "amount",
              "type": "_calculation",
              "hash": 8290629090518796,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "maxWisdomScore"
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "name": "Max Wisdom",
          "libraryTags": [],
          "libraryNodeId": "jyg3LEk2MDAQ8e3Br"
      },
      {
          "_id": "sNFdGiS8ufG9uSrgh",
          "name": "maxStrengthScore",
          "variableName": "maxStrengthScore",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "uXByyFFqHZE7p9yYA",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              },
              {
                  "id": "uXByyFFqHZE7p9yYA",
                  "collection": "creatureProperties"
              }
          ],
          "order": 134,
          "tags": [],
          "baseValue": {
              "calculation": "20",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 5429744425536711,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 20
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "libraryTags": [],
          "libraryNodeId": "ejL7rRa5Moxe8uqEK",
          "advantage": 0,
          "effects": [
              {
                  "_id": "sNFdGiS8ufG9uSrgh",
                  "name": "maxStrengthScore",
                  "operation": "base",
                  "amount": {
                      "value": 20
                  },
                  "type": "attribute"
              },
              {
                  "_id": "jkPF7WnSepfggNWLN",
                  "name": "True Stat Cap",
                  "operation": "max",
                  "amount": {
                      "value": 30
                  },
                  "type": "effect"
              }
          ],
          "total": 20,
          "value": 20
      },
      {
          "_id": "uXByyFFqHZE7p9yYA",
          "operation": "max",
          "stats": [
              "strength"
          ],
          "type": "effect",
          "parent": {
              "id": "6z9BGmCDDGQxroK6h",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              }
          ],
          "order": 133,
          "tags": [],
          "amount": {
              "calculation": "maxStrengthScore",
              "_key": "amount",
              "type": "_calculation",
              "hash": 6278014096286023,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "maxStrengthScore"
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "name": "Max Strength",
          "libraryTags": [],
          "libraryNodeId": "hXEj3QKY3PunP22n2"
      },
      {
          "_id": "8jsYT2dRWfLtXKH2d",
          "operation": "max",
          "stats": [
              "charisma"
          ],
          "type": "effect",
          "parent": {
              "id": "6z9BGmCDDGQxroK6h",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              }
          ],
          "order": 143,
          "tags": [],
          "amount": {
              "calculation": "maxCharismaScore",
              "_key": "amount",
              "type": "_calculation",
              "hash": 8376564139657714,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "maxCharismaScore"
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "name": "Max Charisma",
          "libraryTags": [],
          "libraryNodeId": "aCbfGFi5zLpx7A9ZK"
      },
      {
          "_id": "M2H7HCd3ja37dsRe6",
          "name": "maxIntelligenceScore",
          "variableName": "maxIntelligenceScore",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "xr93hyGxpXo9yf7cy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              },
              {
                  "id": "xr93hyGxpXo9yf7cy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 140,
          "tags": [],
          "baseValue": {
              "calculation": "20",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 5429744425536711,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 20
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "libraryTags": [],
          "libraryNodeId": "ANQTHTvKcKK7dJpKx",
          "advantage": 0,
          "effects": [
              {
                  "_id": "M2H7HCd3ja37dsRe6",
                  "name": "maxIntelligenceScore",
                  "operation": "base",
                  "amount": {
                      "value": 20
                  },
                  "type": "attribute"
              },
              {
                  "_id": "jkPF7WnSepfggNWLN",
                  "name": "True Stat Cap",
                  "operation": "max",
                  "amount": {
                      "value": 30
                  },
                  "type": "effect"
              }
          ],
          "total": 20,
          "value": 20
      },
      {
          "_id": "N6C5CQL83fa3azTq6",
          "name": "maxDexterityScore",
          "variableName": "maxDexterityScore",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "ZX4FocoCgrvq5hpWo",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ZX4FocoCgrvq5hpWo",
                  "collection": "creatureProperties"
              }
          ],
          "order": 136,
          "tags": [],
          "baseValue": {
              "calculation": "20",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 5429744425536711,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 20
              },
              "parseError": null,
              "errors": [],
              "value": 20
          },
          "libraryTags": [],
          "libraryNodeId": "nZuXsWLjcuwWp7GCE",
          "advantage": 0,
          "effects": [
              {
                  "_id": "N6C5CQL83fa3azTq6",
                  "name": "maxDexterityScore",
                  "operation": "base",
                  "amount": {
                      "value": 20
                  },
                  "type": "attribute"
              },
              {
                  "_id": "jkPF7WnSepfggNWLN",
                  "name": "True Stat Cap",
                  "operation": "max",
                  "amount": {
                      "value": 30
                  },
                  "type": "effect"
              }
          ],
          "total": 20,
          "value": 20
      },
      {
          "_id": "La4Btmjth27Gsg3De",
          "type": "note",
          "name": "Flaws",
          "color": "#009688",
          "parent": {
              "id": "YMJx9ML6DjHMeco84",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "YMJx9ML6DjHMeco84",
                  "collection": "creatureProperties"
              }
          ],
          "order": 151,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "Pd8nG9FWemvRQJoN3"
      },
      {
          "_id": "K4wkwutAvEzTfQRLL",
          "name": "Unmodified Creature Size",
          "variableName": "unmodifiedCreatureSize",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "ukgDAp7Ee3yK58YKa",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ukgDAp7Ee3yK58YKa",
                  "collection": "creatureProperties"
              }
          ],
          "order": 56,
          "tags": [],
          "baseValue": {
              "calculation": "0",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "description": {
              "text": "1 - Tiny\n2 - Small\n3 - Medium\n4 - Large\n5 - Huge\n6 - Gargantuan",
              "value": "1 - Tiny\n2 - Small\n3 - Medium\n4 - Large\n5 - Huge\n6 - Gargantuan",
              "hash": 5409603312154709,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "libraryNodeId": "ZatRQoAhbbmJCkQno",
          "effects": [
              {
                  "_id": "K4wkwutAvEzTfQRLL",
                  "name": "Unmodified Creature Size",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "ukgDAp7Ee3yK58YKa",
          "name": "Creature Size",
          "variableName": "creatureSize",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "ss46JEMWKxKBiPce3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 55,
          "tags": [],
          "baseValue": {
              "calculation": "unmodifiedCreatureSize",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 8785878007179494,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "unmodifiedCreatureSize"
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "description": {
              "text": "1 - Tiny\n2 - Small\n3 - Medium\n4 - Large\n5 - Huge\n6 - Gargantuan",
              "value": "1 - Tiny\n2 - Small\n3 - Medium\n4 - Large\n5 - Huge\n6 - Gargantuan",
              "hash": 5409603312154709,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "libraryNodeId": "RcpWdCqiScjGfWJGE",
          "effects": [
              {
                  "_id": "ukgDAp7Ee3yK58YKa",
                  "name": "Creature Size",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "bvyt6B2diqsC8huAF",
          "type": "note",
          "name": "Ideals",
          "color": "#03a9f4",
          "parent": {
              "id": "YMJx9ML6DjHMeco84",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "YMJx9ML6DjHMeco84",
                  "collection": "creatureProperties"
              }
          ],
          "order": 149,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "okw3yvwdcoCf3sq5r"
      },
      {
          "_id": "YMJx9ML6DjHMeco84",
          "type": "folder",
          "name": "Persona Tab",
          "parent": {
              "id": "Qh9pbGT24RYW8MBzw",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              }
          ],
          "order": 146,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "mZTPpjB9Wu7vZnJKh"
      },
      {
          "_id": "4MnEar968QWpMyEA8",
          "type": "note",
          "name": "Personality Traits",
          "color": "#2196f3",
          "parent": {
              "id": "YMJx9ML6DjHMeco84",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "YMJx9ML6DjHMeco84",
                  "collection": "creatureProperties"
              }
          ],
          "order": 148,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "jW6EYin8GpvELTkTJ"
      },
      {
          "_id": "jb9tsxKheAqDZ5JPM",
          "type": "note",
          "name": "Bonds",
          "color": "#00bcd4",
          "parent": {
              "id": "YMJx9ML6DjHMeco84",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "YMJx9ML6DjHMeco84",
                  "collection": "creatureProperties"
              }
          ],
          "order": 150,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "B3MuPwX24Dn4qJ5kw"
      },
      {
          "_id": "GohNjiJ7JSPCPNPqE",
          "type": "note",
          "name": "Physical Description",
          "color": "#3f51b5",
          "parent": {
              "id": "YMJx9ML6DjHMeco84",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "YMJx9ML6DjHMeco84",
                  "collection": "creatureProperties"
              }
          ],
          "order": 147,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "f2YMRzEf87JZxgkcR"
      },
      {
          "_id": "s5KEypCqSPGKPx48L",
          "name": "Standing Long Jump Distance",
          "variableName": "standingLongJumpDistance",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "QPp7QCAbGMKFbFMkY",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              },
              {
                  "id": "QPp7QCAbGMKFbFMkY",
                  "collection": "creatureProperties"
              }
          ],
          "order": 117,
          "tags": [],
          "baseValue": {
              "calculation": "longJumpDistance/2",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 5727617274512322,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "symbol",
                      "name": "longJumpDistance"
                  },
                  "right": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 2
                  },
                  "operator": "/",
                  "fn": "multiply"
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "libraryTags": [],
          "libraryNodeId": "gTytCGhM6BAdYzvhm",
          "effects": [
              {
                  "_id": "s5KEypCqSPGKPx48L",
                  "name": "Standing Long Jump Distance",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "eZAiSxikgocHy2CD8",
          "name": "Standing High Jump Distance",
          "variableName": "standingHighJumpDistance",
          "attributeType": "utility",
          "type": "attribute",
          "parent": {
              "id": "QPp7QCAbGMKFbFMkY",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "gTqDmEvx3nSegxx8f",
                  "collection": "creatureProperties"
              },
              {
                  "id": "QPp7QCAbGMKFbFMkY",
                  "collection": "creatureProperties"
              }
          ],
          "order": 119,
          "tags": [],
          "baseValue": {
              "calculation": "highJumpDistance/2",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 2115547914179416,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "symbol",
                      "name": "highJumpDistance"
                  },
                  "right": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 2
                  },
                  "operator": "/",
                  "fn": "multiply"
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "libraryTags": [],
          "libraryNodeId": "XRu5EnYChwxqnRHeK",
          "effects": [
              {
                  "_id": "eZAiSxikgocHy2CD8",
                  "name": "Standing High Jump Distance",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "Da5g2MvXPWhKt3jyZ",
          "slotTags": [
              "condition",
              "LoV"
          ],
          "extraTags": [],
          "hideWhenFull": false,
          "unique": null,
          "type": "propertySlot",
          "name": "Conditions",
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 185,
          "tags": [
              "conditionSlot"
          ],
          "quantityExpected": {
              "calculation": "0",
              "_key": "quantityExpected",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "description": {
              "text": "You can manually add conditions through this slot.",
              "value": "You can manually add conditions through this slot.",
              "hash": 4413078637486343,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "ignored": true,
          "slotCondition": {
              "calculation": "(jonStatus <= 1) && (tutorialStatus <= 1)",
              "_key": "slotCondition",
              "type": "_calculation",
              "hash": 7654397209521769,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "operator": "&&",
                  "fn": "and"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "libraryNodeId": "xnJyA66z7PQLTyZmE",
          "totalFilled": 0
      },
      {
          "_id": "c4xzaZwHn7Qqm7YP3",
          "type": "folder",
          "name": "Base Attack Modifiers",
          "parent": {
              "id": "Qh9pbGT24RYW8MBzw",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              }
          ],
          "order": 152,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "uFZAgxB4Aei74DTRx"
      },
      {
          "_id": "WL9iWevPBbG67suAK",
          "operation": "add",
          "stats": [],
          "type": "effect",
          "targetByTags": true,
          "name": "Finesse Modifiers",
          "amount": {
              "calculation": "max(dexterity.modifier, strength.modifier)",
              "_key": "amount",
              "type": "_calculation",
              "hash": 5079010711200428,
              "parseNode": {
                  "parseType": "call",
                  "functionName": "max",
                  "args": [
                      {
                          "parseType": "accessor",
                          "path": [
                              "modifier"
                          ],
                          "name": "dexterity"
                      },
                      {
                          "parseType": "accessor",
                          "path": [
                              "modifier"
                          ],
                          "name": "strength"
                      }
                  ]
              },
              "parseError": null,
              "errors": [],
              "value": -5
          },
          "targetTags": [
              "finesseAttack"
          ],
          "extraTags": [],
          "targetField": "attackRoll",
          "parent": {
              "id": "c4xzaZwHn7Qqm7YP3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "c4xzaZwHn7Qqm7YP3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 153,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "sBQ2ArLDpTcBNkwN5"
      },
      {
          "_id": "vWYokhiwGMy3LHk6Y",
          "operation": "add",
          "stats": [],
          "type": "effect",
          "targetByTags": true,
          "name": "Strength Modifiers",
          "amount": {
              "calculation": "strength.modifier",
              "_key": "amount",
              "type": "_calculation",
              "hash": 5420187129239787,
              "parseNode": {
                  "parseType": "accessor",
                  "path": [
                      "modifier"
                  ],
                  "name": "strength"
              },
              "parseError": null,
              "errors": [],
              "value": -5
          },
          "targetTags": [
              "strengthAttack"
          ],
          "extraTags": [],
          "targetField": "attackRoll",
          "parent": {
              "id": "c4xzaZwHn7Qqm7YP3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "c4xzaZwHn7Qqm7YP3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 154,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "wToGmYSZrNTNsFjNK"
      },
      {
          "_id": "u9dYPfSWadTbdq3Bd",
          "operation": "add",
          "stats": [],
          "type": "effect",
          "targetByTags": true,
          "name": "Dexterity Modifiers",
          "amount": {
              "calculation": "dexterity.modifier",
              "_key": "amount",
              "type": "_calculation",
              "hash": 8615906201997594,
              "parseNode": {
                  "parseType": "accessor",
                  "path": [
                      "modifier"
                  ],
                  "name": "dexterity"
              },
              "parseError": null,
              "errors": [],
              "value": -5
          },
          "targetTags": [
              "dexterityAttack"
          ],
          "extraTags": [],
          "targetField": "attackRoll",
          "parent": {
              "id": "c4xzaZwHn7Qqm7YP3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "c4xzaZwHn7Qqm7YP3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 155,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "4nmGkh6LWfMG8Amjf"
      },
      {
          "_id": "SYpS7RbiRK5ujys2Z",
          "operation": "add",
          "stats": [],
          "type": "effect",
          "targetByTags": true,
          "name": "Finesse Modifiers",
          "amount": {
              "calculation": "max(dexterity.modifier, strength.modifier)",
              "_key": "amount",
              "type": "_calculation",
              "hash": 5079010711200428,
              "parseNode": {
                  "parseType": "call",
                  "functionName": "max",
                  "args": [
                      {
                          "parseType": "accessor",
                          "path": [
                              "modifier"
                          ],
                          "name": "dexterity"
                      },
                      {
                          "parseType": "accessor",
                          "path": [
                              "modifier"
                          ],
                          "name": "strength"
                      }
                  ]
              },
              "parseError": null,
              "errors": [],
              "value": -5
          },
          "targetTags": [
              "finesseDamage"
          ],
          "extraTags": [
              {
                  "_id": "RjCQoB3cT6YwxvEfk",
                  "operation": "NOT",
                  "tags": [
                      "offHandDamage"
                  ]
              }
          ],
          "targetField": "amount",
          "parent": {
              "id": "cHcDsai6uiuTpr7XA",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cHcDsai6uiuTpr7XA",
                  "collection": "creatureProperties"
              }
          ],
          "order": 157,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "a9DFNh8qBS2oar8nY"
      },
      {
          "_id": "cHcDsai6uiuTpr7XA",
          "type": "folder",
          "name": "Base Damage Modifiers",
          "parent": {
              "id": "Qh9pbGT24RYW8MBzw",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              }
          ],
          "order": 156,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "xa4RtpuRHB3RfnNrc"
      },
      {
          "_id": "RWgC9v4wSqa7NuLgJ",
          "type": "folder",
          "name": "Two-Weapon Fighting",
          "parent": {
              "id": "cHcDsai6uiuTpr7XA",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cHcDsai6uiuTpr7XA",
                  "collection": "creatureProperties"
              }
          ],
          "order": 160,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "qQmaWyEJnGxYQTq75"
      },
      {
          "_id": "FJS5fBjHxAJs4EgBS",
          "operation": "add",
          "stats": [],
          "type": "effect",
          "targetByTags": true,
          "name": "Strength Modifiers",
          "amount": {
              "calculation": "strength.modifier",
              "_key": "amount",
              "type": "_calculation",
              "hash": 5420187129239787,
              "parseNode": {
                  "parseType": "accessor",
                  "path": [
                      "modifier"
                  ],
                  "name": "strength"
              },
              "parseError": null,
              "errors": [],
              "value": -5
          },
          "targetTags": [
              "strengthDamage"
          ],
          "extraTags": [
              {
                  "_id": "RjCQoB3cT6YwxvEfk",
                  "operation": "NOT",
                  "tags": [
                      "offHandDamage"
                  ]
              }
          ],
          "targetField": "amount",
          "parent": {
              "id": "cHcDsai6uiuTpr7XA",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cHcDsai6uiuTpr7XA",
                  "collection": "creatureProperties"
              }
          ],
          "order": 158,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "8YXdjcuthYWbB84ZT"
      },
      {
          "_id": "uTFZ6BF2kKeCsSE7Y",
          "operation": "add",
          "stats": [],
          "type": "effect",
          "targetByTags": true,
          "name": "Dexterity Modifiers",
          "amount": {
              "calculation": "dexterity.modifier",
              "_key": "amount",
              "type": "_calculation",
              "hash": 8615906201997594,
              "parseNode": {
                  "parseType": "accessor",
                  "path": [
                      "modifier"
                  ],
                  "name": "dexterity"
              },
              "parseError": null,
              "errors": [],
              "value": -5
          },
          "targetTags": [
              "dexterityDamage"
          ],
          "extraTags": [
              {
                  "_id": "RjCQoB3cT6YwxvEfk",
                  "operation": "NOT",
                  "tags": [
                      "offHandDamage"
                  ]
              }
          ],
          "targetField": "amount",
          "parent": {
              "id": "cHcDsai6uiuTpr7XA",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cHcDsai6uiuTpr7XA",
                  "collection": "creatureProperties"
              }
          ],
          "order": 159,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "5yZSykbKFaAbkn38B"
      },
      {
          "_id": "jHJEstSP3s3cXBo4n",
          "operation": "add",
          "stats": [],
          "type": "effect",
          "targetByTags": true,
          "name": "Finesse Modifiers",
          "amount": {
              "calculation": "resolve(twoWeaponFightingStyle ? max(strength.modifier, dexterity.modifier) : min(max(strength.modifier, dexterity.modifier), 0))",
              "_key": "amount",
              "type": "_calculation",
              "hash": 2780798007609700,
              "parseNode": {
                  "parseType": "call",
                  "functionName": "resolve",
                  "args": [
                      {
                          "parseType": "if",
                          "condition": {
                              "parseType": "symbol",
                              "name": "twoWeaponFightingStyle"
                          },
                          "consequent": {
                              "parseType": "call",
                              "functionName": "max",
                              "args": [
                                  {
                                      "parseType": "accessor",
                                      "path": [
                                          "modifier"
                                      ],
                                      "name": "strength"
                                  },
                                  {
                                      "parseType": "accessor",
                                      "path": [
                                          "modifier"
                                      ],
                                      "name": "dexterity"
                                  }
                              ]
                          },
                          "alternative": {
                              "parseType": "call",
                              "functionName": "min",
                              "args": [
                                  {
                                      "parseType": "call",
                                      "functionName": "max",
                                      "args": [
                                          {
                                              "parseType": "accessor",
                                              "path": [
                                                  "modifier"
                                              ],
                                              "name": "strength"
                                          },
                                          {
                                              "parseType": "accessor",
                                              "path": [
                                                  "modifier"
                                              ],
                                              "name": "dexterity"
                                          }
                                      ]
                                  },
                                  {
                                      "parseType": "constant",
                                      "valueType": "number",
                                      "value": 0
                                  }
                              ]
                          }
                      }
                  ]
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "twoWeaponFightingStyle not found, set to 0"
                  }
              ],
              "value": -5
          },
          "targetTags": [
              "finesseDamage",
              "offHandDamage"
          ],
          "extraTags": [],
          "targetField": "amount",
          "parent": {
              "id": "RWgC9v4wSqa7NuLgJ",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cHcDsai6uiuTpr7XA",
                  "collection": "creatureProperties"
              },
              {
                  "id": "RWgC9v4wSqa7NuLgJ",
                  "collection": "creatureProperties"
              }
          ],
          "order": 161,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "iThrGpcwqdpKF39Cq"
      },
      {
          "_id": "NrxMHDoFdhEmS8H9y",
          "operation": "add",
          "stats": [],
          "type": "effect",
          "targetByTags": true,
          "name": "Dexterity Modifiers",
          "amount": {
              "calculation": "resolve(twoWeaponFightingStyle ? dexterity.modifier : min(dexterity.modifier, 0))",
              "_key": "amount",
              "type": "_calculation",
              "hash": 889170174571372,
              "parseNode": {
                  "parseType": "call",
                  "functionName": "resolve",
                  "args": [
                      {
                          "parseType": "if",
                          "condition": {
                              "parseType": "symbol",
                              "name": "twoWeaponFightingStyle"
                          },
                          "consequent": {
                              "parseType": "accessor",
                              "path": [
                                  "modifier"
                              ],
                              "name": "dexterity"
                          },
                          "alternative": {
                              "parseType": "call",
                              "functionName": "min",
                              "args": [
                                  {
                                      "parseType": "accessor",
                                      "path": [
                                          "modifier"
                                      ],
                                      "name": "dexterity"
                                  },
                                  {
                                      "parseType": "constant",
                                      "valueType": "number",
                                      "value": 0
                                  }
                              ]
                          }
                      }
                  ]
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "twoWeaponFightingStyle not found, set to 0"
                  }
              ],
              "value": -5
          },
          "targetTags": [
              "dexterityDamage",
              "offHandDamage"
          ],
          "extraTags": [],
          "targetField": "amount",
          "parent": {
              "id": "RWgC9v4wSqa7NuLgJ",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cHcDsai6uiuTpr7XA",
                  "collection": "creatureProperties"
              },
              {
                  "id": "RWgC9v4wSqa7NuLgJ",
                  "collection": "creatureProperties"
              }
          ],
          "order": 163,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "6mWMTzXLuP84DHfo7"
      },
      {
          "_id": "8jQcWpA5hnCTN8iH6",
          "operation": "add",
          "stats": [],
          "type": "effect",
          "targetByTags": true,
          "name": "Strength Modifiers",
          "amount": {
              "calculation": "resolve(twoWeaponFightingStyle ? strength.modifier : min(strength.modifier, 0))",
              "_key": "amount",
              "type": "_calculation",
              "hash": 5795063569478328,
              "parseNode": {
                  "parseType": "call",
                  "functionName": "resolve",
                  "args": [
                      {
                          "parseType": "if",
                          "condition": {
                              "parseType": "symbol",
                              "name": "twoWeaponFightingStyle"
                          },
                          "consequent": {
                              "parseType": "accessor",
                              "path": [
                                  "modifier"
                              ],
                              "name": "strength"
                          },
                          "alternative": {
                              "parseType": "call",
                              "functionName": "min",
                              "args": [
                                  {
                                      "parseType": "accessor",
                                      "path": [
                                          "modifier"
                                      ],
                                      "name": "strength"
                                  },
                                  {
                                      "parseType": "constant",
                                      "valueType": "number",
                                      "value": 0
                                  }
                              ]
                          }
                      }
                  ]
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "twoWeaponFightingStyle not found, set to 0"
                  }
              ],
              "value": -5
          },
          "targetTags": [
              "offHandDamage",
              "strengthDamage"
          ],
          "extraTags": [],
          "targetField": "amount",
          "parent": {
              "id": "RWgC9v4wSqa7NuLgJ",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cHcDsai6uiuTpr7XA",
                  "collection": "creatureProperties"
              },
              {
                  "id": "RWgC9v4wSqa7NuLgJ",
                  "collection": "creatureProperties"
              }
          ],
          "order": 162,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "oHsGRQh5gZJFECaTb"
      },
      {
          "_id": "pcrFC2w7gokaMWimQ",
          "slotTags": [
              "patch",
              "LoV"
          ],
          "type": "propertySlot",
          "name": "Patches",
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 187,
          "tags": [
              "patchSlot"
          ],
          "ignored": true,
          "hideWhenFull": false,
          "unique": "uniqueInCreature",
          "quantityExpected": {
              "calculation": "0",
              "_key": "quantityExpected",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "slotCondition": {
              "calculation": "(jonStatus <= 1) && (tutorialStatus <= 1)",
              "_key": "slotCondition",
              "type": "_calculation",
              "hash": 7654397209521769,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "operator": "&&",
                  "fn": "and"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "libraryTags": [],
          "extraTags": [],
          "libraryNodeId": "Lo4AKuK7gcrTKxFhd",
          "totalFilled": 0
      },
      {
          "_id": "jkPF7WnSepfggNWLN",
          "operation": "max",
          "stats": [
              "maxStrengthScore",
              "maxDexterityScore",
              "maxConstitutionScore",
              "maxIntelligenceScore",
              "maxWisdomScore",
              "maxCharismaScore"
          ],
          "type": "effect",
          "amount": {
              "calculation": "30",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1888955485652096,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 30
              },
              "parseError": null,
              "errors": [],
              "value": 30
          },
          "name": "True Stat Cap",
          "parent": {
              "id": "6z9BGmCDDGQxroK6h",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "gTqDmEvx3nSegxx8f"
              },
              {
                  "id": "6z9BGmCDDGQxroK6h",
                  "collection": "creatureProperties"
              }
          ],
          "order": 145,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "EqFND4K4yTGXzpnRe"
      },
      {
          "_id": "RbM9PfaBnPXjTHtxy",
          "type": "folder",
          "name": "Time based reset",
          "parent": {
              "id": "Qh9pbGT24RYW8MBzw",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              }
          ],
          "order": 164,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "fdxQktyTWAPjRx8Yc"
      },
      {
          "_id": "xvSEM9K6jdgSorC54",
          "type": "toggle",
          "name": "Dawn Toggle",
          "condition": {
              "calculation": "dawnItem",
              "_key": "condition",
              "type": "_calculation",
              "hash": 7707124660417794,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "dawnItem"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "dawnItem not found, set to 0"
                  }
              ],
              "value": 0
          },
          "parent": {
              "id": "RbM9PfaBnPXjTHtxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "RbM9PfaBnPXjTHtxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 165,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "zRZy3WYifoP8LgS2B",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "5jYvoiY5CZ48QpwDR",
          "type": "toggle",
          "name": "Dusk Toggle",
          "condition": {
              "calculation": "duskItem",
              "_key": "condition",
              "type": "_calculation",
              "hash": 6992327651389861,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "duskItem"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "duskItem not found, set to 0"
                  }
              ],
              "value": 0
          },
          "parent": {
              "id": "RbM9PfaBnPXjTHtxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "RbM9PfaBnPXjTHtxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 167,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "uKCXsk8hazBfiKmpQ",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "SdnGAGZ39zBJxMRTD",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Pass Dawn",
          "summary": {
              "text": "Triggers all effects that happen at Dawn.",
              "value": "Triggers all effects that happen at Dawn.",
              "hash": 7684476919855755,
              "inlineCalculations": []
          },
          "tags": [
              "dawnTrigger",
              "rest",
              "avrae:no_import"
          ],
          "parent": {
              "id": "xvSEM9K6jdgSorC54",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "RbM9PfaBnPXjTHtxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "xvSEM9K6jdgSorC54",
                  "collection": "creatureProperties"
              }
          ],
          "order": 166,
          "libraryTags": [],
          "icon": {
              "name": "sunrise",
              "shape": "M259.375 16.25c-132.32 0-239.78 107.46-239.78 239.78s107.46 239.783 239.78 239.783 239.78-107.462 239.78-239.782-107.46-239.78-239.78-239.78zm33.5 20.406c26.563 4.015 51.57 12.708 74.156 25.25L308.907 209.03c-14.573-7.215-30.96-11.344-48.312-11.53l32.28-160.844zm-67.72.094l23.97 161.22c-17.2 1.56-33.28 6.986-47.313 15.436l-51-151c22.616-12.698 47.696-21.54 74.344-25.656zm193.25 64.5c17.683 18.164 32.28 39.32 42.94 62.688l-107.658 85.468c-8.9-14.076-20.863-26.014-34.968-34.875l99.686-113.28zm-319.092 1.063L192.5 219.686c-13.318 9.978-24.317 22.88-32.063 37.75L56.5 166c10.527-23.725 25.082-45.226 42.813-63.688zm378.75 115.906c2.105 12.286 3.218 24.92 3.218 37.81 0 11.49-.882 22.768-2.56 33.783l-107.876 16.062c-.463-17.028-4.757-33.097-12-47.375l119.22-40.28zM40.25 221.093l115.844 45.75c-4.918 12.077-7.81 25.224-8.188 39l-107.844-16.03c-1.678-11.016-2.562-22.295-2.562-33.783 0-11.89.954-23.554 2.75-34.936zm130.563 89.53h177.125L467 334.532c-31.674 83.843-112.62 143.376-207.625 143.376-95.018 0-175.968-59.548-207.625-143.406l119.063-23.875z"
          },
          "variableName": "dawnTrigger",
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "rcDqyeFkTLh2kuFKY",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "xvSEM9K6jdgSorC54",
          "inactive": true
      },
      {
          "_id": "YdhBGiECvoSsDfXKx",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Pass Dusk",
          "summary": {
              "text": "Triggers all effects that happen at Dusk.",
              "value": "Triggers all effects that happen at Dusk.",
              "hash": 1108066387492453,
              "inlineCalculations": []
          },
          "tags": [
              "duskTrigger",
              "rest",
              "avrae:no_import"
          ],
          "parent": {
              "id": "5jYvoiY5CZ48QpwDR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "RbM9PfaBnPXjTHtxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5jYvoiY5CZ48QpwDR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 168,
          "libraryTags": [],
          "icon": {
              "name": "sunset",
              "shape": "M247 27v80h18V27h-18zm-63.992 53.602l-16.631 6.886 15.309 36.955 16.628-6.886-15.306-36.955zm145.984 0l-15.306 36.955 16.628 6.886 15.309-36.955-16.63-6.886zM77.795 92.068l-12.727 12.727 56.569 56.568 12.726-12.726-56.568-56.569zm356.41 0l-56.568 56.569 12.726 12.726 56.569-56.568-12.727-12.727zM256 145.994a118.919 118.919 0 0 0-59.5 15.95c-34.215 19.754-56.177 55.048-59.129 94.056H374.63c-2.952-39.008-24.914-74.302-59.129-94.057a118.919 118.919 0 0 0-59.5-15.949zM66.488 195.377l-6.886 16.63 36.955 15.307 6.886-16.628-36.955-15.31zm379.024 0l-36.955 15.309 6.886 16.628 36.955-15.306-6.886-16.631zM24 274v18h464v-18H24zm200 62v64h-32l64 80 64-80h-32v-64h-64z"
          },
          "variableName": "duskTrigger",
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "L7hfqXhhwhH55zq9J",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "5jYvoiY5CZ48QpwDR",
          "inactive": true
      },
      {
          "_id": "hGuAMxhBKTjjiBqPR",
          "type": "toggle",
          "name": "Midnight Toggle",
          "condition": {
              "calculation": "midnightItem",
              "_key": "condition",
              "type": "_calculation",
              "hash": 5395924838255765,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "midnightItem"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "midnightItem not found, set to 0"
                  }
              ],
              "value": 0
          },
          "parent": {
              "id": "RbM9PfaBnPXjTHtxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "RbM9PfaBnPXjTHtxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 169,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "7DGF9DNW3CzwjAvpK",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "HhqBgAzvGXCHp9T7D",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Pass Midnight",
          "summary": {
              "text": "Triggers all effects that happen at Midnight.",
              "value": "Triggers all effects that happen at Midnight.",
              "hash": 3166916873671681,
              "inlineCalculations": []
          },
          "tags": [
              "midnightTrigger",
              "rest",
              "avrae:no_import"
          ],
          "parent": {
              "id": "hGuAMxhBKTjjiBqPR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "RbM9PfaBnPXjTHtxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "hGuAMxhBKTjjiBqPR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 170,
          "libraryTags": [],
          "icon": {
              "name": "moon",
              "shape": "M253.125 18.563c-131.53 0-238.375 106.813-238.375 238.343 0 131.53 106.846 238.344 238.375 238.344 131.53 0 238.344-106.815 238.344-238.344 0-131.528-106.816-238.344-238.345-238.344zm-23.938 52.093c40.517 0 77.988 12.904 108.532 34.813-5.597-.624-11.302-.97-17.064-.97-84.157 0-152.375 68.25-152.375 152.406 0 84.157 68.22 152.375 152.376 152.375 5.762 0 11.467-.313 17.063-.936-30.545 21.91-68.016 34.812-108.533 34.812-102.98 0-186.28-83.272-186.28-186.25 0-102.977 83.3-186.25 186.28-186.25z"
          },
          "variableName": "midnightTrigger",
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "h9Yv7FiNRunNsSyTr",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "hGuAMxhBKTjjiBqPR",
          "inactive": true
      },
      {
          "_id": "CRxZc4kB7jZQHJjnG",
          "attributeType": "utility",
          "type": "attribute",
          "baseValue": {
              "calculation": "020000000",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 4928608684631306,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 20000000
              },
              "parseError": null,
              "errors": [],
              "value": 20000000
          },
          "description": {
              "text": "```\n000000000\n|||||||^^: Bugfix #: No bugfixes = 00, v.a = 01, v.z = 26, v.aa = 27, v.cv = 99\n||||^^^: Minor version #: v.13a = 01301\n||^^: Major version #: v.13.13a = 1301301\n^^: Release#: v1.13.13a = 011301301\n```",
              "value": "```\n000000000\n|||||||^^: Bugfix #: No bugfixes = 00, v.a = 01, v.z = 26, v.aa = 27, v.cv = 99\n||||^^^: Minor version #: v.13a = 01301\n||^^: Major version #: v.13.13a = 1301301\n^^: Release#: v1.13.13a = 011301301\n```",
              "hash": 5509844309254000,
              "inlineCalculations": []
          },
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 2,
          "tags": [],
          "libraryTags": [],
          "variableName": "TLoEVersion",
          "name": "TLoE Patch Version",
          "libraryNodeId": "BXTHWHmW24jSyzv5k",
          "effects": [
              {
                  "_id": "CRxZc4kB7jZQHJjnG",
                  "name": "TLoE Patch Version",
                  "operation": "base",
                  "amount": {
                      "value": 20000000
                  },
                  "type": "attribute"
              }
          ],
          "total": 20000000,
          "value": 20000000
      },
      {
          "_id": "eTd5i5TTiZNoKc8ee",
          "attributeType": "utility",
          "type": "attribute",
          "name": "Wild Shape Active",
          "variableName": "wildShapeActive",
          "baseValue": {
              "calculation": "0",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "parent": {
              "id": "uhBEGjwCyrXuakdfs",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "ss46JEMWKxKBiPce3"
              },
              {
                  "id": "uhBEGjwCyrXuakdfs",
                  "collection": "creatureProperties"
              }
          ],
          "order": 86,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "p79ffvDykrDEfdAzc",
          "effects": [
              {
                  "_id": "eTd5i5TTiZNoKc8ee",
                  "name": "Wild Shape Active",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "ATKpey65DBEwgLMAy",
          "attributeType": "utility",
          "type": "attribute",
          "name": "Speed Modifier",
          "variableName": "speedModifier",
          "baseValue": {
              "calculation": "speed - unmodifiedSpeed",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 3112290338179925,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "symbol",
                      "name": "speed"
                  },
                  "right": {
                      "parseType": "symbol",
                      "name": "unmodifiedSpeed"
                  },
                  "operator": "-",
                  "fn": "add"
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "parent": {
              "id": "9haydoojDRwBP3Qfx",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "ss46JEMWKxKBiPce3"
              },
              {
                  "id": "uhBEGjwCyrXuakdfs",
                  "collection": "creatureProperties"
              },
              {
                  "id": "9haydoojDRwBP3Qfx",
                  "collection": "creatureProperties"
              }
          ],
          "order": 89,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "vAioYfv54sm3E8aR4",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "9haydoojDRwBP3Qfx",
          "inactive": true,
          "total": 0,
          "value": 0
      },
      {
          "_id": "QETankr72YchrrtH5",
          "operation": "set",
          "stats": [
              "D4HitDice",
              "D6HitDice",
              "D8HitDice",
              "D10HitDice",
              "D12HitDice",
              "darkvisionRange"
          ],
          "type": "effect",
          "name": "Stats Hidden During Wild Shape",
          "amount": {
              "calculation": "0",
              "_key": "amount",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "parent": {
              "id": "9haydoojDRwBP3Qfx",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "ss46JEMWKxKBiPce3"
              },
              {
                  "id": "uhBEGjwCyrXuakdfs",
                  "collection": "creatureProperties"
              },
              {
                  "id": "9haydoojDRwBP3Qfx",
                  "collection": "creatureProperties"
              }
          ],
          "order": 88,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "J8bFjH3ySiCXkEsfR",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "9haydoojDRwBP3Qfx",
          "inactive": true
      },
      {
          "_id": "9haydoojDRwBP3Qfx",
          "type": "toggle",
          "name": "Wild Shape Active?",
          "variableName": "wildShapeActiveToggle",
          "condition": {
              "calculation": "wildShapeActive",
              "_key": "condition",
              "type": "_calculation",
              "hash": 7545475537771487,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "wildShapeActive"
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "parent": {
              "id": "uhBEGjwCyrXuakdfs",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "ss46JEMWKxKBiPce3"
              },
              {
                  "id": "uhBEGjwCyrXuakdfs",
                  "collection": "creatureProperties"
              }
          ],
          "order": 87,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "mnK5mg2jjn7AQvFTH",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "uhBEGjwCyrXuakdfs",
          "type": "folder",
          "name": "Wild Shape",
          "parent": {
              "collection": "creatureProperties",
              "id": "ss46JEMWKxKBiPce3"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "ss46JEMWKxKBiPce3"
              }
          ],
          "order": 85,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "PxkJJ9r4B8GWPphTv"
      },
      {
          "_id": "BvZCpHLtxtoc6gqv5",
          "attributeType": "utility",
          "type": "attribute",
          "name": "Creature Type",
          "variableName": "creatureType",
          "baseValue": {
              "calculation": "0",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "description": {
              "text": "0 - Humanoid\n1 - Abberation\n2 - Beast\n3 - Celestial\n4 - Contruct\n5 - Dragon\n6 - Elemental\n7 - Fey\n8 - Fiend\n9 - Giant\n10 - Monstrosity\n11 - Ooze\n12 - Plant\n13 - Undead",
              "value": "0 - Humanoid\n1 - Abberation\n2 - Beast\n3 - Celestial\n4 - Contruct\n5 - Dragon\n6 - Elemental\n7 - Fey\n8 - Fiend\n9 - Giant\n10 - Monstrosity\n11 - Ooze\n12 - Plant\n13 - Undead",
              "hash": 4414223459704374,
              "inlineCalculations": []
          },
          "parent": {
              "id": "ss46JEMWKxKBiPce3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 57,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "EgPJ7rxC9a7f5MJT9",
          "effects": [
              {
                  "_id": "BvZCpHLtxtoc6gqv5",
                  "name": "Creature Type",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "zGweRGLyX5pRpuJaz",
          "type": "toggle",
          "name": "0 HP?",
          "condition": {
              "calculation": "hitPoints = 0",
              "_key": "condition",
              "type": "_calculation",
              "hash": 8938280978132171,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "symbol",
                      "name": "hitPoints"
                  },
                  "right": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 0
                  },
                  "operator": "=",
                  "fn": "equality"
              },
              "parseError": null,
              "errors": [],
              "value": true
          },
          "parent": {
              "id": "ss46JEMWKxKBiPce3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 58,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "Pt7mWaG84886CdFJt"
      },
      {
          "_id": "XXLb5QBJoK7kxNkxr",
          "type": "folder",
          "name": "Death Save",
          "parent": {
              "id": "zGweRGLyX5pRpuJaz",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              }
          ],
          "order": 59,
          "tags": [],
          "libraryTags": [],
          "groupStats": true,
          "location": "start",
          "tab": "stats",
          "hideStatsGroup": true,
          "libraryNodeId": "gscxmikkQYaNjBu3T"
      },
      {
          "_id": "g8zQNikNkqiJ2aHej",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Death Save",
          "summary": {
              "text": "{deathSaveSuccesses = deathSaveSuccesses.total ? \"You are stable\" : \"\"}\n{deathSaveFails = deathSaveFails.total ? \"You are dead\" : \"\"}",
              "value": "\n",
              "hash": 5196282979479272,
              "inlineCalculations": [
                  {
                      "calculation": "deathSaveSuccesses = deathSaveSuccesses.total ? \"You are stable\" : \"\"",
                      "_key": "summary.inlineCalculations[0]",
                      "type": "_calculation",
                      "hash": 1988553547100707,
                      "parseNode": {
                          "parseType": "if",
                          "condition": {
                              "parseType": "operator",
                              "left": {
                                  "parseType": "symbol",
                                  "name": "deathSaveSuccesses"
                              },
                              "right": {
                                  "parseType": "accessor",
                                  "path": [
                                      "total"
                                  ],
                                  "name": "deathSaveSuccesses"
                              },
                              "operator": "=",
                              "fn": "equality"
                          },
                          "consequent": {
                              "parseType": "constant",
                              "valueType": "string",
                              "value": "You are stable"
                          },
                          "alternative": {
                              "parseType": "constant",
                              "valueType": "string",
                              "value": ""
                          }
                      },
                      "parseError": null,
                      "errors": [],
                      "value": ""
                  },
                  {
                      "calculation": "deathSaveFails = deathSaveFails.total ? \"You are dead\" : \"\"",
                      "_key": "summary.inlineCalculations[1]",
                      "type": "_calculation",
                      "hash": 4644587186026716,
                      "parseNode": {
                          "parseType": "if",
                          "condition": {
                              "parseType": "operator",
                              "left": {
                                  "parseType": "symbol",
                                  "name": "deathSaveFails"
                              },
                              "right": {
                                  "parseType": "accessor",
                                  "path": [
                                      "total"
                                  ],
                                  "name": "deathSaveFails"
                              },
                              "operator": "=",
                              "fn": "equality"
                          },
                          "consequent": {
                              "parseType": "constant",
                              "valueType": "string",
                              "value": "You are dead"
                          },
                          "alternative": {
                              "parseType": "constant",
                              "valueType": "string",
                              "value": ""
                          }
                      },
                      "parseError": null,
                      "errors": [],
                      "value": ""
                  }
              ]
          },
          "parent": {
              "id": "XXLb5QBJoK7kxNkxr",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              }
          ],
          "order": 60,
          "tags": [
              "deathSaveAction"
          ],
          "libraryTags": [
              "deathSaveAction"
          ],
          "color": "#757575",
          "icon": {
              "name": "death-skull",
              "shape": "M255.997 16.004c-120 0-239.997 60-239.997 149.998C16 226.002 61 256 61 316c0 45-15 45-15 75 0 14.998 48.01 32.002 89.998 44.998v60h239.997v-60s90.567-27.957 90-45c-.933-27.947-15-30-15-74.998 0-30 45.642-91.42 44.998-149.998 0-90-119.998-149.998-239.996-149.998zm-90 179.997c33.137 0 60 26.864 60 60 0 33.136-26.863 60-60 60C132.863 316 106 289.136 106 256c0-33.136 26.862-60 59.998-60zm179.998 0c33.136 0 60 26.864 60 60 0 33.136-26.864 60-60 60-33.136 0-60-26.864-60-60 0-33.136 26.864-60 60-60zm-89.998 105c15 0 45 60 45 75 0 29.998 0 29.998-15 29.998h-60c-15 0-15 0-15-30 0-15 30-74.998 45-74.998z"
          },
          "fillSlots": true,
          "searchable": true,
          "libraryNodeId": "4rnAwHebm8zwiLCh2"
      },
      {
          "_id": "pdXrrw5ureKFXsmaR",
          "target": "self",
          "operation": "increment",
          "type": "adjustment",
          "stat": "deathSaveFails",
          "amount": {
              "calculation": "-1",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1631352277109227,
              "parseNode": {
                  "parseType": "unaryOperator",
                  "operator": "-",
                  "right": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 1
                  }
              },
              "parseError": null,
              "errors": [],
              "value": -1
          },
          "parent": {
              "id": "qSbMMRZTdmYezFuAo",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              },
              {
                  "id": "sY5RoLcGJ4q5RXPjP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "qSbMMRZTdmYezFuAo",
                  "collection": "creatureProperties"
              }
          ],
          "order": 69,
          "tags": [],
          "libraryTags": [],
          "silent": true,
          "libraryNodeId": "DxQq8KXfMKxtgR7DR",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "PPraJNkhGweiMWDnq",
          "target": "self",
          "operation": "set",
          "type": "adjustment",
          "stat": "hitPoints",
          "amount": {
              "calculation": "1",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1485272252048968,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 1
              },
              "parseError": null,
              "errors": [],
              "value": 1
          },
          "parent": {
              "id": "tA3HoymefBosJFXJX",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              },
              {
                  "id": "sY5RoLcGJ4q5RXPjP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tA3HoymefBosJFXJX",
                  "collection": "creatureProperties"
              }
          ],
          "order": 67,
          "tags": [],
          "libraryTags": [],
          "silent": true,
          "libraryNodeId": "fZYTi47Q82iKhXr2B",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "2Y7FhHs8TCLTebyGY",
          "target": "self",
          "operation": "increment",
          "type": "adjustment",
          "stat": "deathSaveSuccesses",
          "amount": {
              "calculation": "-1",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1631352277109227,
              "parseNode": {
                  "parseType": "unaryOperator",
                  "operator": "-",
                  "right": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 1
                  }
              },
              "parseError": null,
              "errors": [],
              "value": -1
          },
          "parent": {
              "id": "4TxHHwr6KpGx2Psvw",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              },
              {
                  "id": "sY5RoLcGJ4q5RXPjP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "4TxHHwr6KpGx2Psvw",
                  "collection": "creatureProperties"
              }
          ],
          "order": 65,
          "tags": [],
          "libraryTags": [],
          "silent": true,
          "libraryNodeId": "ZmbHHGJZSHvJa7bHC",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "fdqKhS7xWh6fpsQqo",
          "target": "self",
          "operation": "increment",
          "type": "adjustment",
          "stat": "deathSaveFails",
          "amount": {
              "calculation": "-1",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1631352277109227,
              "parseNode": {
                  "parseType": "unaryOperator",
                  "operator": "-",
                  "right": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 1
                  }
              },
              "parseError": null,
              "errors": [],
              "value": -1
          },
          "parent": {
              "id": "22hES2TGcxKss9ZGt",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              },
              {
                  "id": "sY5RoLcGJ4q5RXPjP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "22hES2TGcxKss9ZGt",
                  "collection": "creatureProperties"
              }
          ],
          "order": 63,
          "tags": [],
          "libraryTags": [],
          "silent": true,
          "libraryNodeId": "DBQb8h4T36uY8bQPs",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "RSJW2ReYFXhv7HnwC",
          "branchType": "if",
          "type": "branch",
          "condition": {
              "calculation": "deathSaveFails = deathSaveFails.total",
              "_key": "condition",
              "type": "_calculation",
              "hash": 8607867169274815,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "symbol",
                      "name": "deathSaveFails"
                  },
                  "right": {
                      "parseType": "accessor",
                      "path": [
                          "total"
                      ],
                      "name": "deathSaveFails"
                  },
                  "operator": "=",
                  "fn": "equality"
              },
              "parseError": null,
              "errors": [],
              "value": false
          },
          "parent": {
              "id": "g8zQNikNkqiJ2aHej",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              }
          ],
          "order": 70,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "h2rNQDWsDFfCnWkME",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "NTBCekTiKt36SdezS",
          "type": "note",
          "summary": {
              "text": "You are dead.",
              "value": "You are dead.",
              "hash": 7559868356401981,
              "inlineCalculations": []
          },
          "parent": {
              "id": "RSJW2ReYFXhv7HnwC",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              },
              {
                  "id": "RSJW2ReYFXhv7HnwC",
                  "collection": "creatureProperties"
              }
          ],
          "order": 71,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "LZdiL5TMBJYnkrmaq",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "a9wkdoKPALD7TSCrE",
          "branchType": "if",
          "type": "branch",
          "condition": {
              "calculation": "deathSaveSuccesses = deathSaveSuccesses.total",
              "_key": "condition",
              "type": "_calculation",
              "hash": 5946160742632512,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "symbol",
                      "name": "deathSaveSuccesses"
                  },
                  "right": {
                      "parseType": "accessor",
                      "path": [
                          "total"
                      ],
                      "name": "deathSaveSuccesses"
                  },
                  "operator": "=",
                  "fn": "equality"
              },
              "parseError": null,
              "errors": [],
              "value": false
          },
          "parent": {
              "id": "g8zQNikNkqiJ2aHej",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              }
          ],
          "order": 72,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "hFgBSa6wPAR8yGhDZ",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "krcvPqqHFBEEWrty3",
          "type": "note",
          "summary": {
              "text": "You are stable, and will return to 1 HP in **{1d4}** hour(s).",
              "hash": 4433197134635243,
              "inlineCalculations": [
                  {
                      "calculation": "1d4",
                      "_key": "summary.inlineCalculations[0]",
                      "type": "_calculation",
                      "hash": 5702001471546365,
                      "parseNode": {
                          "parseType": "roll",
                          "left": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 4
                          }
                      },
                      "parseError": null,
                      "errors": [],
                      "value": 2
                  }
              ],
              "value": "You are stable, and will return to 1 HP in **2** hour(s)."
          },
          "parent": {
              "id": "a9wkdoKPALD7TSCrE",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              },
              {
                  "id": "a9wkdoKPALD7TSCrE",
                  "collection": "creatureProperties"
              }
          ],
          "order": 73,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "Qhb3xrh6TTxLSTRgN",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "SHcWP34q26iXvPZAs",
          "attributeType": "spellSlot",
          "type": "attribute",
          "name": "Succeeded Saves",
          "variableName": "deathSaveSuccesses",
          "parent": {
              "id": "XXLb5QBJoK7kxNkxr",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              }
          ],
          "order": 77,
          "tags": [],
          "libraryTags": [],
          "baseValue": {
              "calculation": "3",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 1318417319946211,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 3
              },
              "parseError": null,
              "errors": [],
              "value": 3
          },
          "damage": 3,
          "libraryNodeId": "PmgtGoxrswh8kqDD2",
          "effects": [
              {
                  "_id": "SHcWP34q26iXvPZAs",
                  "name": "Succeeded Saves",
                  "operation": "base",
                  "amount": {
                      "value": 3
                  },
                  "type": "attribute"
              }
          ],
          "total": 3,
          "value": 0
      },
      {
          "_id": "oQYRnLGnToueB5yNd",
          "attributeType": "spellSlot",
          "type": "attribute",
          "name": "Failed Saves",
          "variableName": "deathSaveFails",
          "parent": {
              "id": "XXLb5QBJoK7kxNkxr",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              }
          ],
          "order": 78,
          "tags": [],
          "libraryTags": [],
          "baseValue": {
              "calculation": "3",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 1318417319946211,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 3
              },
              "parseError": null,
              "errors": [],
              "value": 3
          },
          "damage": 3,
          "libraryNodeId": "LnPhMrDWzGTiwsZEa",
          "effects": [
              {
                  "_id": "oQYRnLGnToueB5yNd",
                  "name": "Failed Saves",
                  "operation": "base",
                  "amount": {
                      "value": 3
                  },
                  "type": "attribute"
              }
          ],
          "total": 3,
          "value": 0
      },
      {
          "_id": "LtXX9o8t2aSxGTSbs",
          "skillType": "save",
          "type": "skill",
          "name": "Death Save",
          "variableName": "deathSave",
          "parent": {
              "id": "XXLb5QBJoK7kxNkxr",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              }
          ],
          "order": 76,
          "tags": [
              "savingThrow",
              "deathSave"
          ],
          "libraryTags": [
              "savingThrow",
              "deathSave"
          ],
          "fillSlots": true,
          "searchable": false,
          "libraryNodeId": "yaqtESnTvtt8PZYdS",
          "abilityMod": 0,
          "proficiency": 0,
          "value": 0
      },
      {
          "_id": "wXB4dips3odquRLv5",
          "event": "damageProperty",
          "timing": "after",
          "type": "trigger",
          "targetTags": [
              "hitPoints"
          ],
          "name": "Death Save Reset",
          "parent": {
              "id": "zGweRGLyX5pRpuJaz",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              }
          ],
          "order": 79,
          "tags": [],
          "libraryTags": [],
          "description": {
              "text": "Death Save Successes have been reset.",
              "value": "Death Save Successes have been reset.",
              "hash": 3793696669383798,
              "inlineCalculations": []
          },
          "libraryNodeId": "N6RRkWGCqcikGDjM2"
      },
      {
          "_id": "x4gSzx4dZHqTLC9tM",
          "target": "self",
          "operation": "set",
          "type": "adjustment",
          "stat": "deathSaveSuccesses",
          "amount": {
              "calculation": "0",
              "_key": "amount",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "parent": {
              "id": "wXB4dips3odquRLv5",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "wXB4dips3odquRLv5",
                  "collection": "creatureProperties"
              }
          ],
          "order": 80,
          "tags": [],
          "libraryTags": [],
          "silent": true,
          "libraryNodeId": "QAsBXu5BWZjsnrQ6q",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "TD4DMGaMjg4QoX624",
          "type": "toggle",
          "condition": {
              "calculation": "!(deathSaveFails = deathSaveFails.total || deathSaveSuccesses = deathSaveSuccesses.total)",
              "_key": "condition",
              "type": "_calculation",
              "hash": 2255197542295404,
              "parseNode": {
                  "parseType": "not",
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "operator",
                              "left": {
                                  "parseType": "symbol",
                                  "name": "deathSaveFails"
                              },
                              "right": {
                                  "parseType": "accessor",
                                  "path": [
                                      "total"
                                  ],
                                  "name": "deathSaveFails"
                              },
                              "operator": "=",
                              "fn": "equality"
                          },
                          "right": {
                              "parseType": "operator",
                              "left": {
                                  "parseType": "symbol",
                                  "name": "deathSaveSuccesses"
                              },
                              "right": {
                                  "parseType": "accessor",
                                  "path": [
                                      "total"
                                  ],
                                  "name": "deathSaveSuccesses"
                              },
                              "operator": "=",
                              "fn": "equality"
                          },
                          "operator": "||",
                          "fn": "or"
                      }
                  }
              },
              "parseError": null,
              "errors": [],
              "value": true
          },
          "name": "Dead or Stable",
          "parent": {
              "id": "zGweRGLyX5pRpuJaz",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              }
          ],
          "order": 83,
          "tags": [],
          "libraryTags": [],
          "targetByTags": true,
          "targetTags": [
              "deathSaveAction"
          ],
          "libraryNodeId": "msNHTkZSk4qXxnc2N"
      },
      {
          "_id": "sY5RoLcGJ4q5RXPjP",
          "target": "self",
          "type": "savingThrow",
          "stat": "deathSave",
          "dc": {
              "calculation": "10",
              "_key": "dc",
              "type": "_calculation",
              "hash": 8406382441874172,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 10
              },
              "parseError": null,
              "errors": [],
              "value": 10
          },
          "parent": {
              "id": "g8zQNikNkqiJ2aHej",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              }
          ],
          "order": 61,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "tji3ETQKH2wKwygpJ",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "22hES2TGcxKss9ZGt",
          "branchType": "failedSave",
          "type": "branch",
          "parent": {
              "id": "sY5RoLcGJ4q5RXPjP",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              },
              {
                  "id": "sY5RoLcGJ4q5RXPjP",
                  "collection": "creatureProperties"
              }
          ],
          "order": 62,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "wL3jpDtHBdpM2Lqwb",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "4TxHHwr6KpGx2Psvw",
          "branchType": "successfulSave",
          "type": "branch",
          "parent": {
              "id": "sY5RoLcGJ4q5RXPjP",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              },
              {
                  "id": "sY5RoLcGJ4q5RXPjP",
                  "collection": "creatureProperties"
              }
          ],
          "order": 64,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "4RZXyKwz35mqtC3sQ",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "tA3HoymefBosJFXJX",
          "branchType": "if",
          "type": "branch",
          "condition": {
              "calculation": "~saveDiceRoll = 20",
              "_key": "condition",
              "type": "_calculation",
              "hash": 1592175782359332,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "symbol",
                      "name": "~saveDiceRoll"
                  },
                  "right": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 20
                  },
                  "operator": "=",
                  "fn": "equality"
              },
              "parseError": null,
              "errors": [],
              "value": "~saveDiceRoll = 20"
          },
          "parent": {
              "id": "sY5RoLcGJ4q5RXPjP",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              },
              {
                  "id": "sY5RoLcGJ4q5RXPjP",
                  "collection": "creatureProperties"
              }
          ],
          "order": 66,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "5gv6p4bubfYSXt3YJ",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "qSbMMRZTdmYezFuAo",
          "branchType": "if",
          "type": "branch",
          "condition": {
              "calculation": "~saveDiceRoll = 1",
              "_key": "condition",
              "type": "_calculation",
              "hash": 6525649402789453,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "symbol",
                      "name": "~saveDiceRoll"
                  },
                  "right": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 1
                  },
                  "operator": "=",
                  "fn": "equality"
              },
              "parseError": null,
              "errors": [],
              "value": "~saveDiceRoll = 1"
          },
          "parent": {
              "id": "sY5RoLcGJ4q5RXPjP",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "g8zQNikNkqiJ2aHej",
                  "collection": "creatureProperties"
              },
              {
                  "id": "sY5RoLcGJ4q5RXPjP",
                  "collection": "creatureProperties"
              }
          ],
          "order": 68,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "syuH5aGCxguP893KM",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "GgEJgjNMqvMEXBq6W",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Stabilized",
          "parent": {
              "id": "XXLb5QBJoK7kxNkxr",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              }
          ],
          "order": 74,
          "tags": [],
          "libraryTags": [],
          "icon": {
              "name": "healing",
              "shape": "M250.9 18.9c-23.9 2.99-45.3 30.65-45.3 66.99 0 19.91 6.8 37.41 16.8 49.61l12.2 14.5-18.7 3.5c-13 2.5-22.6 9.5-30.7 20.8-8.5 11.5-14.8 26.9-19.1 45.2-8 32.7-9.9 72.7-9.9 108.2h43.6l11.7 160.5c30.4 7 63.1 6.5 92.3 0l10.7-160.5H356c0-35.7-.5-76.4-7.8-109.7-3.9-17.9-10-33.7-18.2-45.1-8.2-11.1-18.5-17.8-33.3-20.1l-18.9-3 11.9-14.9c9.9-12.1 16.4-29.6 16.4-49.01 0-38.54-24-66.99-50.3-66.99h-4.9zm145 3.59v41.85h-41.8v50.16h41.8v41.6h49.9v-41.6h41.9V64.34h-41.9V22.49h-49.9zM52.92 62.89v30.58H22.39v36.63h30.53v30.4h36.4v-30.4h30.58V93.47H89.32V62.89h-36.4zM92.63 199.7v21.8H70.75v26.3h21.88v21.9h26.27v-21.9h21.8v-26.3h-21.8v-21.8H92.63zm355.07 62.4v21.8h-21.9v26.3h21.9v21.9H474v-21.9h21.8v-26.3H474v-21.8h-26.3zm-307.5 99.4v15h-15v18h15v15h18.1v-15h15v-18h-15v-15h-18.1zm230 45.8v15h-15v18h15v15h18v-15h15v-18h-15v-15h-18zM49.32 431.8v15h-15v18h15v15h18.01v-15h15v-18h-15v-15H49.32z"
          },
          "color": "#c8e6c9",
          "libraryNodeId": "Wiy3Q4xHzhzyYtW9B"
      },
      {
          "_id": "8o7GCcvFxLZQFarz6",
          "type": "note",
          "summary": {
              "text": "You have been stabilized, and will return to 1 HP in **{1d4}** hour(s).",
              "hash": 4659005130519950,
              "inlineCalculations": [
                  {
                      "calculation": "1d4",
                      "_key": "summary.inlineCalculations[0]",
                      "type": "_calculation",
                      "hash": 5702001471546365,
                      "parseNode": {
                          "parseType": "roll",
                          "left": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 4
                          }
                      },
                      "parseError": null,
                      "errors": [],
                      "value": 4
                  }
              ],
              "value": "You have been stabilized, and will return to 1 HP in **4** hour(s)."
          },
          "parent": {
              "id": "GgEJgjNMqvMEXBq6W",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "XXLb5QBJoK7kxNkxr",
                  "collection": "creatureProperties"
              },
              {
                  "id": "GgEJgjNMqvMEXBq6W",
                  "collection": "creatureProperties"
              }
          ],
          "order": 75,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "FqdFipy9kkAZddYan",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "2YENZRbGXfMw5tq6k",
          "target": "self",
          "operation": "set",
          "type": "adjustment",
          "stat": "deathSaveFails",
          "amount": {
              "calculation": "0",
              "_key": "amount",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "parent": {
              "id": "ACMmphYMKmNca5yfc",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ACMmphYMKmNca5yfc",
                  "collection": "creatureProperties"
              }
          ],
          "order": 82,
          "tags": [],
          "libraryTags": [],
          "silent": true,
          "libraryNodeId": "r8wQoHFikTWLcuion",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "ACMmphYMKmNca5yfc",
          "event": "damageProperty",
          "timing": "after",
          "type": "trigger",
          "targetTags": [
              "hitPoints"
          ],
          "name": "Death Save Reset",
          "parent": {
              "id": "zGweRGLyX5pRpuJaz",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              }
          ],
          "order": 81,
          "tags": [],
          "libraryTags": [],
          "description": {
              "text": "Death Save Fails have been reset.",
              "value": "Death Save Fails have been reset.",
              "hash": 8841809565139591,
              "inlineCalculations": []
          },
          "condition": {
              "calculation": "!permanentDeathSaves",
              "_key": "condition",
              "type": "_calculation",
              "hash": 2116076289414705,
              "parseNode": {
                  "parseType": "not",
                  "right": {
                      "parseType": "symbol",
                      "name": "permanentDeathSaves"
                  }
              },
              "parseError": null,
              "errors": [],
              "value": "!permanentDeathSaves"
          },
          "libraryNodeId": "N6RB7kdBzE6JyYhEW"
      },
      {
          "_id": "KmSJkLLQXv8ubDRM9",
          "attributeType": "healthBar",
          "type": "attribute",
          "name": "Hit Points",
          "variableName": "hitPoints",
          "baseValue": {
              "calculation": "0",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "parent": {
              "id": "ss46JEMWKxKBiPce3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 53,
          "tags": [
              "hitPoints"
          ],
          "libraryTags": [
              "hitPoints"
          ],
          "color": "#4caf50",
          "healthBarDamageOrder": 1,
          "healthBarHealingOrder": 0,
          "reset": "longRest",
          "healthBarColorLow": "#212121",
          "healthBarColorMid": "#f44336",
          "fillSlots": true,
          "searchable": true,
          "libraryNodeId": "dBjb9TLKFqezbLhSz",
          "advantage": 0,
          "effects": [
              {
                  "_id": "KmSJkLLQXv8ubDRM9",
                  "name": "Hit Points",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              },
              {
                  "_id": "FYytXv8D2gRjxY4YP",
                  "name": "Minimum",
                  "operation": "min",
                  "amount": {
                      "value": 0
                  },
                  "type": "effect"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "MBqXT5EAGYxmSR2y2",
          "attributeType": "healthBar",
          "type": "attribute",
          "name": "Temporary Hit Points",
          "variableName": "tempHP",
          "parent": {
              "id": "ss46JEMWKxKBiPce3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              }
          ],
          "order": 90,
          "tags": [],
          "libraryTags": [],
          "healthBarDamageOrder": 0,
          "hideWhenTotalZero": true,
          "hideWhenValueZero": true,
          "healthBarNoHealing": true,
          "libraryNodeId": "DttisFweXFRyQmuJK",
          "hide": true,
          "total": 0,
          "value": 0
      },
      {
          "_id": "5As7xrwXJFueMQm3S",
          "slotTags": [
              "LoV",
              "tutorial"
          ],
          "extraTags": [],
          "hideWhenFull": true,
          "unique": "uniqueInSlot",
          "type": "propertySlot",
          "name": "Tutorial",
          "slotType": "buff",
          "quantityExpected": {
              "calculation": "1",
              "_key": "quantityExpected",
              "type": "_calculation",
              "hash": 1485272252048968,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 1
              },
              "parseError": null,
              "errors": [],
              "value": 1
          },
          "ignored": true,
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 3,
          "tags": [
              "tutorialSlot"
          ],
          "libraryTags": [],
          "libraryNodeId": "3RomffvksmHhNqbHx",
          "spaceLeft": 0,
          "totalFilled": 1
      },
      {
          "_id": "vSp9ztAACokKivgcb",
          "variableName": "incapacitated",
          "errors": [],
          "type": "constant",
          "name": "Incapacitated",
          "calculation": "true",
          "parent": {
              "id": "zGweRGLyX5pRpuJaz",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ss46JEMWKxKBiPce3",
                  "collection": "creatureProperties"
              },
              {
                  "id": "zGweRGLyX5pRpuJaz",
                  "collection": "creatureProperties"
              }
          ],
          "order": 84,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "y9KSejfStmkqnA9Ph"
      },
      {
          "_id": "5Meb7bwwZ4L6Npha3",
          "type": "folder",
          "name": "Global Toggles",
          "description": {
              "text": "For toggles targeting specific tags across the whole sheet",
              "value": "For toggles targeting specific tags across the whole sheet",
              "hash": 7108179338774455,
              "inlineCalculations": []
          },
          "order": 171,
          "parent": {
              "id": "Qh9pbGT24RYW8MBzw",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "libraryNodeId": "rejAJmLe39iMwhwEk"
      },
      {
          "_id": "3PZGg2upBrKvWN6cn",
          "type": "toggle",
          "name": "Polearm Master",
          "condition": {
              "calculation": "polearmMasterTaken",
              "_key": "condition",
              "type": "_calculation",
              "hash": 439070679131814,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "polearmMasterTaken"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "polearmMasterTaken not found, set to 0"
                  }
              ],
              "value": 0
          },
          "targetByTags": true,
          "targetTags": [
              "polearmMasterAction"
          ],
          "order": 172,
          "parent": {
              "collection": "creatureProperties",
              "id": "5Meb7bwwZ4L6Npha3"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "5Meb7bwwZ4L6Npha3"
              }
          ],
          "tags": [],
          "fillSlots": false,
          "libraryTags": [],
          "searchable": false,
          "libraryNodeId": "7cQcob4pAadn8ZXrL",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "TcGjB4E6qoBZ5GoRi",
          "type": "toggle",
          "name": "Two Weapon Fighting",
          "targetByTags": true,
          "targetTags": [
              "offHandAttack",
              "lightWeapon"
          ],
          "condition": {
              "calculation": "weaponsEquipped > 1",
              "_key": "condition",
              "type": "_calculation",
              "hash": 2075848673355678,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "symbol",
                      "name": "weaponsEquipped"
                  },
                  "right": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 1
                  },
                  "operator": ">",
                  "fn": "relation"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "weaponsEquipped not found, set to 0"
                  }
              ],
              "value": false
          },
          "order": 174,
          "parent": {
              "id": "5Meb7bwwZ4L6Npha3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5Meb7bwwZ4L6Npha3",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "extraTags": [],
          "libraryNodeId": "WqTQ9wtj32g6oAXkS",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "wwEgb8BbECf6Yiggr",
          "type": "toggle",
          "name": "Dual Wielder Feat",
          "targetByTags": true,
          "targetTags": [
              "offHandAttack"
          ],
          "condition": {
              "calculation": "dualWielderFeat && weaponsEquipped > 1",
              "_key": "condition",
              "type": "_calculation",
              "hash": 8582956731148200,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "symbol",
                      "name": "dualWielderFeat"
                  },
                  "right": {
                      "parseType": "operator",
                      "left": {
                          "parseType": "symbol",
                          "name": "weaponsEquipped"
                      },
                      "right": {
                          "parseType": "constant",
                          "valueType": "number",
                          "value": 1
                      },
                      "operator": ">",
                      "fn": "relation"
                  },
                  "operator": "&&",
                  "fn": "and"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "dualWielderFeat not found, set to 0"
                  },
                  {
                      "type": "info",
                      "message": "weaponsEquipped not found, set to 0"
                  }
              ],
              "value": 0
          },
          "order": 175,
          "parent": {
              "id": "5Meb7bwwZ4L6Npha3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5Meb7bwwZ4L6Npha3",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "extraTags": [
              {
                  "_id": "dQJQmoA86eh23qrQA",
                  "operation": "NOT",
                  "tags": [
                      "lightWeapon"
                  ]
              }
          ],
          "libraryNodeId": "q4msuRFJ6FjHvQPrG",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "tu7gumrmq7uMYa7nP",
          "slotTags": [
              "LoV",
              "source"
          ],
          "extraTags": [],
          "hideWhenFull": true,
          "unique": "uniqueInCreature",
          "type": "propertySlot",
          "name": "Sources",
          "slotCondition": {
              "calculation": "(jonStatus <= 3) && (tutorialStatus <= 3)",
              "_key": "slotCondition",
              "type": "_calculation",
              "hash": 1992470465706398,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 3
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 3
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "operator": "&&",
                  "fn": "and"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "order": 189,
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [
              "sourceSlot"
          ],
          "description": {
              "text": "Determine which source books materials should be displayed from when selecting character options. For custom race/class templates, select Homebrew.",
              "value": "Determine which source books materials should be displayed from when selecting character options. For custom race/class templates, select Homebrew.",
              "hash": 6024131553281811,
              "inlineCalculations": []
          },
          "libraryNodeId": "86bDTeCN3enGXF22R",
          "totalFilled": 2
      },
      {
          "_id": "iTZjioRbmeuhSXRCE",
          "type": "toggle",
          "name": "Hide Simple Melee Weapons",
          "condition": {
              "calculation": "!simpleMeleeWeapon",
              "_key": "condition",
              "type": "_calculation",
              "hash": 6774075888878257,
              "parseNode": {
                  "parseType": "not",
                  "right": {
                      "parseType": "symbol",
                      "name": "simpleMeleeWeapon"
                  }
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "simpleMeleeWeapon not found, set to 0"
                  }
              ],
              "value": true
          },
          "targetByTags": true,
          "targetTags": [
              "simpleMeleeWeaponSkill"
          ],
          "order": 176,
          "parent": {
              "id": "5Meb7bwwZ4L6Npha3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5Meb7bwwZ4L6Npha3",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "libraryNodeId": "W7BgNvfHoMFsoM6rB"
      },
      {
          "_id": "iRjzJ8KhyX9HbsWJc",
          "type": "toggle",
          "name": "Hide Simple Ranged Weapons",
          "condition": {
              "calculation": "!simpleRangedWeapon",
              "_key": "condition",
              "type": "_calculation",
              "hash": 3011969201598420,
              "parseNode": {
                  "parseType": "not",
                  "right": {
                      "parseType": "symbol",
                      "name": "simpleRangedWeapon"
                  }
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "simpleRangedWeapon not found, set to 0"
                  }
              ],
              "value": true
          },
          "targetByTags": true,
          "targetTags": [
              "simpleRangedWeaponSkill"
          ],
          "order": 177,
          "parent": {
              "id": "5Meb7bwwZ4L6Npha3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5Meb7bwwZ4L6Npha3",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "libraryNodeId": "etaE7kaxtC62R67wX"
      },
      {
          "_id": "H2L32ux2fvDbjpwTa",
          "type": "toggle",
          "name": "Hide Martial Melee Weapons",
          "condition": {
              "calculation": "!martialMeleeWeapon",
              "_key": "condition",
              "type": "_calculation",
              "hash": 1208570148182224,
              "parseNode": {
                  "parseType": "not",
                  "right": {
                      "parseType": "symbol",
                      "name": "martialMeleeWeapon"
                  }
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "martialMeleeWeapon not found, set to 0"
                  }
              ],
              "value": true
          },
          "targetByTags": true,
          "targetTags": [
              "martialMeleeWeaponSkill"
          ],
          "order": 178,
          "parent": {
              "id": "5Meb7bwwZ4L6Npha3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5Meb7bwwZ4L6Npha3",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "libraryNodeId": "iBYvq9wbhzjbHJgLQ"
      },
      {
          "_id": "NMXPNfi5E2xCzDGDW",
          "type": "toggle",
          "name": "Hide Martial Ranged Weapons",
          "condition": {
              "calculation": "!martialRangedWeapon",
              "_key": "condition",
              "type": "_calculation",
              "hash": 5427825853784425,
              "parseNode": {
                  "parseType": "not",
                  "right": {
                      "parseType": "symbol",
                      "name": "martialRangedWeapon"
                  }
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "martialRangedWeapon not found, set to 0"
                  }
              ],
              "value": true
          },
          "targetByTags": true,
          "targetTags": [
              "martialRangedWeaponSkill"
          ],
          "order": 179,
          "parent": {
              "id": "5Meb7bwwZ4L6Npha3",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5Meb7bwwZ4L6Npha3",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "libraryNodeId": "MTYqcaWNtarA3rXXx"
      },
      {
          "_id": "Mf2tnMRRxm4hh7cw8",
          "type": "folder",
          "name": "Misc",
          "order": 180,
          "parent": {
              "id": "Qh9pbGT24RYW8MBzw",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "libraryNodeId": "nsc6SqhnHz3ar4KZp"
      },
      {
          "_id": "ZAhqeJBQqqhkkpgpG",
          "attributeType": "utility",
          "type": "attribute",
          "name": "Highest Spellcasting Mod",
          "variableName": "highestSpellcastingMod",
          "baseValue": {
              "calculation": "0",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "order": 181,
          "parent": {
              "id": "Mf2tnMRRxm4hh7cw8",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Mf2tnMRRxm4hh7cw8",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "libraryNodeId": "AdrMWRzvobbW2NYAb",
          "effects": [
              {
                  "_id": "ZAhqeJBQqqhkkpgpG",
                  "name": "Highest Spellcasting Mod",
                  "operation": "base",
                  "amount": {
                      "value": 0
                  },
                  "type": "attribute"
              }
          ],
          "total": 0,
          "value": 0
      },
      {
          "_id": "y23nfrxiqCKHhKJrq",
          "slotTags": [
              "LoV",
              "statAssignment"
          ],
          "type": "propertySlot",
          "name": "Base Ability Scores",
          "parent": {
              "id": "R7WGoSicaBhTxEMxy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 44,
          "tags": [
              "statAssignmentSlot"
          ],
          "unique": "uniqueInCreature",
          "quantityExpected": {
              "calculation": "1",
              "_key": "quantityExpected",
              "type": "_calculation",
              "hash": 1485272252048968,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 1
              },
              "parseError": null,
              "errors": [],
              "value": 1
          },
          "libraryTags": [],
          "extraTags": [],
          "hideWhenFull": true,
          "slotCondition": {
              "calculation": "(jonStatus <=1) && (tutorialStatus <= 1)",
              "_key": "slotCondition",
              "type": "_calculation",
              "hash": 8157192827504166,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "<=",
                          "fn": "relation"
                      }
                  },
                  "operator": "&&",
                  "fn": "and"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "libraryNodeId": "2A3pdRvWirmwdMnvF",
          "spaceLeft": 1,
          "totalFilled": 0
      },
      {
          "_id": "X7ER5QFiiAABtL7Re",
          "type": "toggle",
          "name": "Crossbow Expert",
          "condition": {
              "calculation": "crossbowExpertTaken",
              "_key": "condition",
              "type": "_calculation",
              "hash": 5787592174314532,
              "parseNode": {
                  "parseType": "symbol",
                  "name": "crossbowExpertTaken"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "crossbowExpertTaken not found, set to 0"
                  }
              ],
              "value": 0
          },
          "targetByTags": true,
          "targetTags": [
              "crossbowExpertAction"
          ],
          "order": 173,
          "parent": {
              "collection": "creatureProperties",
              "id": "5Meb7bwwZ4L6Npha3"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Qh9pbGT24RYW8MBzw",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "5Meb7bwwZ4L6Npha3"
              }
          ],
          "tags": [],
          "fillSlots": false,
          "libraryTags": [],
          "searchable": false,
          "libraryNodeId": "s7hKRpcN5HRfCAQM5",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "tpv7CcDLoHLm5usmR",
          "type": "folder",
          "name": "Skills",
          "parent": {
              "collection": "creatureProperties",
              "id": "Qh9pbGT24RYW8MBzw"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              }
          ],
          "order": 94,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "2sNGrRFv6zLMrZgfg"
      },
      {
          "_id": "PFthNHuTxYrNMY956",
          "skillType": "skill",
          "type": "skill",
          "name": "Intimidation",
          "variableName": "intimidation",
          "ability": "charisma",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 102,
          "tags": [
              "abilityCheck",
              "charismaCheck"
          ],
          "description": {
              "text": "When you attempt to influence someone through overt threats, hostile actions, and physical violence, the DM might ask you to make a Charisma (Intimidation) check. Examples include trying to pry information out of a prisoner, convincing street thugs to back down from a confrontation, or using the edge of a broken bottle to convince a sneering vizier to reconsider a decision.",
              "value": "When you attempt to influence someone through overt threats, hostile actions, and physical violence, the DM might ask you to make a Charisma (Intimidation) check. Examples include trying to pry information out of a prisoner, convincing street thugs to back down from a confrontation, or using the edge of a broken bottle to convince a sneering vizier to reconsider a decision.",
              "hash": 7202510279012271,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "g5J384bPBRtZ9Qz9Z",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "CmWBh9Bb5N2rzqmSn",
          "skillType": "skill",
          "type": "skill",
          "name": "Animal Handling",
          "variableName": "animalHandling",
          "ability": "wisdom",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 96,
          "tags": [
              "abilityCheck",
              "wisdomCheck"
          ],
          "description": {
              "text": "When there is any question whether you can calm down a domesticated animal, keep a mount from getting spooked, or intuit an animal's intentions, the DM might call for a Wisdom (Animal Handling) check. You also make a Wisdom (Animal Handling) check to control your mount when you attempt a risky maneuver.",
              "value": "When there is any question whether you can calm down a domesticated animal, keep a mount from getting spooked, or intuit an animal's intentions, the DM might call for a Wisdom (Animal Handling) check. You also make a Wisdom (Animal Handling) check to control your mount when you attempt a risky maneuver.",
              "hash": 6411600518704267,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "8mnm9wtFFYktZ3HKc",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "yi5XqrKhde9h4m5nF",
          "skillType": "skill",
          "type": "skill",
          "name": "Deception",
          "variableName": "deception",
          "ability": "charisma",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 99,
          "tags": [
              "abilityCheck",
              "charismaCheck"
          ],
          "description": {
              "text": "Your Charisma (Deception) check determines whether you can convincingly hide the truth, either verbally or through your actions. This deception can encompass everything from misleading others through ambiguity to telling outright lies. Typical situations include trying to fast-talk a guard, con a merchant, earn money through gambling, pass yourself off in a disguise, dull someone's suspicions with false assurances, or maintain a straight face while telling a blatant lie.",
              "value": "Your Charisma (Deception) check determines whether you can convincingly hide the truth, either verbally or through your actions. This deception can encompass everything from misleading others through ambiguity to telling outright lies. Typical situations include trying to fast-talk a guard, con a merchant, earn money through gambling, pass yourself off in a disguise, dull someone's suspicions with false assurances, or maintain a straight face while telling a blatant lie.",
              "hash": 8489047783102080,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "iLkxhZtoABCcJ5wKC",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "oLvCMDziCKcQ4CGwC",
          "skillType": "skill",
          "type": "skill",
          "name": "Sleight of Hand",
          "variableName": "sleightOfHand",
          "ability": "dexterity",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 111,
          "tags": [
              "abilityCheck",
              "dexterityCheck"
          ],
          "description": {
              "text": "Whenever you attempt an act of legerdemain or manual trickery, such as planting something on someone else or concealing an object on your person, make a Dexterity (Sleight of Hand) check. The DM might also call for a Dexterity (Sleight of Hand) check to determine whether you can lift a coin purse off another person or slip something out of another person's pocket.",
              "value": "Whenever you attempt an act of legerdemain or manual trickery, such as planting something on someone else or concealing an object on your person, make a Dexterity (Sleight of Hand) check. The DM might also call for a Dexterity (Sleight of Hand) check to determine whether you can lift a coin purse off another person or slip something out of another person's pocket.",
              "hash": 2961862631923726,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "5aiuBRguz4EPezeik",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "EZjYPCg55BqhX5eXY",
          "skillType": "skill",
          "type": "skill",
          "name": "Stealth",
          "variableName": "stealth",
          "ability": "dexterity",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 112,
          "tags": [
              "abilityCheck",
              "dexterityCheck"
          ],
          "description": {
              "text": "Make a Dexterity (Stealth) check when you attempt to conceal yourself from enemies, slink past guards, slip away without being noticed, or sneak up on someone without being seen or heard.",
              "value": "Make a Dexterity (Stealth) check when you attempt to conceal yourself from enemies, slink past guards, slip away without being noticed, or sneak up on someone without being seen or heard.",
              "hash": 3988058055869790,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "jWPorgri8jfqHC59H",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "j3Gr7fqqqMYF6navb",
          "skillType": "skill",
          "type": "skill",
          "name": "Investigation",
          "variableName": "investigation",
          "ability": "intelligence",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 103,
          "tags": [
              "abilityCheck",
              "intelligenceCheck"
          ],
          "description": {
              "text": "When you look around for clues and make deductions based on those clues, you make an Intelligence (Investigation) check. You might deduce the location of a hidden object, discern from the appearance of a wound what kind of weapon dealt it, or determine the weakest point in a tunnel that could cause it to collapse. Poring through ancient scrolls in search of a hidden fragment of knowledge might also call for an Intelligence (Investigation) check.",
              "value": "When you look around for clues and make deductions based on those clues, you make an Intelligence (Investigation) check. You might deduce the location of a hidden object, discern from the appearance of a wound what kind of weapon dealt it, or determine the weakest point in a tunnel that could cause it to collapse. Poring through ancient scrolls in search of a hidden fragment of knowledge might also call for an Intelligence (Investigation) check.",
              "hash": 8018941725920433,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "scffAw4XWj6ncZQir",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "zKotKxG6ZZx6jQp5h",
          "skillType": "skill",
          "type": "skill",
          "name": "Insight",
          "variableName": "insight",
          "ability": "wisdom",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 101,
          "tags": [
              "abilityCheck",
              "wisdomCheck"
          ],
          "description": {
              "text": "Your Wisdom (Insight) check decides whether you can determine the true intentions of a creature, such as when searching out a lie or predicting someone's next move. Doing so involves gleaning clues from body language, speech habits, and changes in mannerisms.",
              "value": "Your Wisdom (Insight) check decides whether you can determine the true intentions of a creature, such as when searching out a lie or predicting someone's next move. Doing so involves gleaning clues from body language, speech habits, and changes in mannerisms.",
              "hash": 1883053379107350,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "PrGYeo8cT8iKLYzsq",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "GtZLDzpitBrgarqgt",
          "skillType": "skill",
          "type": "skill",
          "name": "Nature",
          "variableName": "nature",
          "ability": "intelligence",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 105,
          "tags": [
              "abilityCheck",
              "intelligenceCheck"
          ],
          "description": {
              "text": "Your Intelligence (Nature) check measures your ability to recall lore about terrain, plants and animals, the weather, and natural cycles.",
              "value": "Your Intelligence (Nature) check measures your ability to recall lore about terrain, plants and animals, the weather, and natural cycles.",
              "hash": 170317924877070,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "oFPmstpNe25FegyMg",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "EfMkYNab2x7D2Fjyg",
          "skillType": "skill",
          "type": "skill",
          "name": "Perception",
          "variableName": "perception",
          "ability": "wisdom",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 106,
          "tags": [
              "abilityCheck",
              "wisdomCheck"
          ],
          "description": {
              "text": "Your Wisdom (Perception) check lets you spot, hear, or otherwise detect the presence of something. It measures your general awareness of your surroundings and the keenness of your senses. For example, you might try to hear a conversation through a closed door, eavesdrop under an open window, or hear monsters moving stealthily in the forest. Or you might try to spot things that are obscured or easy to miss, whether they are orcs lying in ambush on a road, thugs hiding in the shadows of an alley, or candlelight under a closed secret door.",
              "value": "Your Wisdom (Perception) check lets you spot, hear, or otherwise detect the presence of something. It measures your general awareness of your surroundings and the keenness of your senses. For example, you might try to hear a conversation through a closed door, eavesdrop under an open window, or hear monsters moving stealthily in the forest. Or you might try to spot things that are obscured or easy to miss, whether they are orcs lying in ambush on a road, thugs hiding in the shadows of an alley, or candlelight under a closed secret door.",
              "hash": 6782537919260759,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "8QEhpZcrsjLqh8uAQ",
          "abilityMod": -5,
          "advantage": 0,
          "conditionalBenefits": [],
          "effects": [
              {
                  "_id": "XLPStyLtMgS7Y8euD",
                  "name": "Show Passive",
                  "operation": "passiveAdd",
                  "amount": {
                      "value": 0
                  },
                  "type": "effect"
              }
          ],
          "fail": 0,
          "passiveBonus": 0,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "vbvbjaJNme56Tn4HM",
          "skillType": "skill",
          "type": "skill",
          "name": "Performance",
          "variableName": "performance",
          "ability": "charisma",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 108,
          "tags": [
              "abilityCheck",
              "charismaCheck"
          ],
          "description": {
              "text": "Your Charisma (Performance) check determines how well you can delight an audience with music, dance, acting, storytelling, or some other form of entertainment.",
              "value": "Your Charisma (Performance) check determines how well you can delight an audience with music, dance, acting, storytelling, or some other form of entertainment.",
              "hash": 8997986110135003,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "XA4BA4QCckZu3s8z7",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "yTQ3w9ZguoqLcWFy5",
          "skillType": "skill",
          "type": "skill",
          "name": "Acrobatics",
          "variableName": "acrobatics",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 95,
          "tags": [
              "abilityCheck",
              "dexterityCheck"
          ],
          "description": {
              "text": "Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The DM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips.",
              "value": "Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The DM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips.",
              "hash": 8446626020276577,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "ability": "dexterity",
          "libraryNodeId": "K2LdDdw8tAnxcjEEY",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "qxK48L5gajKcwBSd6",
          "skillType": "skill",
          "type": "skill",
          "name": "Medicine",
          "variableName": "medicine",
          "ability": "wisdom",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 104,
          "tags": [
              "abilityCheck",
              "wisdomCheck"
          ],
          "description": {
              "text": "A Wisdom (Medicine) check lets you try to stabilize a dying companion or diagnose an illness.",
              "value": "A Wisdom (Medicine) check lets you try to stabilize a dying companion or diagnose an illness.",
              "hash": 7128212748165576,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "j7TwLterg6G6mxq9p",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "KwkmL5fL6TakdPrXb",
          "skillType": "skill",
          "type": "skill",
          "name": "Persuasion",
          "variableName": "persuasion",
          "ability": "charisma",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 109,
          "tags": [
              "abilityCheck",
              "charismaCheck"
          ],
          "description": {
              "text": "When you attempt to influence someone or a group of people with tact, social graces, or good nature, the DM might ask you to make a Charisma (Persuasion) check. Typically, you use persuasion when acting in good faith, to foster friendships, make cordial requests, or exhibit proper etiquette. Examples of persuading others include convincing a chamberlain to let your party see the king, negotiating peace between warring tribes, or inspiring a crowd of townsfolk.",
              "value": "When you attempt to influence someone or a group of people with tact, social graces, or good nature, the DM might ask you to make a Charisma (Persuasion) check. Typically, you use persuasion when acting in good faith, to foster friendships, make cordial requests, or exhibit proper etiquette. Examples of persuading others include convincing a chamberlain to let your party see the king, negotiating peace between warring tribes, or inspiring a crowd of townsfolk.",
              "hash": 6355562356529096,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "hXXbCogaX3yZMakwv",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "GbzhQj59hTgdopXRg",
          "skillType": "skill",
          "type": "skill",
          "name": "Survival",
          "variableName": "survival",
          "ability": "wisdom",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 113,
          "tags": [
              "abilityCheck",
              "wisdomCheck"
          ],
          "description": {
              "text": "The DM might ask you to make a Wisdom (Survival) check to follow tracks, hunt wild game, guide your group through frozen wastelands, identify signs that owlbears live nearby, predict the weather, or avoid quicksand and other natural hazards.",
              "value": "The DM might ask you to make a Wisdom (Survival) check to follow tracks, hunt wild game, guide your group through frozen wastelands, identify signs that owlbears live nearby, predict the weather, or avoid quicksand and other natural hazards.",
              "hash": 4295751239595560,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "x7tDS4rfKXu5u2jLA",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "jewjJmH39NMe5AQQh",
          "skillType": "skill",
          "type": "skill",
          "name": "Athletics",
          "variableName": "athletics",
          "ability": "strength",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 98,
          "tags": [
              "abilityCheck",
              "strengthCheck"
          ],
          "description": {
              "text": "Your Strength (Athletics) check covers difficult situations you encounter while climbing, jumping, or swimming. Examples include the following activities:\n\n- You attempt to climb a sheer or slippery cliff, avoid hazards while scaling a wall, or cling to a surface while something is trying to knock you off.\n- You try to jump an unusually long distance or pull off a stunt mid jump.\n- You struggle to swim or stay afloat in treacherous currents, storm-tossed waves, or areas of thick seaweed. Or another creature tries to push or pull you underwater or otherwise interfere with your swimming.",
              "value": "Your Strength (Athletics) check covers difficult situations you encounter while climbing, jumping, or swimming. Examples include the following activities:\n\n- You attempt to climb a sheer or slippery cliff, avoid hazards while scaling a wall, or cling to a surface while something is trying to knock you off.\n- You try to jump an unusually long distance or pull off a stunt mid jump.\n- You struggle to swim or stay afloat in treacherous currents, storm-tossed waves, or areas of thick seaweed. Or another creature tries to push or pull you underwater or otherwise interfere with your swimming.",
              "hash": 550586597009794,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "WvNG89jDjMu8HWd4k",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "QBy5Whjkw88eeojnW",
          "skillType": "skill",
          "type": "skill",
          "name": "History",
          "variableName": "history",
          "ability": "intelligence",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 100,
          "tags": [
              "abilityCheck",
              "intelligenceCheck"
          ],
          "description": {
              "text": "Your Intelligence (History) check measures your ability to recall lore about historical events, legendary people, ancient kingdoms, past disputes, recent wars, and lost civilizations.",
              "value": "Your Intelligence (History) check measures your ability to recall lore about historical events, legendary people, ancient kingdoms, past disputes, recent wars, and lost civilizations.",
              "hash": 467375199849152,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "MmJ2fWGocxBrugW8p",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "aAQEZ8mizm7BGQo7i",
          "skillType": "skill",
          "type": "skill",
          "name": "Religion",
          "variableName": "religion",
          "ability": "intelligence",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 110,
          "tags": [
              "abilityCheck",
              "intelligenceCheck"
          ],
          "description": {
              "text": "Your Intelligence (Religion) check measures your ability to recall lore about deities, rites and prayers, religious hierarchies, holy symbols, and the practices of secret cults.",
              "value": "Your Intelligence (Religion) check measures your ability to recall lore about deities, rites and prayers, religious hierarchies, holy symbols, and the practices of secret cults.",
              "hash": 1113141946278217,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "aCKhnbufnj7eNYgEj",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "GgeBbRCwoSdRd5B4T",
          "skillType": "skill",
          "type": "skill",
          "name": "Arcana",
          "variableName": "arcana",
          "ability": "intelligence",
          "parent": {
              "id": "tpv7CcDLoHLm5usmR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              }
          ],
          "order": 97,
          "tags": [
              "abilityCheck",
              "intelligenceCheck"
          ],
          "description": {
              "text": "Your Intelligence (Arcana) check measures your ability to recall lore about spells, magic items, eldritch symbols, magical traditions, the planes of existence, and the inhabitants of those planes.",
              "value": "Your Intelligence (Arcana) check measures your ability to recall lore about spells, magic items, eldritch symbols, magical traditions, the planes of existence, and the inhabitants of those planes.",
              "hash": 5762050901043230,
              "inlineCalculations": []
          },
          "libraryTags": [],
          "fillSlots": false,
          "searchable": false,
          "libraryNodeId": "JWXT2S7Mo2vSQpWZH",
          "abilityMod": -5,
          "proficiency": 0,
          "value": -5
      },
      {
          "_id": "XLPStyLtMgS7Y8euD",
          "operation": "passiveAdd",
          "stats": [
              "perception"
          ],
          "type": "effect",
          "parent": {
              "id": "EfMkYNab2x7D2Fjyg",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "collection": "creatureProperties",
                  "id": "Qh9pbGT24RYW8MBzw"
              },
              {
                  "id": "tpv7CcDLoHLm5usmR",
                  "collection": "creatureProperties"
              },
              {
                  "id": "EfMkYNab2x7D2Fjyg",
                  "collection": "creatureProperties"
              }
          ],
          "order": 107,
          "tags": [],
          "amount": {
              "calculation": "0",
              "_key": "amount",
              "type": "_calculation",
              "hash": 3136312542826423,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 0
              },
              "parseError": null,
              "errors": [],
              "value": 0
          },
          "name": "Show Passive",
          "libraryTags": [],
          "libraryNodeId": "kiFXsNWYcwYLNZxN2"
      },
      {
          "_id": "bNgvnGMT9DuZy5y2M",
          "target": "self",
          "type": "buff",
          "name": "Introduction to LoV",
          "description": {
              "text": "The Library Tutorial. Delete this whenever you'd like.",
              "value": "The Library Tutorial. Delete this whenever you'd like.",
              "hash": 6559951239034813,
              "inlineCalculations": []
          },
          "parent": {
              "id": "5As7xrwXJFueMQm3S",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              }
          ],
          "order": 4,
          "tags": [
              "LoV",
              "tutorial"
          ],
          "libraryTags": [
              "LoV",
              "tutorial"
          ],
          "fillSlots": true,
          "searchable": true,
          "libraryNodeId": "BHdMiAqacrYbHmiXW"
      },
      {
          "_id": "MDFxywvbjJnjXSfyP",
          "attributeType": "utility",
          "type": "attribute",
          "baseValue": {
              "calculation": "4",
              "_key": "baseValue",
              "type": "_calculation",
              "hash": 8553285446493293,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 4
              },
              "parseError": null,
              "errors": [],
              "value": 4
          },
          "name": "jonStatus",
          "variableName": "jonStatus",
          "damage": 0,
          "parent": {
              "id": "bNgvnGMT9DuZy5y2M",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              }
          ],
          "order": 5,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "vRaNCpjJowEPsEesL",
          "effects": [
              {
                  "_id": "MDFxywvbjJnjXSfyP",
                  "name": "jonStatus",
                  "operation": "base",
                  "amount": {
                      "value": 4
                  },
                  "type": "attribute"
              }
          ],
          "total": 4,
          "value": 4
      },
      {
          "_id": "dyFrhTTtZP6f5AyhS",
          "type": "toggle",
          "name": "Tutorial Stage 1",
          "condition": {
              "calculation": "(jonStatus = 4) || (tutorialStatus = 4)",
              "_key": "condition",
              "type": "_calculation",
              "hash": 8089671206754029,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 4
                          },
                          "operator": "=",
                          "fn": "equality"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 4
                          },
                          "operator": "=",
                          "fn": "equality"
                      }
                  },
                  "operator": "||",
                  "fn": "or"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": true
          },
          "parent": {
              "id": "bNgvnGMT9DuZy5y2M",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              }
          ],
          "order": 6,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "kNY6sLbu9eoLKYueQ"
      },
      {
          "_id": "8C2ZCpBPmBaoPmMFy",
          "type": "folder",
          "groupStats": true,
          "hideStatsGroup": true,
          "location": "start",
          "tab": "build",
          "parent": {
              "id": "dyFrhTTtZP6f5AyhS",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              }
          ],
          "order": 7,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "Tw7b87rZaKSgWthPF"
      },
      {
          "_id": "uC5WdRPovLyaDYH6E",
          "type": "note",
          "summary": {
              "text": "<img src=\"https://imgur.com/H2AK7MC.png\" style=\"max-width:unset;width:calc(100% + 32px);margin:-32px -16px -23px;\">",
              "value": "<img src=\"https://imgur.com/H2AK7MC.png\" style=\"max-width:unset;width:calc(100% + 32px);margin:-32px -16px -23px;\">",
              "hash": 7476474576976360,
              "inlineCalculations": []
          },
          "description": {
              "text": "Art by Midjourney",
              "value": "Art by Midjourney",
              "hash": 7222334904407162,
              "inlineCalculations": []
          },
          "parent": {
              "id": "8C2ZCpBPmBaoPmMFy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 8,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "bKcHJtFtXySGHxWsZ"
      },
      {
          "_id": "WwGywxgQmaJc7vT79",
          "type": "note",
          "name": "Hi, my name is Jon Evans.",
          "summary": {
              "text": "I'll be here to show you around the library, as well as teach you a bit about DiceCloud v2 in general.\n\nPlease, use the plus button below to select a topic you'd like to learn about.\n\nWhen you're ready to proceed, click the \"Proceed to Sources\" button below and we can proceed to sourcebook selection.\n\n**Oh, one last thing: Many of you may have strolled these halls and used my libraries before they were entirely open to the public. _I no longer recommend individually subscribing to my libraries. Instead, please use the links below to subscribe to an entire collection at once. Otherwise, you may find that things do not work as intended. You need not manually subscribe to each library in a collection, just hit the button in the top right of the collection page._**\n\n- [The Libraries of Vexus](https://beta.dicecloud.com/library-collection/jp6xTaHDZK4ELYzvN) **[REQUIRED]**\n- [Published Homebrew for the LoV](https://beta.dicecloud.com/library-collection/yiL55xx3ZQ4TCo77i) **[Includes Blood Hunter]**\n- [Alpha Content for the LoV](https://beta.dicecloud.com/library-collection/wnTLjbo4vbYyZyHXL) **[USE WITH CAUTION, this is untested material!]**\n\n# If this is your first time using the library, I strongly suggest not skipping the tutorial.",
              "value": "I'll be here to show you around the library, as well as teach you a bit about DiceCloud v2 in general.\n\nPlease, use the plus button below to select a topic you'd like to learn about.\n\nWhen you're ready to proceed, click the \"Proceed to Sources\" button below and we can proceed to sourcebook selection.\n\n**Oh, one last thing: Many of you may have strolled these halls and used my libraries before they were entirely open to the public. _I no longer recommend individually subscribing to my libraries. Instead, please use the links below to subscribe to an entire collection at once. Otherwise, you may find that things do not work as intended. You need not manually subscribe to each library in a collection, just hit the button in the top right of the collection page._**\n\n- [The Libraries of Vexus](https://beta.dicecloud.com/library-collection/jp6xTaHDZK4ELYzvN) **[REQUIRED]**\n- [Published Homebrew for the LoV](https://beta.dicecloud.com/library-collection/yiL55xx3ZQ4TCo77i) **[Includes Blood Hunter]**\n- [Alpha Content for the LoV](https://beta.dicecloud.com/library-collection/wnTLjbo4vbYyZyHXL) **[USE WITH CAUTION, this is untested material!]**\n\n# If this is your first time using the library, I strongly suggest not skipping the tutorial.",
              "hash": 4931230933886670,
              "inlineCalculations": []
          },
          "parent": {
              "id": "8C2ZCpBPmBaoPmMFy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 9,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "S2PwXtvkuWALvXtY9"
      },
      {
          "_id": "EPEYEa6Tn6DQmzjZD",
          "slotTags": [
              "LoV",
              "libraryIntro"
          ],
          "extraTags": [],
          "hideWhenFull": false,
          "unique": "uniqueInSlot",
          "type": "propertySlot",
          "name": "Explore the Library!",
          "quantityExpected": {
              "calculation": "1",
              "_key": "quantityExpected",
              "type": "_calculation",
              "hash": 1485272252048968,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 1
              },
              "parseError": null,
              "errors": [],
              "value": 1
          },
          "parent": {
              "id": "8C2ZCpBPmBaoPmMFy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 10,
          "tags": [],
          "libraryTags": [],
          "ignored": false,
          "slotType": "folder",
          "libraryNodeId": "yNQ4iw6HfpB6gJnwd",
          "spaceLeft": 0,
          "totalFilled": 1
      },
      {
          "_id": "vcDPKaayyFYGu6Nkc",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Proceed to Sources",
          "icon": {
              "name": "direction-sign",
              "shape": "M66.26 62.5c-4.533 0-9.11.862-11.564 1.906-.914.39-1.142.617-1.377.797v32.26l26.488.287-.47-32.488c-.237-.183-.513-.445-1.47-.85C75.382 63.36 70.795 62.5 66.26 62.5zM365.22 78.293c-.528.005-1.08.022-1.65.05-2.287.117-4.886.428-7.47.968-5.167 1.08-10.42 3.023-13.677 4.973-2.754 1.65-3.064 2.87-3.095 2.225l.143 20.05 29.85.323V78.585c-.124-.03-.017-.013-.16-.04-.998-.18-2.358-.267-3.94-.25zM19.413 115.1l.56 54.732 11.036 8.027-4.257 66.695 132.46 8.416-133.66 6.99-3.5 44.987 361.22-1.93 48.19-36.52.257-12.01 60.867-41.66-39.547-40.106-56.44-6.484 39.544-5.52-58.74-35.747zM369.32 321.092l-27.723.148 1.63 167.76h26.092V370.074l-9.272-4.303 9.27-5.23zm-286.428 1.53l-29.573.16V489h31.867z"
          },
          "color": "#8bc34a",
          "silent": true,
          "parent": {
              "id": "8C2ZCpBPmBaoPmMFy",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              }
          ],
          "order": 19,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "hkYSpgevNXbSNuEwS"
      },
      {
          "_id": "eMepbFgLcr8P47FPP",
          "target": "self",
          "operation": "increment",
          "type": "adjustment",
          "stat": "jonStatus",
          "amount": {
              "calculation": "1",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1485272252048968,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 1
              },
              "parseError": null,
              "errors": [],
              "value": 1
          },
          "silent": true,
          "parent": {
              "id": "vcDPKaayyFYGu6Nkc",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "vcDPKaayyFYGu6Nkc",
                  "collection": "creatureProperties"
              }
          ],
          "order": 20,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "L3zqNPRdR6jG7FzfY",
          "deactivatedByAncestor": true,
          "inactive": true
      },
      {
          "_id": "tAf8ykBSFEF5FTzhP",
          "type": "toggle",
          "name": "Tutorial Stage 2",
          "condition": {
              "calculation": "(jonStatus = 3) || (tutorialStatus = 3)",
              "_key": "condition",
              "type": "_calculation",
              "hash": 4826043504043663,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 3
                          },
                          "operator": "=",
                          "fn": "equality"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 3
                          },
                          "operator": "=",
                          "fn": "equality"
                      }
                  },
                  "operator": "||",
                  "fn": "or"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "parent": {
              "id": "bNgvnGMT9DuZy5y2M",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              }
          ],
          "order": 21,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "p5vkLhjKZ6eq58zTv",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "9NPeg89TBD4Bue4nG",
          "type": "folder",
          "groupStats": true,
          "hideStatsGroup": true,
          "location": "start",
          "tab": "build",
          "parent": {
              "id": "tAf8ykBSFEF5FTzhP",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tAf8ykBSFEF5FTzhP",
                  "collection": "creatureProperties"
              }
          ],
          "order": 22,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "bMsn2YFXEL5fCTAvC",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "tAf8ykBSFEF5FTzhP",
          "inactive": true
      },
      {
          "_id": "ZMeNL4AjpchuS3339",
          "type": "note",
          "summary": {
              "text": "<img src=\"https://imgur.com/XsGo1TL.png\" style=\"max-width:unset;width:calc(100% + 32px);margin:-32px -16px -23px;\">",
              "value": "<img src=\"https://imgur.com/XsGo1TL.png\" style=\"max-width:unset;width:calc(100% + 32px);margin:-32px -16px -23px;\">",
              "hash": 8537674471021129,
              "inlineCalculations": []
          },
          "description": {
              "text": "Art by Midjourney",
              "value": "Art by Midjourney",
              "hash": 7222334904407162,
              "inlineCalculations": []
          },
          "parent": {
              "id": "9NPeg89TBD4Bue4nG",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tAf8ykBSFEF5FTzhP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "9NPeg89TBD4Bue4nG",
                  "collection": "creatureProperties"
              }
          ],
          "order": 23,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "NuzuEtetatoZBztqf",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "tAf8ykBSFEF5FTzhP",
          "inactive": true
      },
      {
          "_id": "M5JCF9Tq7LuYuKDpt",
          "type": "note",
          "name": "Let's select your sourcebooks.",
          "summary": {
              "text": "# Use the \"Sources\" slot above to select what sources you want active on your sheet.\n\nI've already gathered a collection of commonly used sourcebooks for you.\n\n**Note that if you are using any homebrew- such as a custom race or custom class, you'll need to select the \"Homebrew\" option in that Source.**\n\nOnce you're done, you can click the \"X\" button on the slot- this saves everything. You can always edit your sources later during character creation if you change your mind by clicking the dotted file icon on your Build card on this tab.\n\nThen, hit the \"Proceed to House Rules\" button below.\n\nIf a sourcebook is missing, let us know in our [Discord Server](https://discord.gg/z3FRWzr63B).",
              "value": "# Use the \"Sources\" slot above to select what sources you want active on your sheet.\n\nI've already gathered a collection of commonly used sourcebooks for you.\n\n**Note that if you are using any homebrew- such as a custom race or custom class, you'll need to select the \"Homebrew\" option in that Source.**\n\nOnce you're done, you can click the \"X\" button on the slot- this saves everything. You can always edit your sources later during character creation if you change your mind by clicking the dotted file icon on your Build card on this tab.\n\nThen, hit the \"Proceed to House Rules\" button below.\n\nIf a sourcebook is missing, let us know in our [Discord Server](https://discord.gg/z3FRWzr63B).",
              "hash": 1335372674339402,
              "inlineCalculations": []
          },
          "parent": {
              "id": "9NPeg89TBD4Bue4nG",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tAf8ykBSFEF5FTzhP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "9NPeg89TBD4Bue4nG",
                  "collection": "creatureProperties"
              }
          ],
          "order": 24,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "2c6X79adpP8ENQSyH",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "tAf8ykBSFEF5FTzhP",
          "inactive": true
      },
      {
          "_id": "3xJBT9SXjGMBA3fcg",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Return to Tutorial",
          "icon": {
              "name": "sideswipe",
              "shape": "M422.52 404.55c0-92.006-1.243-95.736-1.243-95.736 204.583-58.483-212.586-77.202-252.76-71.863l-.15 34.762-118.71-68.004 118.346-65.303 1.394 33.82c303.74-5.71 371.256 83.987 253.124 232.325z"
          },
          "color": "#ff5722",
          "silent": true,
          "parent": {
              "id": "9NPeg89TBD4Bue4nG",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tAf8ykBSFEF5FTzhP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "9NPeg89TBD4Bue4nG",
                  "collection": "creatureProperties"
              }
          ],
          "order": 25,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "nHarQ9EHEgZRKHym8",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "tAf8ykBSFEF5FTzhP",
          "inactive": true
      },
      {
          "_id": "7yGjgmL3RaEjTzkqz",
          "target": "self",
          "operation": "increment",
          "type": "adjustment",
          "stat": "jonStatus",
          "amount": {
              "calculation": "-1",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1631352277109227,
              "parseNode": {
                  "parseType": "unaryOperator",
                  "operator": "-",
                  "right": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 1
                  }
              },
              "parseError": null,
              "errors": [],
              "value": -1
          },
          "silent": true,
          "parent": {
              "id": "3xJBT9SXjGMBA3fcg",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tAf8ykBSFEF5FTzhP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "9NPeg89TBD4Bue4nG",
                  "collection": "creatureProperties"
              },
              {
                  "id": "3xJBT9SXjGMBA3fcg",
                  "collection": "creatureProperties"
              }
          ],
          "order": 26,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "fSzsZ8E7JYTCdTjh3",
          "deactivatedByAncestor": true,
          "deactivatedByToggle": true,
          "deactivatingToggleId": "tAf8ykBSFEF5FTzhP",
          "inactive": true
      },
      {
          "_id": "DicTSmNi9XaBYrtsE",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Proceed to House Rules",
          "icon": {
              "name": "direction-sign",
              "shape": "M66.26 62.5c-4.533 0-9.11.862-11.564 1.906-.914.39-1.142.617-1.377.797v32.26l26.488.287-.47-32.488c-.237-.183-.513-.445-1.47-.85C75.382 63.36 70.795 62.5 66.26 62.5zM365.22 78.293c-.528.005-1.08.022-1.65.05-2.287.117-4.886.428-7.47.968-5.167 1.08-10.42 3.023-13.677 4.973-2.754 1.65-3.064 2.87-3.095 2.225l.143 20.05 29.85.323V78.585c-.124-.03-.017-.013-.16-.04-.998-.18-2.358-.267-3.94-.25zM19.413 115.1l.56 54.732 11.036 8.027-4.257 66.695 132.46 8.416-133.66 6.99-3.5 44.987 361.22-1.93 48.19-36.52.257-12.01 60.867-41.66-39.547-40.106-56.44-6.484 39.544-5.52-58.74-35.747zM369.32 321.092l-27.723.148 1.63 167.76h26.092V370.074l-9.272-4.303 9.27-5.23zm-286.428 1.53l-29.573.16V489h31.867z"
          },
          "color": "#8bc34a",
          "silent": true,
          "parent": {
              "id": "9NPeg89TBD4Bue4nG",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tAf8ykBSFEF5FTzhP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "9NPeg89TBD4Bue4nG",
                  "collection": "creatureProperties"
              }
          ],
          "order": 27,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "n3ZM9gtp42L4Cpvnv",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "tAf8ykBSFEF5FTzhP",
          "inactive": true
      },
      {
          "_id": "keg6kntYA6MH4r7xP",
          "target": "self",
          "operation": "increment",
          "type": "adjustment",
          "stat": "jonStatus",
          "amount": {
              "calculation": "1",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1485272252048968,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 1
              },
              "parseError": null,
              "errors": [],
              "value": 1
          },
          "silent": true,
          "parent": {
              "id": "DicTSmNi9XaBYrtsE",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tAf8ykBSFEF5FTzhP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "9NPeg89TBD4Bue4nG",
                  "collection": "creatureProperties"
              },
              {
                  "id": "DicTSmNi9XaBYrtsE",
                  "collection": "creatureProperties"
              }
          ],
          "order": 28,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "Gup7kWLtMnrGh3qsx",
          "deactivatedByAncestor": true,
          "deactivatedByToggle": true,
          "deactivatingToggleId": "tAf8ykBSFEF5FTzhP",
          "inactive": true
      },
      {
          "_id": "cDRTuycvQyadd5TfN",
          "type": "toggle",
          "name": "Tutorial Stage 3",
          "condition": {
              "calculation": "(jonStatus = 2) || (tutorialStatus = 2)",
              "_key": "condition",
              "type": "_calculation",
              "hash": 5426368013684976,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 2
                          },
                          "operator": "=",
                          "fn": "equality"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 2
                          },
                          "operator": "=",
                          "fn": "equality"
                      }
                  },
                  "operator": "||",
                  "fn": "or"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "parent": {
              "id": "bNgvnGMT9DuZy5y2M",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              }
          ],
          "order": 29,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "F8gHCeKxSXPphGBoT",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "ZGeKFjJhgfZteQQcu",
          "type": "folder",
          "groupStats": true,
          "hideStatsGroup": true,
          "location": "start",
          "tab": "build",
          "parent": {
              "id": "cDRTuycvQyadd5TfN",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cDRTuycvQyadd5TfN",
                  "collection": "creatureProperties"
              }
          ],
          "order": 30,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "wDu5kBXrrdQJakkjZ",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "cDRTuycvQyadd5TfN",
          "inactive": true
      },
      {
          "_id": "c6XkW4s9zkN3SJF5A",
          "type": "note",
          "summary": {
              "text": "<img src=\"https://imgur.com/Y1R1Jvn.png\" style=\"max-width:unset;width:calc(100% + 32px);margin:-32px -16px -23px;\">",
              "value": "<img src=\"https://imgur.com/Y1R1Jvn.png\" style=\"max-width:unset;width:calc(100% + 32px);margin:-32px -16px -23px;\">",
              "hash": 2375032650081188,
              "inlineCalculations": []
          },
          "description": {
              "text": "Art by Midjourney",
              "value": "Art by Midjourney",
              "hash": 7222334904407162,
              "inlineCalculations": []
          },
          "parent": {
              "id": "ZGeKFjJhgfZteQQcu",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cDRTuycvQyadd5TfN",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ZGeKFjJhgfZteQQcu",
                  "collection": "creatureProperties"
              }
          ],
          "order": 31,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "BW9DYF2gF3o5aYZc7",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "cDRTuycvQyadd5TfN",
          "inactive": true
      },
      {
          "_id": "KXj9sDirGpcw5GyMf",
          "type": "note",
          "name": "Any house rules?",
          "summary": {
              "text": "### Use the \"Extensions\" slot above to select from a collection of commonly used house rules and tools.\n\nStarting Feats? Dice Rollers? I've got a few over here.\n\nOnce you're done, you can click the \"X\" button on the slot- this saves everything. You can always edit your extensions later during character creation if you change your mind by clicking the dotted file icon on your Build card on this tab.\n\nThen, you can press the \"Proceed to Character Creation\" button below to dismiss me and start building your character. If you need me back, there will be a button to resummon me. Note that while I'm here, your building slots will be disabled to prevent clutter.",
              "value": "### Use the \"Extensions\" slot above to select from a collection of commonly used house rules and tools.\n\nStarting Feats? Dice Rollers? I've got a few over here.\n\nOnce you're done, you can click the \"X\" button on the slot- this saves everything. You can always edit your extensions later during character creation if you change your mind by clicking the dotted file icon on your Build card on this tab.\n\nThen, you can press the \"Proceed to Character Creation\" button below to dismiss me and start building your character. If you need me back, there will be a button to resummon me. Note that while I'm here, your building slots will be disabled to prevent clutter.",
              "hash": 8955123142322561,
              "inlineCalculations": []
          },
          "parent": {
              "id": "ZGeKFjJhgfZteQQcu",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cDRTuycvQyadd5TfN",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ZGeKFjJhgfZteQQcu",
                  "collection": "creatureProperties"
              }
          ],
          "order": 32,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "QsRWC4quNP5Lpzynm",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "cDRTuycvQyadd5TfN",
          "inactive": true
      },
      {
          "_id": "M9fWiEpLYMr8AHXbW",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Return to Sources",
          "icon": {
              "name": "sideswipe",
              "shape": "M422.52 404.55c0-92.006-1.243-95.736-1.243-95.736 204.583-58.483-212.586-77.202-252.76-71.863l-.15 34.762-118.71-68.004 118.346-65.303 1.394 33.82c303.74-5.71 371.256 83.987 253.124 232.325z"
          },
          "color": "#ff5722",
          "silent": true,
          "parent": {
              "id": "ZGeKFjJhgfZteQQcu",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cDRTuycvQyadd5TfN",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ZGeKFjJhgfZteQQcu",
                  "collection": "creatureProperties"
              }
          ],
          "order": 33,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "zj5YCgTveohrZYxoP",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "cDRTuycvQyadd5TfN",
          "inactive": true
      },
      {
          "_id": "KbXRqWHZzmHat2kqS",
          "target": "self",
          "operation": "increment",
          "type": "adjustment",
          "stat": "jonStatus",
          "amount": {
              "calculation": "-1",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1631352277109227,
              "parseNode": {
                  "parseType": "unaryOperator",
                  "operator": "-",
                  "right": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 1
                  }
              },
              "parseError": null,
              "errors": [],
              "value": -1
          },
          "silent": true,
          "parent": {
              "id": "M9fWiEpLYMr8AHXbW",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cDRTuycvQyadd5TfN",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ZGeKFjJhgfZteQQcu",
                  "collection": "creatureProperties"
              },
              {
                  "id": "M9fWiEpLYMr8AHXbW",
                  "collection": "creatureProperties"
              }
          ],
          "order": 34,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "uvtvjotvvMptvJGcH",
          "deactivatedByAncestor": true,
          "deactivatedByToggle": true,
          "deactivatingToggleId": "cDRTuycvQyadd5TfN",
          "inactive": true
      },
      {
          "_id": "WbM3CMDZbeFPsh6oc",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Proceed to Character Creation",
          "icon": {
              "name": "direction-sign",
              "shape": "M66.26 62.5c-4.533 0-9.11.862-11.564 1.906-.914.39-1.142.617-1.377.797v32.26l26.488.287-.47-32.488c-.237-.183-.513-.445-1.47-.85C75.382 63.36 70.795 62.5 66.26 62.5zM365.22 78.293c-.528.005-1.08.022-1.65.05-2.287.117-4.886.428-7.47.968-5.167 1.08-10.42 3.023-13.677 4.973-2.754 1.65-3.064 2.87-3.095 2.225l.143 20.05 29.85.323V78.585c-.124-.03-.017-.013-.16-.04-.998-.18-2.358-.267-3.94-.25zM19.413 115.1l.56 54.732 11.036 8.027-4.257 66.695 132.46 8.416-133.66 6.99-3.5 44.987 361.22-1.93 48.19-36.52.257-12.01 60.867-41.66-39.547-40.106-56.44-6.484 39.544-5.52-58.74-35.747zM369.32 321.092l-27.723.148 1.63 167.76h26.092V370.074l-9.272-4.303 9.27-5.23zm-286.428 1.53l-29.573.16V489h31.867z"
          },
          "color": "#8bc34a",
          "silent": true,
          "parent": {
              "id": "ZGeKFjJhgfZteQQcu",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cDRTuycvQyadd5TfN",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ZGeKFjJhgfZteQQcu",
                  "collection": "creatureProperties"
              }
          ],
          "order": 35,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "j9Fk6t5ENp7mNZpBF",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "cDRTuycvQyadd5TfN",
          "inactive": true
      },
      {
          "_id": "yJDJjLavW6tmwSWJd",
          "target": "self",
          "operation": "increment",
          "type": "adjustment",
          "stat": "jonStatus",
          "amount": {
              "calculation": "1",
              "_key": "amount",
              "type": "_calculation",
              "hash": 1485272252048968,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 1
              },
              "parseError": null,
              "errors": [],
              "value": 1
          },
          "silent": true,
          "parent": {
              "id": "WbM3CMDZbeFPsh6oc",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "cDRTuycvQyadd5TfN",
                  "collection": "creatureProperties"
              },
              {
                  "id": "ZGeKFjJhgfZteQQcu",
                  "collection": "creatureProperties"
              },
              {
                  "id": "WbM3CMDZbeFPsh6oc",
                  "collection": "creatureProperties"
              }
          ],
          "order": 36,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "SwsRkE3dar8v56rqf",
          "deactivatedByAncestor": true,
          "deactivatedByToggle": true,
          "deactivatingToggleId": "cDRTuycvQyadd5TfN",
          "inactive": true
      },
      {
          "_id": "PPcX8GQ5npfmfEWrF",
          "type": "toggle",
          "name": "inactiveTutorial",
          "condition": {
              "calculation": "(jonStatus = 1) || (tutorialStatus = 1)",
              "_key": "condition",
              "type": "_calculation",
              "hash": 1170302057672604,
              "parseNode": {
                  "parseType": "operator",
                  "left": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "jonStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "=",
                          "fn": "equality"
                      }
                  },
                  "right": {
                      "parseType": "parenthesis",
                      "content": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "tutorialStatus"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 1
                          },
                          "operator": "=",
                          "fn": "equality"
                      }
                  },
                  "operator": "||",
                  "fn": "or"
              },
              "parseError": null,
              "errors": [
                  {
                      "type": "info",
                      "message": "tutorialStatus not found, set to 0"
                  }
              ],
              "value": false
          },
          "parent": {
              "id": "bNgvnGMT9DuZy5y2M",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              }
          ],
          "order": 37,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "e7JzG8vTqDK6comRn",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "DQzhkBhPtYe3cytb8",
          "type": "folder",
          "groupStats": true,
          "location": "start",
          "tab": "build",
          "hideStatsGroup": true,
          "parent": {
              "id": "PPcX8GQ5npfmfEWrF",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "PPcX8GQ5npfmfEWrF",
                  "collection": "creatureProperties"
              }
          ],
          "order": 38,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "etAjmZqaNxcGwY7TX",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "PPcX8GQ5npfmfEWrF",
          "inactive": true
      },
      {
          "_id": "N5kWxX22uQu3vkc6v",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Resummon Jon",
          "icon": {
              "name": "uncertainty",
              "shape": "M257.78 19.438c-127.92.016-231.75 103.855-231.75 231.78 0 55.734 19.71 106.776 52.532 146.72L57.75 434.094h132.406l-66.312-114.72-22.375 39c-20.9-30.478-33.064-67.442-33.064-107.155 0-104.523 84.854-189.376 189.375-189.376 104.523 0 189.408 84.853 189.408 189.375 0 39.108-11.68 75.664-32 105.874l-21.875-37.72L327 434.095h132.406l-21.594-37.47c32.225-39.78 51.75-90.253 51.75-145.405 0-127.927-103.827-231.766-231.75-231.782h-.03zm-.655 75.468c-49.528-.047-110.474 29.232-128.406 104.938l60.75 14.312c26.965-76.242 90.87-70.824 113.31-28.625 26.775 50.346-89.687 107.283-84.124 190.407h77.688c6.49-98.144 118.973-123.49 59.562-229.53C337.963 114.38 301 96.572 261.876 95.03V95c-1.573-.062-3.153-.092-4.75-.094zM258.5 395.97c-26.95 0-48.594 21.644-48.594 48.592 0 26.95 21.645 48.594 48.594 48.594 26.95 0 48.594-21.645 48.594-48.594 0-26.948-21.645-48.593-48.594-48.593z"
          },
          "color": "#ffc107",
          "silent": true,
          "parent": {
              "id": "DQzhkBhPtYe3cytb8",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "PPcX8GQ5npfmfEWrF",
                  "collection": "creatureProperties"
              },
              {
                  "id": "DQzhkBhPtYe3cytb8",
                  "collection": "creatureProperties"
              }
          ],
          "order": 39,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "tEZAXrxTSkmkY82gB",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "PPcX8GQ5npfmfEWrF",
          "inactive": true
      },
      {
          "_id": "v55qYeLxfM2wyxo8Y",
          "target": "self",
          "operation": "set",
          "type": "adjustment",
          "stat": "jonStatus",
          "amount": {
              "calculation": "2",
              "_key": "amount",
              "type": "_calculation",
              "hash": 3497938686528596,
              "parseNode": {
                  "parseType": "constant",
                  "valueType": "number",
                  "value": 2
              },
              "parseError": null,
              "errors": [],
              "value": 2
          },
          "silent": true,
          "parent": {
              "id": "N5kWxX22uQu3vkc6v",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "PPcX8GQ5npfmfEWrF",
                  "collection": "creatureProperties"
              },
              {
                  "id": "DQzhkBhPtYe3cytb8",
                  "collection": "creatureProperties"
              },
              {
                  "id": "N5kWxX22uQu3vkc6v",
                  "collection": "creatureProperties"
              }
          ],
          "order": 40,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "SW4yEfsDFEEL2mu3o",
          "deactivatedByAncestor": true,
          "deactivatedByToggle": true,
          "deactivatingToggleId": "PPcX8GQ5npfmfEWrF",
          "inactive": true
      },
      {
          "_id": "rXhcZk4QQDqLXCphi",
          "actionType": "event",
          "target": "singleTarget",
          "resources": {
              "itemsConsumed": [],
              "attributesConsumed": []
          },
          "type": "action",
          "name": "Permanently Hide This Card",
          "icon": {
              "name": "hazard-sign",
              "shape": "M254.97 34.75c-30.48-.167-59.02 22.12-79.532 62.156-.075.146-.176.26-.25.406L43.063 326.783l-.22.343C18.5 365.413 13.377 401.515 28.47 428.03c15.08 26.498 48.627 40.126 93.5 37.908H387.063c44.887 2.227 78.445-11.404 93.53-37.907 15.09-26.51 9.956-62.595-14.375-100.874l-.22-.375L335.28 98.064c-.06-.12-.124-.225-.186-.344-20.948-40.263-49.626-62.803-80.125-62.97zm.06 18.844c13.576.13 26.453 6.93 38.126 18.343 11.606 11.347 22.554 27.453 33.406 48.344.063.122.125.224.188.345l115.22 201.563c.033.053.058.102.092.156l.125.22c12.92 20.274 21.395 38.06 25.282 53.967 3.91 16.01 3.063 30.648-3.845 42.408-6.908 11.76-19.222 19.533-34.78 23.906-15.444 4.34-34.508 5.656-57.408 4.5H137.625c-24.845 1.258-44.73-.32-60.405-5.125-15.78-4.84-27.68-13.45-33.72-25.69-6.04-12.237-5.862-26.797-1.5-42.436 4.333-15.535 12.815-32.608 24.875-51.53l.22-.377L183.562 120c.08-.157.17-.28.25-.438C194.51 98.644 205.32 82.6 216.875 71.376c11.642-11.307 24.58-17.913 38.156-17.78zm47.657 62.093l-28.53 224.032h-41.844L204.438 120.5c-1.404 2.556-2.81 5.205-4.22 7.97l-.093.218-.125.218-116.938 202.97-.093.187-.126.187C71.28 350.346 63.598 366.226 60 379.125c-3.598 12.9-3.108 22.322.25 29.125 3.358 6.803 9.925 12.28 22.47 16.125 12.542 3.845 30.67 5.547 54.405 4.313l.25-.032h234.313l.25.03c21.85 1.138 39.308-.28 51.875-3.81 12.566-3.533 19.822-8.827 23.687-15.407 3.865-6.58 4.978-15.545 1.813-28.5-3.166-12.958-10.732-29.374-23.094-48.72l-.126-.188-.125-.218-115.658-202.28-.093-.158-.064-.187c-2.5-4.828-4.99-9.326-7.47-13.532zM231.28 361.875h43.907v43.906H231.28v-43.905z"
          },
          "color": "#f44336",
          "silent": true,
          "parent": {
              "id": "DQzhkBhPtYe3cytb8",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "PPcX8GQ5npfmfEWrF",
                  "collection": "creatureProperties"
              },
              {
                  "id": "DQzhkBhPtYe3cytb8",
                  "collection": "creatureProperties"
              }
          ],
          "order": 41,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "yMDHvhhjjLsMif5HG",
          "deactivatedByToggle": true,
          "deactivatingToggleId": "PPcX8GQ5npfmfEWrF",
          "inactive": true
      },
      {
          "_id": "k2ZC7Trh5qyswyARs",
          "type": "note",
          "summary": {
              "text": "Tutorial Hidden! You can add it back using the \"Tutorial\" slot on your sheet.",
              "value": "Tutorial Hidden! You can add it back using the \"Tutorial\" slot on your sheet.",
              "hash": 8768382837511603,
              "inlineCalculations": []
          },
          "parent": {
              "id": "rXhcZk4QQDqLXCphi",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "PPcX8GQ5npfmfEWrF",
                  "collection": "creatureProperties"
              },
              {
                  "id": "DQzhkBhPtYe3cytb8",
                  "collection": "creatureProperties"
              },
              {
                  "id": "rXhcZk4QQDqLXCphi",
                  "collection": "creatureProperties"
              }
          ],
          "order": 42,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "yjPSjB3L6YJ7atM44",
          "deactivatedByAncestor": true,
          "deactivatedByToggle": true,
          "deactivatingToggleId": "PPcX8GQ5npfmfEWrF",
          "inactive": true
      },
      {
          "_id": "JLGsyh7rPFrZJP2L7",
          "target": "target",
          "removeAll": true,
          "type": "buffRemover",
          "targetParentBuff": true,
          "name": "Hide Tutorial",
          "parent": {
              "id": "rXhcZk4QQDqLXCphi",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "PPcX8GQ5npfmfEWrF",
                  "collection": "creatureProperties"
              },
              {
                  "id": "DQzhkBhPtYe3cytb8",
                  "collection": "creatureProperties"
              },
              {
                  "id": "rXhcZk4QQDqLXCphi",
                  "collection": "creatureProperties"
              }
          ],
          "order": 43,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "gZv8NCjwzyqv8JJM2",
          "deactivatedByAncestor": true,
          "deactivatedByToggle": true,
          "deactivatingToggleId": "PPcX8GQ5npfmfEWrF",
          "inactive": true
      },
      {
          "_id": "Pjc5fAn3cj7MvcfiR",
          "type": "folder",
          "name": "# Bundle: Core Sourcebooks (PHB, DMG, MM)",
          "icon": {
              "name": "bookshelf",
              "shape": "M169 57v430h78V57h-78zM25 105v190h46V105H25zm158 23h18v320h-18V128zm128.725 7.69l-45.276 8.124 61.825 344.497 45.276-8.124-61.825-344.497zM89 153v270h62V153H89zm281.502 28.68l-27.594 11.773 5.494 12.877 27.594-11.773-5.494-12.877zm12.56 29.433l-27.597 11.772 5.494 12.877 27.593-11.772-5.492-12.877zm12.555 29.434l-27.594 11.77 99.674 233.628 27.594-11.773-99.673-233.625zM25 313v30h46v-30H25zm190 7h18v128h-18V320zM25 361v126h46V361H25zm64 80v46h62v-46H89z"
          },
          "order": 190,
          "parent": {
              "id": "tu7gumrmq7uMYa7nP",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "libraryTags": [
              "LoV",
              "source",
              "bundle",
              "PHB",
              "DMG",
              "MM"
          ],
          "libraryNodeId": "PhG9qkdC7zyPCMi7a"
      },
      {
          "_id": "iobw7s6iFekkeWhMZ",
          "variableName": "showPHB",
          "errors": [],
          "type": "constant",
          "name": "Player's Handbook",
          "icon": {
              "name": "book-cover",
              "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
          },
          "calculation": "true",
          "order": 191,
          "parent": {
              "id": "Pjc5fAn3cj7MvcfiR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Pjc5fAn3cj7MvcfiR",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "libraryTags": [
              "LoV",
              "source",
              "PHB"
          ],
          "slotFillerType": "folder",
          "libraryNodeId": "8b564Zge8aTAkTnCT"
      },
      {
          "_id": "RdWtC2p8xviGdHgXg",
          "type": "toggle",
          "name": "Supersede SRD",
          "disabled": true,
          "enabled": false,
          "targetByTags": true,
          "extraTags": [],
          "targetTags": [
              "showSRD"
          ],
          "order": 192,
          "parent": {
              "id": "iobw7s6iFekkeWhMZ",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Pjc5fAn3cj7MvcfiR",
                  "collection": "creatureProperties"
              },
              {
                  "id": "iobw7s6iFekkeWhMZ",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "libraryNodeId": "79e3YHmTnGfvcuxxq",
          "deactivatedBySelf": true,
          "inactive": true
      },
      {
          "_id": "crwNYoSrDQEfkkmJg",
          "variableName": "showDMG",
          "errors": [],
          "type": "constant",
          "name": "Dungeon Master's Guide",
          "icon": {
              "name": "book-cover",
              "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
          },
          "calculation": "true",
          "order": 193,
          "parent": {
              "id": "Pjc5fAn3cj7MvcfiR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Pjc5fAn3cj7MvcfiR",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "libraryTags": [
              "LoV",
              "source",
              "DMG"
          ],
          "slotFillerType": "folder",
          "libraryNodeId": "Ba9X7DeD8zmzbJNfp"
      },
      {
          "_id": "TYFy5ABEfjcdPu94H",
          "variableName": "showMM",
          "errors": [],
          "type": "constant",
          "name": "Monster Manual",
          "icon": {
              "name": "book-cover",
              "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
          },
          "calculation": "true",
          "order": 194,
          "parent": {
              "id": "Pjc5fAn3cj7MvcfiR",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "Pjc5fAn3cj7MvcfiR",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "libraryTags": [
              "LoV",
              "source",
              "MM"
          ],
          "slotFillerType": "folder",
          "libraryNodeId": "uR8TgENWHfCnEmDJi"
      },
      {
          "_id": "LsQGTyQvgD3bbJ8Mh",
          "type": "folder",
          "name": "# Bundle: Core Supplements",
          "icon": {
              "name": "bookshelf",
              "shape": "M169 57v430h78V57h-78zM25 105v190h46V105H25zm158 23h18v320h-18V128zm128.725 7.69l-45.276 8.124 61.825 344.497 45.276-8.124-61.825-344.497zM89 153v270h62V153H89zm281.502 28.68l-27.594 11.773 5.494 12.877 27.594-11.773-5.494-12.877zm12.56 29.433l-27.597 11.772 5.494 12.877 27.593-11.772-5.492-12.877zm12.555 29.434l-27.594 11.77 99.674 233.628 27.594-11.773-99.673-233.625zM25 313v30h46v-30H25zm190 7h18v128h-18V320zM25 361v126h46V361H25zm64 80v46h62v-46H89z"
          },
          "order": 195,
          "parent": {
              "id": "tu7gumrmq7uMYa7nP",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "libraryTags": [
              "LoV",
              "source",
              "bundle",
              "VGM",
              "XGE",
              "MTF",
              "TCE",
              "FTD",
              "MPMM",
              "MotM"
          ],
          "libraryNodeId": "D7LANajySBPSYABWp"
      },
      {
          "_id": "Xr7yyCMM9ZF8uxEvG",
          "variableName": "showVGM",
          "errors": [],
          "type": "constant",
          "name": "Volo's Guide to Monsters",
          "icon": {
              "name": "book-cover",
              "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
          },
          "calculation": "true",
          "order": 196,
          "parent": {
              "id": "LsQGTyQvgD3bbJ8Mh",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "LsQGTyQvgD3bbJ8Mh",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "libraryTags": [
              "LoV",
              "source",
              "VGM"
          ],
          "slotFillerType": "folder",
          "libraryNodeId": "JPHMNeokZzBnWzC8r"
      },
      {
          "_id": "FGoKWA4gzfGNpzH2v",
          "variableName": "showXGE",
          "errors": [],
          "type": "constant",
          "name": "Xanathar's Guide to Everything",
          "icon": {
              "name": "book-cover",
              "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
          },
          "calculation": "true",
          "order": 197,
          "parent": {
              "id": "LsQGTyQvgD3bbJ8Mh",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "LsQGTyQvgD3bbJ8Mh",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "libraryTags": [
              "LoV",
              "source",
              "XGE"
          ],
          "slotFillerType": "folder",
          "libraryNodeId": "vdmfLGfazjbRXvzsA"
      },
      {
          "_id": "kaojsDvkKYokkJo8c",
          "variableName": "showMTF",
          "errors": [],
          "type": "constant",
          "name": "Mordenkainen's Tome of Foes",
          "icon": {
              "name": "book-cover",
              "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
          },
          "calculation": "true",
          "order": 198,
          "parent": {
              "id": "LsQGTyQvgD3bbJ8Mh",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "LsQGTyQvgD3bbJ8Mh",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "libraryTags": [
              "LoV",
              "source",
              "MTF"
          ],
          "slotFillerType": "folder",
          "libraryNodeId": "owHZKozTScdPWwJNf"
      },
      {
          "_id": "X3aadnXmwzBCahgC9",
          "variableName": "showTCE",
          "errors": [],
          "type": "constant",
          "name": "Tasha's Cauldron of Everything",
          "icon": {
              "name": "book-cover",
              "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
          },
          "calculation": "true",
          "order": 199,
          "parent": {
              "id": "LsQGTyQvgD3bbJ8Mh",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "LsQGTyQvgD3bbJ8Mh",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "libraryTags": [
              "LoV",
              "source",
              "TCE"
          ],
          "slotFillerType": "folder",
          "libraryNodeId": "nf4sTR5EPBLiN7XhZ"
      },
      {
          "_id": "vCxB2wuFFnL4eeqQa",
          "variableName": "showFTD",
          "errors": [],
          "type": "constant",
          "name": "Fizban's Treasury of Dragons",
          "icon": {
              "name": "book-cover",
              "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
          },
          "calculation": "true",
          "order": 200,
          "parent": {
              "id": "LsQGTyQvgD3bbJ8Mh",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "LsQGTyQvgD3bbJ8Mh",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "libraryTags": [
              "LoV",
              "source",
              "FTD"
          ],
          "slotFillerType": "folder",
          "libraryNodeId": "rtpGnMXDGBA5Ky5kN"
      },
      {
          "_id": "mmnesZx7FCcSsntbt",
          "variableName": "showMPMM",
          "errors": [],
          "type": "constant",
          "name": "Mordenkainen Presents: Monsters of the Multiverse",
          "icon": {
              "name": "book-cover",
              "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
          },
          "calculation": "true",
          "order": 201,
          "parent": {
              "id": "LsQGTyQvgD3bbJ8Mh",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "LsQGTyQvgD3bbJ8Mh",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "libraryTags": [
              "LoV",
              "source",
              "MPMM",
              "MotM"
          ],
          "slotFillerType": "folder",
          "libraryNodeId": "6wNNSdWRnTdJuTqey"
      },
      {
          "_id": "Eq6AyKgnftesJbJLc",
          "variableName": "showBGG",
          "errors": [],
          "type": "constant",
          "name": "Bigby Presents: Glory of the Giants",
          "icon": {
              "name": "book-cover",
              "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
          },
          "calculation": "true",
          "order": 202,
          "parent": {
              "id": "LsQGTyQvgD3bbJ8Mh",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "LsQGTyQvgD3bbJ8Mh",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "fillSlots": true,
          "slotQuantityFilled": 1,
          "libraryTags": [
              "LoV",
              "source",
              "BGG"
          ],
          "libraryNodeId": "uQdwqCWbwTXgExZF3"
      },
      {
          "_id": "jEWcojQcrnJn7C5Bt",
          "variableName": "showBMT",
          "errors": [],
          "type": "constant",
          "name": "The Book of Many Things",
          "calculation": "true",
          "fillSlots": true,
          "slotQuantityFilled": 1,
          "libraryTags": [
              "LoV",
              "source",
              "BMT"
          ],
          "order": 203,
          "parent": {
              "id": "LsQGTyQvgD3bbJ8Mh",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "tu7gumrmq7uMYa7nP",
                  "collection": "creatureProperties"
              },
              {
                  "id": "LsQGTyQvgD3bbJ8Mh",
                  "collection": "creatureProperties"
              }
          ],
          "tags": [],
          "icon": {
              "name": "book-cover",
              "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
          },
          "libraryNodeId": "S5z2S5bzAD7ENPLiY"
      },
      {
          "_id": "x67pvHnuLuv6koNSW",
          "slotQuantityFilled": 1,
          "type": "folder",
          "name": "Building a Character with Moderate to High Homebrew",
          "icon": {
              "name": "gear-hammer",
              "shape": "M265.344 17.5l-4.188 25.313c-17.994-.1-35.62 2.066-52.562 6.28l-9.438-25.062-55.125 20.75 9.907 26.282c-15.008 8.587-28.96 18.95-41.5 30.876L90 83.53l-37.375 45.5L75.75 148c-8.54 14.428-15.47 30.036-20.5 46.594l-30.063-4.97-9.593 58.095L46 252.75c-.374 17.218 1.313 34.127 4.906 50.438L22 314.063l20.75 55.125 28.625-10.782c8.07 15.027 17.91 29.046 29.28 41.75L81.688 423.25l45.532 37.344 18.343-22.344c14.386 9.118 30.04 16.577 46.687 22.125l-4.53 27.5 58.093 9.594 4.343-26.283c18.046.874 35.764-.54 52.875-4.03l8.97 23.78 55.094-20.75-8.53-22.656c16.126-8.343 31.134-18.683 44.655-30.78l17.936 14.72 37.344-45.533-17.188-14.093c9.733-15.35 17.606-32.125 23.25-50.03l21.407 3.53 9.56-58.094-21.06-3.47c.608-18.84-1.282-37.305-5.408-55.06l19.844-7.47-20.75-55.125-20.187 7.594c-8.89-16.114-19.817-31.033-32.5-44.376l14.155-17.25-45.5-37.375-14.72 17.936c-15.396-9.116-32.13-16.37-49.936-21.47l3.967-24.092-58.093-9.594zm-8.03 47.938c11.136-.15 22.437.685 33.81 2.562C395.113 85.164 465.665 183.606 448.5 287.594 431.336 391.58 332.894 462.134 228.906 444.97 124.92 427.803 54.366 329.36 71.53 225.374c15.02-90.99 92.292-156.386 181.032-159.813 1.585-.06 3.16-.103 4.75-.124zm.217 18.687c-1.437.018-2.88.04-4.31.094-80.154 3.037-149.672 61.917-163.25 144.186-15.52 94.022 47.977 182.606 142 198.125 94.02 15.52 182.573-47.977 198.093-142 15.52-94.02-47.947-182.573-141.97-198.092-10.283-1.698-20.496-2.44-30.562-2.313zm.408 18.156c9-.116 18.145.546 27.343 2.064 84.096 13.88 140.85 93.092 126.97 177.187-13.88 84.096-93.06 140.85-177.156 126.97-25.808-4.26-49.03-14.68-68.438-29.5l109.688-133.625 52.844 43.375 58.437-71.188-108.22-88.78-101.842 35.53 71 58.25L140.78 353.938c-26.985-33.066-40.165-77.126-32.655-122.625 12.146-73.583 74.283-126.223 145.97-128.937 1.28-.048 2.557-.077 3.843-.094z"
          },
          "color": "#ffc107",
          "description": {
              "text": "How to build a character in Dicecloud v2 when not primarily using published content.",
              "value": "How to build a character in Dicecloud v2 when not primarily using published content.",
              "hash": 5864974928845422,
              "inlineCalculations": []
          },
          "tags": [
              "LoV",
              "libraryIntro"
          ],
          "parent": {
              "id": "EPEYEa6Tn6DQmzjZD",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "EPEYEa6Tn6DQmzjZD",
                  "collection": "creatureProperties"
              }
          ],
          "order": 11,
          "libraryTags": [
              "LoV",
              "libraryIntro"
          ],
          "fillSlots": true,
          "searchable": true,
          "libraryNodeId": "mdv8QdsxQpui7qEuM"
      },
      {
          "_id": "CW6XGPBG7t3Ek4d9F",
          "type": "note",
          "summary": {
              "text": "<img src=\"https://imgur.com/DvTFA2V.png\" style=\"max-width:unset;width:calc(100% + 32px);margin:-32px -16px -23px;\">",
              "value": "<img src=\"https://imgur.com/DvTFA2V.png\" style=\"max-width:unset;width:calc(100% + 32px);margin:-32px -16px -23px;\">",
              "hash": 840449678849599,
              "inlineCalculations": []
          },
          "parent": {
              "id": "T8q3gmwANm9Kbpmcu",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "EPEYEa6Tn6DQmzjZD",
                  "collection": "creatureProperties"
              },
              {
                  "id": "x67pvHnuLuv6koNSW",
                  "collection": "creatureProperties"
              },
              {
                  "id": "T8q3gmwANm9Kbpmcu",
                  "collection": "creatureProperties"
              }
          ],
          "order": 13,
          "tags": [],
          "libraryTags": [],
          "description": {
              "text": "Art by Midjourney",
              "value": "Art by Midjourney",
              "hash": 7222334904407162,
              "inlineCalculations": []
          },
          "libraryNodeId": "YqjnkToj2HStALZ3Z"
      },
      {
          "_id": "6shAKmJByFEX7ftpb",
          "type": "note",
          "summary": {
              "text": "Expand the menus below to learn more about building a character with v2.\n\nWhen you’re ready to explore a different part of the library, click the Trash Can icon next to “Building a Character with Moderate to High Homebrew” on the Slots card of this tab.",
              "value": "Expand the menus below to learn more about building a character with v2.\n\nWhen you’re ready to explore a different part of the library, click the Trash Can icon next to “Building a Character with Moderate to High Homebrew” on the Slots card of this tab.",
              "hash": 7528406609014363,
              "inlineCalculations": []
          },
          "parent": {
              "id": "T8q3gmwANm9Kbpmcu",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "EPEYEa6Tn6DQmzjZD",
                  "collection": "creatureProperties"
              },
              {
                  "id": "x67pvHnuLuv6koNSW",
                  "collection": "creatureProperties"
              },
              {
                  "id": "T8q3gmwANm9Kbpmcu",
                  "collection": "creatureProperties"
              }
          ],
          "order": 14,
          "tags": [],
          "libraryTags": [],
          "name": "Building a Character with Moderate to High Homebrew",
          "libraryNodeId": "KHHBJNRhPucYoC828"
      },
      {
          "_id": "TqwnDtpSeemjSmb9Y",
          "type": "feature",
          "name": "[WARNING] This might not be the library for you!",
          "description": {
              "text": "The Libraries of Vexus were designed to offer a highly automated experience for official published 5e content. Every bit of this library is intended to work with other bits of this library, making the entire thing a very complex network of variables, actions, triggers, buffs, and events!\n\nIf you are using a heavy amount of homebrew, it can be very overwhelming to try to make something that \"slots in\" to everything else LoV can offer. **Especially if you're using Avrae- which only reads the names of features- and/or if you want a similar character creation process as the one offered in v1, I strongly suggest you use KatrinaKitten's [Minimus Arcanum](https://beta.dicecloud.com/library/HvMc89f6THdZDJHfs), which is a minimal D&D 5e ruleset designed to replicate a similar user experience to DiceCloud v1, instead of LoV.**",
              "value": "The Libraries of Vexus were designed to offer a highly automated experience for official published 5e content. Every bit of this library is intended to work with other bits of this library, making the entire thing a very complex network of variables, actions, triggers, buffs, and events!\n\nIf you are using a heavy amount of homebrew, it can be very overwhelming to try to make something that \"slots in\" to everything else LoV can offer. **Especially if you're using Avrae- which only reads the names of features- and/or if you want a similar character creation process as the one offered in v1, I strongly suggest you use KatrinaKitten's [Minimus Arcanum](https://beta.dicecloud.com/library/HvMc89f6THdZDJHfs), which is a minimal D&D 5e ruleset designed to replicate a similar user experience to DiceCloud v1, instead of LoV.**",
              "hash": 4079118478206324,
              "inlineCalculations": []
          },
          "parent": {
              "id": "T8q3gmwANm9Kbpmcu",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "EPEYEa6Tn6DQmzjZD",
                  "collection": "creatureProperties"
              },
              {
                  "id": "x67pvHnuLuv6koNSW",
                  "collection": "creatureProperties"
              },
              {
                  "id": "T8q3gmwANm9Kbpmcu",
                  "collection": "creatureProperties"
              }
          ],
          "order": 15,
          "tags": [],
          "libraryTags": [],
          "color": "#ff9800",
          "libraryNodeId": "XjbFRjzZREty6Y8a6"
      },
      {
          "_id": "T8q3gmwANm9Kbpmcu",
          "type": "folder",
          "parent": {
              "id": "x67pvHnuLuv6koNSW",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "EPEYEa6Tn6DQmzjZD",
                  "collection": "creatureProperties"
              },
              {
                  "id": "x67pvHnuLuv6koNSW",
                  "collection": "creatureProperties"
              }
          ],
          "order": 12,
          "tags": [],
          "libraryTags": [],
          "groupStats": true,
          "hideStatsGroup": true,
          "location": "start",
          "tab": "build",
          "libraryNodeId": "iYfP5uAwssr6E8NYo"
      },
      {
          "_id": "YidBfyJjFG8SYSAKa",
          "type": "feature",
          "name": "Making a Custom Race/Class/Subclass",
          "description": {
              "text": "Chances are, if you're reading this, you're very new to Dicecloud v2. I can't recommend jumping into the deep end of what v2 has to offer, so this tutorial is going to sacrifice a lot of possible automation in favor of simplicity. As you come to know v2 more and more, you'll be able to figure out some more advanced techniques. I recommend chatting with some of the developers on the [Dicecloud Discord Server](https://discord.gg/yeDsx7PCMf).\n\n# The Basic Concept\nThe basic idea when making your custom race/class/subclass is to first divide the source material into various traits. Then, you want to categorize these traits into things like Resources (Ki Points, Mystic Points, Lay on Hands Health Pool, etc.), Features (Auras, Font of Magic, Fighting Styles, etc.), and Actions (Countercharm, Cutting Words, Channel Divinity, Shifting, etc.).\n\nThen, go to the respective page (Stats, Features, Actions), click the red plus button, and add the associated property, filling out all the fields completely. Be sure to check out the [Documentation](https://dicecloud.com/docs) if you're confused about how any of the properties function.\n\nIf a feature changes one of your stats, such as an ability score, click on the feature, click edit, expand children, and click the plus button there to add an Effect property. Adding children gets you access to all the available properties.\n\n# The “Custom Class” Template\nIf you enable homebrew by selecting Homebrew under your sources slot on the build page, you’ll be able to add and edit a custom class template. This doesn’t work will with multiclassing, but is excellent at providing a basic structure for homebrew classes.\n\n# Advanced Editing\nIf you really want a lot of granular control over what you're making, and you know how to not break things, click the three dots in the top right of the page, click \"Edit Details\", expand Settings, and toggle on \"Show tree tab.\"\n\nThe tree tab is the representation of the data structure that makes up your character. Here you can add all of the properties DiceCloud v2 offers you, as well as adjust the order and hierarchy of the features on your sheet.",
              "value": "Chances are, if you're reading this, you're very new to Dicecloud v2. I can't recommend jumping into the deep end of what v2 has to offer, so this tutorial is going to sacrifice a lot of possible automation in favor of simplicity. As you come to know v2 more and more, you'll be able to figure out some more advanced techniques. I recommend chatting with some of the developers on the [Dicecloud Discord Server](https://discord.gg/yeDsx7PCMf).\n\n# The Basic Concept\nThe basic idea when making your custom race/class/subclass is to first divide the source material into various traits. Then, you want to categorize these traits into things like Resources (Ki Points, Mystic Points, Lay on Hands Health Pool, etc.), Features (Auras, Font of Magic, Fighting Styles, etc.), and Actions (Countercharm, Cutting Words, Channel Divinity, Shifting, etc.).\n\nThen, go to the respective page (Stats, Features, Actions), click the red plus button, and add the associated property, filling out all the fields completely. Be sure to check out the [Documentation](https://dicecloud.com/docs) if you're confused about how any of the properties function.\n\nIf a feature changes one of your stats, such as an ability score, click on the feature, click edit, expand children, and click the plus button there to add an Effect property. Adding children gets you access to all the available properties.\n\n# The “Custom Class” Template\nIf you enable homebrew by selecting Homebrew under your sources slot on the build page, you’ll be able to add and edit a custom class template. This doesn’t work will with multiclassing, but is excellent at providing a basic structure for homebrew classes.\n\n# Advanced Editing\nIf you really want a lot of granular control over what you're making, and you know how to not break things, click the three dots in the top right of the page, click \"Edit Details\", expand Settings, and toggle on \"Show tree tab.\"\n\nThe tree tab is the representation of the data structure that makes up your character. Here you can add all of the properties DiceCloud v2 offers you, as well as adjust the order and hierarchy of the features on your sheet.",
              "hash": 3270610838368261,
              "inlineCalculations": []
          },
          "parent": {
              "id": "T8q3gmwANm9Kbpmcu",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "EPEYEa6Tn6DQmzjZD",
                  "collection": "creatureProperties"
              },
              {
                  "id": "x67pvHnuLuv6koNSW",
                  "collection": "creatureProperties"
              },
              {
                  "id": "T8q3gmwANm9Kbpmcu",
                  "collection": "creatureProperties"
              }
          ],
          "order": 17,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "9bcL8Siq2grJjuKtX"
      },
      {
          "_id": "bNbGMj2EMjH8ndkeF",
          "type": "feature",
          "name": "Non-Homebrew Content",
          "description": {
              "text": "To add non-homebrew content, use the same methods described in the other exhibit of the library, **Building a Character with Little to No Homebrew.**",
              "value": "To add non-homebrew content, use the same methods described in the other exhibit of the library, **Building a Character with Little to No Homebrew.**",
              "hash": 8188800805764873,
              "inlineCalculations": []
          },
          "parent": {
              "id": "T8q3gmwANm9Kbpmcu",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "EPEYEa6Tn6DQmzjZD",
                  "collection": "creatureProperties"
              },
              {
                  "id": "x67pvHnuLuv6koNSW",
                  "collection": "creatureProperties"
              },
              {
                  "id": "T8q3gmwANm9Kbpmcu",
                  "collection": "creatureProperties"
              }
          ],
          "order": 16,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "Ra7keHLGCYgBBhZZt"
      },
      {
          "_id": "TiRzrTMXmrj44zpcx",
          "type": "feature",
          "name": "\"I think I found a bug!\"",
          "description": {
              "text": "We're not perfect! This is a living project that a whole team of developers is working on. If you think you found a bug with our libraries, please [join our Discord](https://discord.gg/QmAjPfnf8g), see if the bug has already been reported, and, if not, throw it on the pile!",
              "value": "We're not perfect! This is a living project that a whole team of developers is working on. If you think you found a bug with our libraries, please [join our Discord](https://discord.gg/QmAjPfnf8g), see if the bug has already been reported, and, if not, throw it on the pile!",
              "hash": 1607997784201391,
              "inlineCalculations": []
          },
          "parent": {
              "id": "T8q3gmwANm9Kbpmcu",
              "collection": "creatureProperties"
          },
          "ancestors": [
              {
                  "collection": "creatures",
                  "id": "c6qLnT4xfvSCDhCEm"
              },
              {
                  "id": "x45G5tefgW5u5pnrJ",
                  "collection": "creatureProperties"
              },
              {
                  "id": "R7WGoSicaBhTxEMxy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "5As7xrwXJFueMQm3S",
                  "collection": "creatureProperties"
              },
              {
                  "id": "bNgvnGMT9DuZy5y2M",
                  "collection": "creatureProperties"
              },
              {
                  "id": "dyFrhTTtZP6f5AyhS",
                  "collection": "creatureProperties"
              },
              {
                  "id": "8C2ZCpBPmBaoPmMFy",
                  "collection": "creatureProperties"
              },
              {
                  "id": "EPEYEa6Tn6DQmzjZD",
                  "collection": "creatureProperties"
              },
              {
                  "id": "x67pvHnuLuv6koNSW",
                  "collection": "creatureProperties"
              },
              {
                  "id": "T8q3gmwANm9Kbpmcu",
                  "collection": "creatureProperties"
              }
          ],
          "order": 18,
          "tags": [],
          "libraryTags": [],
          "libraryNodeId": "WzLoC8NeqgRwrCxdj"
      }
  ],
  "creatureVariables": [
      {
          "_id": "c5GwNmJ62g4y77h7G",
          "_creatureId": "c6qLnT4xfvSCDhCEm",
          "D10HitDice": {},
          "D12HitDice": {},
          "D4HitDice": {},
          "D6HitDice": {},
          "D8HitDice": {},
          "TLoEVersion": {
              "attributeType": "utility",
              "type": "attribute",
              "baseValue": {
                  "calculation": "020000000",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 4928608684631306,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 20000000
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 20000000
              },
              "description": {
                  "text": "```\n000000000\n|||||||^^: Bugfix #: No bugfixes = 00, v.a = 01, v.z = 26, v.aa = 27, v.cv = 99\n||||^^^: Minor version #: v.13a = 01301\n||^^: Major version #: v.13.13a = 1301301\n^^: Release#: v1.13.13a = 011301301\n```",
                  "value": "```\n000000000\n|||||||^^: Bugfix #: No bugfixes = 00, v.a = 01, v.z = 26, v.aa = 27, v.cv = 99\n||||^^^: Minor version #: v.13a = 01301\n||^^: Major version #: v.13.13a = 1301301\n^^: Release#: v1.13.13a = 011301301\n```",
                  "hash": 5509844309254000,
                  "inlineCalculations": []
              },
              "order": 2,
              "tags": [],
              "libraryTags": [],
              "variableName": "TLoEVersion",
              "name": "TLoE Patch Version",
              "libraryNodeId": "BXTHWHmW24jSyzv5k",
              "_id": "CRxZc4kB7jZQHJjnG",
              "total": 20000000,
              "value": 20000000,
              "effects": [
                  {
                      "_id": "CRxZc4kB7jZQHJjnG",
                      "name": "TLoE Patch Version",
                      "operation": "base",
                      "amount": {
                          "value": 20000000
                      },
                      "type": "attribute"
                  }
              ]
          },
          "TLoEinstalled": {
              "variableName": "TLoEinstalled",
              "errors": [],
              "type": "constant",
              "name": "Tameran's Library of Everything Installed",
              "calculation": "true",
              "order": 205,
              "tags": [],
              "libraryTags": [],
              "libraryNodeId": "CKLvYHDLwDBu6fZKu",
              "_id": "3wvNb3kzGdiiuao3T",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "acrobatics": {
              "skillType": "skill",
              "type": "skill",
              "name": "Acrobatics",
              "variableName": "acrobatics",
              "order": 95,
              "tags": [
                  "abilityCheck",
                  "dexterityCheck"
              ],
              "description": {
                  "text": "Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The DM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips.",
                  "hash": 8446626020276577,
                  "inlineCalculations": [],
                  "value": "Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The DM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "ability": "dexterity",
              "libraryNodeId": "K2LdDdw8tAnxcjEEY",
              "_id": "yTQ3w9ZguoqLcWFy5",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "animalHandling": {
              "skillType": "skill",
              "type": "skill",
              "name": "Animal Handling",
              "variableName": "animalHandling",
              "ability": "wisdom",
              "order": 96,
              "tags": [
                  "abilityCheck",
                  "wisdomCheck"
              ],
              "description": {
                  "text": "When there is any question whether you can calm down a domesticated animal, keep a mount from getting spooked, or intuit an animal's intentions, the DM might call for a Wisdom (Animal Handling) check. You also make a Wisdom (Animal Handling) check to control your mount when you attempt a risky maneuver.",
                  "hash": 6411600518704267,
                  "inlineCalculations": [],
                  "value": "When there is any question whether you can calm down a domesticated animal, keep a mount from getting spooked, or intuit an animal's intentions, the DM might call for a Wisdom (Animal Handling) check. You also make a Wisdom (Animal Handling) check to control your mount when you attempt a risky maneuver."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "8mnm9wtFFYktZ3HKc",
              "_id": "CmWBh9Bb5N2rzqmSn",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "arcana": {
              "skillType": "skill",
              "type": "skill",
              "name": "Arcana",
              "variableName": "arcana",
              "ability": "intelligence",
              "order": 97,
              "tags": [
                  "abilityCheck",
                  "intelligenceCheck"
              ],
              "description": {
                  "text": "Your Intelligence (Arcana) check measures your ability to recall lore about spells, magic items, eldritch symbols, magical traditions, the planes of existence, and the inhabitants of those planes.",
                  "hash": 5762050901043230,
                  "inlineCalculations": [],
                  "value": "Your Intelligence (Arcana) check measures your ability to recall lore about spells, magic items, eldritch symbols, magical traditions, the planes of existence, and the inhabitants of those planes."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "JWXT2S7Mo2vSQpWZH",
              "_id": "GgeBbRCwoSdRd5B4T",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "armor": {
              "name": "Armor Class",
              "variableName": "armor",
              "attributeType": "stat",
              "type": "attribute",
              "order": 91,
              "tags": [],
              "baseValue": {
                  "calculation": "10+dexterity.modifier",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 8485884389787522,
                  "parseNode": {
                      "parseType": "operator",
                      "left": {
                          "parseType": "constant",
                          "valueType": "number",
                          "value": 10
                      },
                      "right": {
                          "parseType": "accessor",
                          "path": [
                              "modifier"
                          ],
                          "name": "dexterity"
                      },
                      "operator": "+",
                      "fn": "add"
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 5
              },
              "description": {
                  "text": "Your Armor Class (AC) represents how well your character avoids being wounded in battle. Things that contribute to your AC include the armor you wear, the shield you carry, and your Dexterity modifier. Not all characters wear armor or carry shields, however.\n\nWithout armor or a shield, your character's AC equals 10 + his or her Dexterity modifier. If your character wears armor, carries a shield, or both, calculate your AC using the rules in chapter 5. Record your AC on your character sheet.\n\nYour character needs to be proficient with armor and shields to wear and use them effectively, and your armor and shield proficiencies are determined by your class.\n\nThere are drawbacks to wearing armor or carrying a shield if you lack the required proficiency, as explained in chapter 5.\n\nSome spells and class features give you a different way to calculate your AC. If you have multiple features that give you different ways to calculate your AC, you choose which one to use.",
                  "hash": 8051908672890785,
                  "inlineCalculations": [],
                  "value": "Your Armor Class (AC) represents how well your character avoids being wounded in battle. Things that contribute to your AC include the armor you wear, the shield you carry, and your Dexterity modifier. Not all characters wear armor or carry shields, however.\n\nWithout armor or a shield, your character's AC equals 10 + his or her Dexterity modifier. If your character wears armor, carries a shield, or both, calculate your AC using the rules in chapter 5. Record your AC on your character sheet.\n\nYour character needs to be proficient with armor and shields to wear and use them effectively, and your armor and shield proficiencies are determined by your class.\n\nThere are drawbacks to wearing armor or carrying a shield if you lack the required proficiency, as explained in chapter 5.\n\nSome spells and class features give you a different way to calculate your AC. If you have multiple features that give you different ways to calculate your AC, you choose which one to use."
              },
              "libraryTags": [],
              "libraryNodeId": "SNhNNJbAmnAKFSg8g",
              "_id": "6MZCHjJAFnXEhJTAH",
              "total": 5,
              "value": 5,
              "effects": [
                  {
                      "_id": "6MZCHjJAFnXEhJTAH",
                      "name": "Armor Class",
                      "operation": "base",
                      "amount": {
                          "value": 5
                      },
                      "type": "attribute"
                  }
              ]
          },
          "athletics": {
              "skillType": "skill",
              "type": "skill",
              "name": "Athletics",
              "variableName": "athletics",
              "ability": "strength",
              "order": 98,
              "tags": [
                  "abilityCheck",
                  "strengthCheck"
              ],
              "description": {
                  "text": "Your Strength (Athletics) check covers difficult situations you encounter while climbing, jumping, or swimming. Examples include the following activities:\n\n- You attempt to climb a sheer or slippery cliff, avoid hazards while scaling a wall, or cling to a surface while something is trying to knock you off.\n- You try to jump an unusually long distance or pull off a stunt mid jump.\n- You struggle to swim or stay afloat in treacherous currents, storm-tossed waves, or areas of thick seaweed. Or another creature tries to push or pull you underwater or otherwise interfere with your swimming.",
                  "hash": 550586597009794,
                  "inlineCalculations": [],
                  "value": "Your Strength (Athletics) check covers difficult situations you encounter while climbing, jumping, or swimming. Examples include the following activities:\n\n- You attempt to climb a sheer or slippery cliff, avoid hazards while scaling a wall, or cling to a surface while something is trying to knock you off.\n- You try to jump an unusually long distance or pull off a stunt mid jump.\n- You struggle to swim or stay afloat in treacherous currents, storm-tossed waves, or areas of thick seaweed. Or another creature tries to push or pull you underwater or otherwise interfere with your swimming."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "WvNG89jDjMu8HWd4k",
              "_id": "jewjJmH39NMe5AQQh",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "burrowSpeed": {
              "value": 0,
              "advantage": 0,
              "conditionalBenefits": [],
              "rollBonus": [],
              "fail": 0,
              "rollBonuses": []
          },
          "carryingCapacity": {
              "name": "Carrying Capacity",
              "variableName": "carryingCapacity",
              "attributeType": "utility",
              "type": "attribute",
              "order": 120,
              "tags": [],
              "baseValue": {
                  "calculation": "strength * 15 * [0.5,1,1,2,4,8][creatureSize]",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 4597180825239598,
                  "parseNode": {
                      "parseType": "operator",
                      "left": {
                          "parseType": "operator",
                          "left": {
                              "parseType": "symbol",
                              "name": "strength"
                          },
                          "right": {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 15
                          },
                          "operator": "*",
                          "fn": "multiply"
                      },
                      "right": {
                          "parseType": "index",
                          "array": {
                              "parseType": "array",
                              "values": [
                                  {
                                      "parseType": "constant",
                                      "valueType": "number",
                                      "value": 0.5
                                  },
                                  {
                                      "parseType": "constant",
                                      "valueType": "number",
                                      "value": 1
                                  },
                                  {
                                      "parseType": "constant",
                                      "valueType": "number",
                                      "value": 1
                                  },
                                  {
                                      "parseType": "constant",
                                      "valueType": "number",
                                      "value": 2
                                  },
                                  {
                                      "parseType": "constant",
                                      "valueType": "number",
                                      "value": 4
                                  },
                                  {
                                      "parseType": "constant",
                                      "valueType": "number",
                                      "value": 8
                                  }
                              ]
                          },
                          "index": {
                              "parseType": "symbol",
                              "name": "creatureSize"
                          }
                      },
                      "operator": "*",
                      "fn": "multiply"
                  },
                  "parseError": null,
                  "errors": [
                      {
                          "type": "warning",
                          "message": "Index of 0 is out of range for an array of length 6"
                      }
                  ],
                  "value": "0 * [0.5, 1, 1, 2, 4, 8][0]"
              },
              "libraryTags": [],
              "libraryNodeId": "kqwvxNSxzN5bFSK2z",
              "_id": "m4b8F9CpFMYNHfvrm",
              "total": "0 * [0.5, 1, 1, 2, 4, 8][0]",
              "value": null,
              "effects": [
                  {
                      "_id": "m4b8F9CpFMYNHfvrm",
                      "name": "Carrying Capacity",
                      "operation": "base",
                      "amount": {
                          "value": "0 * [0.5, 1, 1, 2, 4, 8][0]"
                      },
                      "type": "attribute"
                  }
              ]
          },
          "charisma": {
              "name": "Charisma",
              "variableName": "charisma",
              "attributeType": "ability",
              "type": "attribute",
              "order": 130,
              "tags": [
                  "abilityCheck",
                  "charismaCheck"
              ],
              "baseValue": {
                  "calculation": "unmodifiedCharisma",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 6503339487711312,
                  "parseNode": {
                      "parseType": "symbol",
                      "name": "unmodifiedCharisma"
                  },
                  "parseError": null,
                  "errors": [
                      {
                          "type": "info",
                          "message": "unmodifiedCharisma not found, set to 0"
                      }
                  ],
                  "value": 0
              },
              "description": {
                  "text": "Charisma measures your ability to interact effectively with others. It includes such factors as confidence and eloquence, and it can represent a charming or commanding personality. A Charisma check might arise when you try to influence or entertain others, when you try to make an impression or tell a convincing lie, or when you are navigating a tricky social situation. The Deception, Intimidation, Performance, and Persuasion Skills reflect aptitude in certain kinds of Charisma Checks.\n\nThe GM might call for a Charisma check when you try to accomplish tasks like the following:\n- Find the best person to talk to for news, rumors, and gossip\n- Blend into a crowd to get the sense of key topics of conversation",
                  "hash": 2879343985870081,
                  "inlineCalculations": [],
                  "value": "Charisma measures your ability to interact effectively with others. It includes such factors as confidence and eloquence, and it can represent a charming or commanding personality. A Charisma check might arise when you try to influence or entertain others, when you try to make an impression or tell a convincing lie, or when you are navigating a tricky social situation. The Deception, Intimidation, Performance, and Persuasion Skills reflect aptitude in certain kinds of Charisma Checks.\n\nThe GM might call for a Charisma check when you try to accomplish tasks like the following:\n- Find the best person to talk to for news, rumors, and gossip\n- Blend into a crowd to get the sense of key topics of conversation"
              },
              "libraryTags": [
                  "abilityCheck"
              ],
              "fillSlots": true,
              "searchable": true,
              "reset": "longRest",
              "libraryNodeId": "GN62QGNXdB3fztcoq",
              "_id": "r7rwXhEPDKx7mjyKQ",
              "total": 0,
              "value": 0,
              "advantage": 0,
              "modifier": -5,
              "effects": [
                  {
                      "_id": "r7rwXhEPDKx7mjyKQ",
                      "name": "Charisma",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "8jsYT2dRWfLtXKH2d",
                      "name": "Max Charisma",
                      "operation": "max",
                      "amount": {
                          "value": 20
                      },
                      "type": "effect"
                  }
              ]
          },
          "charismaSave": {
              "skillType": "save",
              "type": "skill",
              "name": "Charisma Save",
              "variableName": "charismaSave",
              "ability": "charisma",
              "order": 131,
              "tags": [
                  "savingThrow"
              ],
              "description": {
                  "text": "Charisma measures your ability to interact effectively with others. It includes such factors as confidence and eloquence, and it can represent a charming or commanding personality.\n\n### Charisma Checks\nA Charisma check might arise when you try to influence or entertain others, when you try to make an impression or tell a convincing lie, or when you are navigating a tricky social situation. The Deception, Intimidation, Performance, and Persuasion skills reflect aptitude in certain kinds of Charisma checks.\n\n***Deception.*** Your Charisma (Deception) check determines whether you can convincingly hide the truth, either verbally or through your actions. This deception can encompass everything from misleading others through ambiguity to telling outright lies. Typical situations include trying to fast-talk a guard, con a merchant, earn money through gambling, pass yourself off in a disguise, dull someone's suspicions with false assurances, or maintain a straight face while telling a blatant lie.\n\n***Intimidation.*** When you attempt to influence someone through overt threats, hostile actions, and physical violence, the DM might ask you to make a Charisma (Intimidation) check. Examples include trying to pry information out of a prisoner, convincing street thugs to back down from a confrontation, or using the edge of a broken bottle to convince a sneering vizier to reconsider a decision.\n\n***Performance.*** Your Charisma (Performance) check determines how well you can delight an audience with music, dance, acting, storytelling, or some other form of entertainment.\n\n***Persuasion.*** When you attempt to influence someone or a group of people with tact, social graces, or good nature, the DM might ask you to make a Charisma (Persuasion) check. Typically, you use persuasion when acting in good faith, to foster friendships, make cordial requests, or exhibit proper etiquette. Examples of persuading others include convincing a chamberlain to let your party see the king, negotiating peace between warring tribes, or inspiring a crowd of townsfolk.\n\n***Other Charisma Checks.*** The DM might call for a Charisma check when you try to accomplish tasks like the following:\n\n- Find the best person to talk to for news, rumors, and gossip\n- Blend into a crowd to get the sense of key topics of conversation\n\n### Spellcasting Ability\nBards, paladins, sorcerers, and warlocks use Charisma as their spellcasting ability, which helps determine the saving throw DCs of spells they cast.",
                  "hash": 8208166129133497,
                  "inlineCalculations": [],
                  "value": "Charisma measures your ability to interact effectively with others. It includes such factors as confidence and eloquence, and it can represent a charming or commanding personality.\n\n### Charisma Checks\nA Charisma check might arise when you try to influence or entertain others, when you try to make an impression or tell a convincing lie, or when you are navigating a tricky social situation. The Deception, Intimidation, Performance, and Persuasion skills reflect aptitude in certain kinds of Charisma checks.\n\n***Deception.*** Your Charisma (Deception) check determines whether you can convincingly hide the truth, either verbally or through your actions. This deception can encompass everything from misleading others through ambiguity to telling outright lies. Typical situations include trying to fast-talk a guard, con a merchant, earn money through gambling, pass yourself off in a disguise, dull someone's suspicions with false assurances, or maintain a straight face while telling a blatant lie.\n\n***Intimidation.*** When you attempt to influence someone through overt threats, hostile actions, and physical violence, the DM might ask you to make a Charisma (Intimidation) check. Examples include trying to pry information out of a prisoner, convincing street thugs to back down from a confrontation, or using the edge of a broken bottle to convince a sneering vizier to reconsider a decision.\n\n***Performance.*** Your Charisma (Performance) check determines how well you can delight an audience with music, dance, acting, storytelling, or some other form of entertainment.\n\n***Persuasion.*** When you attempt to influence someone or a group of people with tact, social graces, or good nature, the DM might ask you to make a Charisma (Persuasion) check. Typically, you use persuasion when acting in good faith, to foster friendships, make cordial requests, or exhibit proper etiquette. Examples of persuading others include convincing a chamberlain to let your party see the king, negotiating peace between warring tribes, or inspiring a crowd of townsfolk.\n\n***Other Charisma Checks.*** The DM might call for a Charisma check when you try to accomplish tasks like the following:\n\n- Find the best person to talk to for news, rumors, and gossip\n- Blend into a crowd to get the sense of key topics of conversation\n\n### Spellcasting Ability\nBards, paladins, sorcerers, and warlocks use Charisma as their spellcasting ability, which helps determine the saving throw DCs of spells they cast."
              },
              "libraryTags": [
                  "savingThrow"
              ],
              "fillSlots": true,
              "searchable": false,
              "libraryNodeId": "pTSYTgMiqcrgHwkGC",
              "_id": "JLdf4GfpphazunEfi",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "constitution": {
              "name": "Constitution",
              "variableName": "constitution",
              "attributeType": "ability",
              "type": "attribute",
              "order": 124,
              "tags": [
                  "abilityCheck",
                  "constitutionCheck"
              ],
              "baseValue": {
                  "calculation": "unmodifiedConstitution",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 3650735091148614,
                  "parseNode": {
                      "parseType": "symbol",
                      "name": "unmodifiedConstitution"
                  },
                  "parseError": null,
                  "errors": [
                      {
                          "type": "info",
                          "message": "unmodifiedConstitution not found, set to 0"
                      }
                  ],
                  "value": 0
              },
              "description": {
                  "text": "Constitution measures health, stamina, and vital force.\n\nConstitution Checks are uncommon, and no Skills apply to Constitution Checks, because The Endurance this ability represents is largely passive rather than involving a specific effort on the part of a character or monster. A Constitution check can model your attempt to push beyond normal limits, however.\n\nThe GM might call for a Constitution check when you try to accomplish tasks like the following:\n- Hold your breath\n- March or labor for hours without rest\n- Go without sleep\n- Survive without food or water\n- Quaff an entire stein of ale in one go",
                  "hash": 2362479246246212,
                  "inlineCalculations": [],
                  "value": "Constitution measures health, stamina, and vital force.\n\nConstitution Checks are uncommon, and no Skills apply to Constitution Checks, because The Endurance this ability represents is largely passive rather than involving a specific effort on the part of a character or monster. A Constitution check can model your attempt to push beyond normal limits, however.\n\nThe GM might call for a Constitution check when you try to accomplish tasks like the following:\n- Hold your breath\n- March or labor for hours without rest\n- Go without sleep\n- Survive without food or water\n- Quaff an entire stein of ale in one go"
              },
              "libraryTags": [
                  "abilityCheck"
              ],
              "fillSlots": true,
              "searchable": true,
              "reset": "longRest",
              "libraryNodeId": "sYQLxShma2PRHjA5J",
              "_id": "vyo6F69fKbTW5uD2u",
              "total": 0,
              "value": 0,
              "advantage": 0,
              "modifier": -5,
              "effects": [
                  {
                      "_id": "vyo6F69fKbTW5uD2u",
                      "name": "Constitution",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "NBbWavwSRXKcAoEky",
                      "name": "Max Constitution",
                      "operation": "max",
                      "amount": {
                          "value": 20
                      },
                      "type": "effect"
                  }
              ]
          },
          "constitutionSave": {
              "skillType": "save",
              "type": "skill",
              "name": "Constitution Save",
              "variableName": "constitutionSave",
              "ability": "constitution",
              "order": 125,
              "tags": [
                  "savingThrow"
              ],
              "description": {
                  "text": "Constitution measures health, stamina, and vital force.\n\n### Constitution Checks\nConstitution checks are uncommon, and no skills apply to Constitution checks, because the endurance this ability represents is largely passive rather than involving a specific effort on the part of a character or monster.\n\nA Constitution check can model your attempt to push beyond normal limits, however.\n\nThe DM might call for a Constitution check when you try to accomplish tasks like the following:\n\n- Hold your breath\n- March or labor for hours without rest\n- Go without sleep\n- Survive without food or water\n- Quaff an entire stein of ale in one go\n\n### Hit Points\nYour Constitution modifier contributes to your hit points. Typically, you add your Constitution modifier to each Hit Die you roll for your hit points.\n\nIf your Constitution modifier changes, your hit point maximum changes as well, as though you had the new modifier from 1st level. For example, if you raise your Constitution score when you reach 4th level and your Constitution modifier increases from +1 to +2, you adjust your hit point maximum as though the modifier had always been +2. So you add 3 hit points for your first three levels, and then roll your hit points for 4th level using your new modifier. Or if you're 7th level and some effect lowers your Constitution score so as to reduce your Constitution modifier by 1, your hit point maximum is reduced by 7.",
                  "hash": 4713130219719661,
                  "inlineCalculations": [],
                  "value": "Constitution measures health, stamina, and vital force.\n\n### Constitution Checks\nConstitution checks are uncommon, and no skills apply to Constitution checks, because the endurance this ability represents is largely passive rather than involving a specific effort on the part of a character or monster.\n\nA Constitution check can model your attempt to push beyond normal limits, however.\n\nThe DM might call for a Constitution check when you try to accomplish tasks like the following:\n\n- Hold your breath\n- March or labor for hours without rest\n- Go without sleep\n- Survive without food or water\n- Quaff an entire stein of ale in one go\n\n### Hit Points\nYour Constitution modifier contributes to your hit points. Typically, you add your Constitution modifier to each Hit Die you roll for your hit points.\n\nIf your Constitution modifier changes, your hit point maximum changes as well, as though you had the new modifier from 1st level. For example, if you raise your Constitution score when you reach 4th level and your Constitution modifier increases from +1 to +2, you adjust your hit point maximum as though the modifier had always been +2. So you add 3 hit points for your first three levels, and then roll your hit points for 4th level using your new modifier. Or if you're 7th level and some effect lowers your Constitution score so as to reduce your Constitution modifier by 1, your hit point maximum is reduced by 7."
              },
              "libraryTags": [
                  "savingThrow"
              ],
              "fillSlots": true,
              "searchable": false,
              "libraryNodeId": "y5rYA7gL57jseJu5D",
              "_id": "fdgdsYt2T52isjkTE",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "creatureSize": {
              "name": "Creature Size",
              "variableName": "creatureSize",
              "attributeType": "utility",
              "type": "attribute",
              "order": 55,
              "tags": [],
              "baseValue": {
                  "calculation": "unmodifiedCreatureSize",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 8785878007179494,
                  "parseNode": {
                      "parseType": "symbol",
                      "name": "unmodifiedCreatureSize"
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "description": {
                  "text": "1 - Tiny\n2 - Small\n3 - Medium\n4 - Large\n5 - Huge\n6 - Gargantuan",
                  "hash": 5409603312154709,
                  "inlineCalculations": [],
                  "value": "1 - Tiny\n2 - Small\n3 - Medium\n4 - Large\n5 - Huge\n6 - Gargantuan"
              },
              "libraryTags": [],
              "libraryNodeId": "RcpWdCqiScjGfWJGE",
              "_id": "ukgDAp7Ee3yK58YKa",
              "total": 0,
              "value": 0,
              "effects": [
                  {
                      "_id": "ukgDAp7Ee3yK58YKa",
                      "name": "Creature Size",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  }
              ]
          },
          "creatureType": {
              "attributeType": "utility",
              "type": "attribute",
              "name": "Creature Type",
              "variableName": "creatureType",
              "baseValue": {
                  "calculation": "0",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 3136312542826423,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 0
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "description": {
                  "text": "0 - Humanoid\n1 - Abberation\n2 - Beast\n3 - Celestial\n4 - Contruct\n5 - Dragon\n6 - Elemental\n7 - Fey\n8 - Fiend\n9 - Giant\n10 - Monstrosity\n11 - Ooze\n12 - Plant\n13 - Undead",
                  "hash": 4414223459704374,
                  "inlineCalculations": [],
                  "value": "0 - Humanoid\n1 - Abberation\n2 - Beast\n3 - Celestial\n4 - Contruct\n5 - Dragon\n6 - Elemental\n7 - Fey\n8 - Fiend\n9 - Giant\n10 - Monstrosity\n11 - Ooze\n12 - Plant\n13 - Undead"
              },
              "order": 57,
              "tags": [],
              "libraryTags": [],
              "libraryNodeId": "EgPJ7rxC9a7f5MJT9",
              "_id": "BvZCpHLtxtoc6gqv5",
              "total": 0,
              "value": 0,
              "effects": [
                  {
                      "_id": "BvZCpHLtxtoc6gqv5",
                      "name": "Creature Type",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  }
              ]
          },
          "crossbowExpertTaken": {},
          "darkvisionRange": {},
          "dawnItem": {},
          "dawnTrigger": {},
          "deathSave": {
              "skillType": "save",
              "type": "skill",
              "name": "Death Save",
              "variableName": "deathSave",
              "order": 76,
              "tags": [
                  "savingThrow",
                  "deathSave"
              ],
              "libraryTags": [
                  "savingThrow",
                  "deathSave"
              ],
              "fillSlots": true,
              "searchable": false,
              "libraryNodeId": "yaqtESnTvtt8PZYdS",
              "_id": "LtXX9o8t2aSxGTSbs",
              "proficiency": 0,
              "abilityMod": 0,
              "value": 0
          },
          "deathSaveFails": {
              "attributeType": "spellSlot",
              "type": "attribute",
              "name": "Failed Saves",
              "variableName": "deathSaveFails",
              "order": 78,
              "tags": [],
              "libraryTags": [],
              "baseValue": {
                  "calculation": "3",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 1318417319946211,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 3
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 3
              },
              "damage": 3,
              "libraryNodeId": "LnPhMrDWzGTiwsZEa",
              "_id": "oQYRnLGnToueB5yNd",
              "total": 3,
              "value": 0,
              "effects": [
                  {
                      "_id": "oQYRnLGnToueB5yNd",
                      "name": "Failed Saves",
                      "operation": "base",
                      "amount": {
                          "value": 3
                      },
                      "type": "attribute"
                  }
              ]
          },
          "deathSaveSuccesses": {
              "attributeType": "spellSlot",
              "type": "attribute",
              "name": "Succeeded Saves",
              "variableName": "deathSaveSuccesses",
              "order": 77,
              "tags": [],
              "libraryTags": [],
              "baseValue": {
                  "calculation": "3",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 1318417319946211,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 3
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 3
              },
              "damage": 3,
              "libraryNodeId": "PmgtGoxrswh8kqDD2",
              "_id": "SHcWP34q26iXvPZAs",
              "total": 3,
              "value": 0,
              "effects": [
                  {
                      "_id": "SHcWP34q26iXvPZAs",
                      "name": "Succeeded Saves",
                      "operation": "base",
                      "amount": {
                          "value": 3
                      },
                      "type": "attribute"
                  }
              ]
          },
          "deception": {
              "skillType": "skill",
              "type": "skill",
              "name": "Deception",
              "variableName": "deception",
              "ability": "charisma",
              "order": 99,
              "tags": [
                  "abilityCheck",
                  "charismaCheck"
              ],
              "description": {
                  "text": "Your Charisma (Deception) check determines whether you can convincingly hide the truth, either verbally or through your actions. This deception can encompass everything from misleading others through ambiguity to telling outright lies. Typical situations include trying to fast-talk a guard, con a merchant, earn money through gambling, pass yourself off in a disguise, dull someone's suspicions with false assurances, or maintain a straight face while telling a blatant lie.",
                  "hash": 8489047783102080,
                  "inlineCalculations": [],
                  "value": "Your Charisma (Deception) check determines whether you can convincingly hide the truth, either verbally or through your actions. This deception can encompass everything from misleading others through ambiguity to telling outright lies. Typical situations include trying to fast-talk a guard, con a merchant, earn money through gambling, pass yourself off in a disguise, dull someone's suspicions with false assurances, or maintain a straight face while telling a blatant lie."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "iLkxhZtoABCcJ5wKC",
              "_id": "yi5XqrKhde9h4m5nF",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "dexterity": {
              "name": "Dexterity",
              "variableName": "dexterity",
              "attributeType": "ability",
              "type": "attribute",
              "order": 122,
              "tags": [
                  "abilityCheck",
                  "dexterityCheck"
              ],
              "baseValue": {
                  "calculation": "unmodifiedDexterity",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 5378078943829974,
                  "parseNode": {
                      "parseType": "symbol",
                      "name": "unmodifiedDexterity"
                  },
                  "parseError": null,
                  "errors": [
                      {
                          "type": "info",
                          "message": "unmodifiedDexterity not found, set to 0"
                      }
                  ],
                  "value": 0
              },
              "description": {
                  "text": "Dexterity measures agility, reflexes, and balance.\n\nA Dexterity check can model any attempt to move nimbly, quickly, or quietly, or to keep from Falling on tricky footing. The Acrobatics, Sleight of Hand, and Stealth Skills reflect aptitude in certain kinds of Dexterity Checks. \n\nThe GM might call for a Dexterity check when you try to accomplish tasks like the following:\n- Control a heavily laden cart on a steep descent\n- Steer a chariot around a tight turn\n- Pick a lock\n- Disable a trap\n- Securely tie up a prisoner\n- Wriggle free of bonds\n- Play a stringed Instrument\n- Craft a small or detailed object",
                  "hash": 6539753287428290,
                  "inlineCalculations": [],
                  "value": "Dexterity measures agility, reflexes, and balance.\n\nA Dexterity check can model any attempt to move nimbly, quickly, or quietly, or to keep from Falling on tricky footing. The Acrobatics, Sleight of Hand, and Stealth Skills reflect aptitude in certain kinds of Dexterity Checks. \n\nThe GM might call for a Dexterity check when you try to accomplish tasks like the following:\n- Control a heavily laden cart on a steep descent\n- Steer a chariot around a tight turn\n- Pick a lock\n- Disable a trap\n- Securely tie up a prisoner\n- Wriggle free of bonds\n- Play a stringed Instrument\n- Craft a small or detailed object"
              },
              "libraryTags": [
                  "abilityCheck"
              ],
              "fillSlots": true,
              "searchable": true,
              "reset": "longRest",
              "libraryNodeId": "7MywmBLTvgPnsyS5P",
              "_id": "aDTewoAYXYJDKhTxb",
              "total": 0,
              "value": 0,
              "advantage": 0,
              "modifier": -5,
              "effects": [
                  {
                      "_id": "aDTewoAYXYJDKhTxb",
                      "name": "Dexterity",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "ZX4FocoCgrvq5hpWo",
                      "name": "Max Dexterity",
                      "operation": "max",
                      "amount": {
                          "value": 20
                      },
                      "type": "effect"
                  }
              ]
          },
          "dexteritySave": {
              "skillType": "save",
              "type": "skill",
              "name": "Dexterity Save",
              "variableName": "dexteritySave",
              "ability": "dexterity",
              "order": 123,
              "tags": [
                  "savingThrow"
              ],
              "description": {
                  "text": "Dexterity measures agility, reflexes, and balance.\n\n### Dexterity Checks\nA Dexterity check can model any attempt to move nimbly, quickly, or quietly, or to keep from falling on tricky footing. The Acrobatics, Sleight of Hand, and Stealth skills reflect aptitude in certain kinds of Dexterity checks.\n\n***Acrobatics.*** Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The DM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips.\n***Sleight of Hand.*** Whenever you attempt an act of legerdemain or manual trickery, such as planting something on someone else or concealing an object on your person, make a Dexterity (Sleight of Hand) check. The DM might also call for a Dexterity (Sleight of Hand) check to determine whether you can lift a coin purse off another person or slip something out of another person's pocket.\n***Stealth.*** Make a Dexterity (Stealth) check when you attempt to conceal yourself from enemies, slink past guards, slip away without being noticed, or sneak up on someone without being seen or heard.\n\n***Other Dexterity Checks.*** The DM might call for a Dexterity check when you try to accomplish tasks like the following:\n\n- Control a heavily laden cart on a steep descent\n- Steer a chariot around a tight turn\n- Pick a lock\n- Disable a trap\n- Securely tie up a prisoner\n- Wriggle free of bonds\n- Play a stringed instrument\n- Craft a small or detailed object\n\n### Attack Rolls and Damage\nYou add your Dexterity modifier to your attack roll and your damage roll when attacking with a ranged weapon, such as a sling or a longbow. You can also add your Dexterity modifier to your attack roll and your damage roll when attacking with a melee weapon that has the finesse property, such as a dagger or a rapier.\n\n### Armor Class\nDepending on the armor you wear, you might add some or all of your Dexterity modifier to your Armor Class, as described in chapter 5.\n\n### Initiative\nAt the beginning of every combat, you roll initiative by making a Dexterity check. Initiative determines the order of creatures' turns in combat, as described in chapter 9.",
                  "hash": 350657113461298,
                  "inlineCalculations": [],
                  "value": "Dexterity measures agility, reflexes, and balance.\n\n### Dexterity Checks\nA Dexterity check can model any attempt to move nimbly, quickly, or quietly, or to keep from falling on tricky footing. The Acrobatics, Sleight of Hand, and Stealth skills reflect aptitude in certain kinds of Dexterity checks.\n\n***Acrobatics.*** Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The DM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips.\n***Sleight of Hand.*** Whenever you attempt an act of legerdemain or manual trickery, such as planting something on someone else or concealing an object on your person, make a Dexterity (Sleight of Hand) check. The DM might also call for a Dexterity (Sleight of Hand) check to determine whether you can lift a coin purse off another person or slip something out of another person's pocket.\n***Stealth.*** Make a Dexterity (Stealth) check when you attempt to conceal yourself from enemies, slink past guards, slip away without being noticed, or sneak up on someone without being seen or heard.\n\n***Other Dexterity Checks.*** The DM might call for a Dexterity check when you try to accomplish tasks like the following:\n\n- Control a heavily laden cart on a steep descent\n- Steer a chariot around a tight turn\n- Pick a lock\n- Disable a trap\n- Securely tie up a prisoner\n- Wriggle free of bonds\n- Play a stringed instrument\n- Craft a small or detailed object\n\n### Attack Rolls and Damage\nYou add your Dexterity modifier to your attack roll and your damage roll when attacking with a ranged weapon, such as a sling or a longbow. You can also add your Dexterity modifier to your attack roll and your damage roll when attacking with a melee weapon that has the finesse property, such as a dagger or a rapier.\n\n### Armor Class\nDepending on the armor you wear, you might add some or all of your Dexterity modifier to your Armor Class, as described in chapter 5.\n\n### Initiative\nAt the beginning of every combat, you roll initiative by making a Dexterity check. Initiative determines the order of creatures' turns in combat, as described in chapter 9."
              },
              "libraryTags": [
                  "savingThrow"
              ],
              "fillSlots": true,
              "searchable": false,
              "libraryNodeId": "TPGWkMXXfxudHe3b8",
              "_id": "v6jNFcMpvWmTc2rAN",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "dualWielderFeat": {},
          "duskItem": {},
          "duskTrigger": {},
          "flySpeed": {
              "value": 0,
              "advantage": 0,
              "conditionalBenefits": [],
              "rollBonus": [],
              "fail": 0,
              "rollBonuses": []
          },
          "highJumpDistance": {
              "name": "High Jump Distance",
              "variableName": "highJumpDistance",
              "attributeType": "utility",
              "type": "attribute",
              "order": 118,
              "tags": [],
              "baseValue": {
                  "calculation": "max(3 + strength.modifier,0)",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 1029843560798829,
                  "parseNode": {
                      "parseType": "call",
                      "functionName": "max",
                      "args": [
                          {
                              "parseType": "operator",
                              "left": {
                                  "parseType": "constant",
                                  "valueType": "number",
                                  "value": 3
                              },
                              "right": {
                                  "parseType": "accessor",
                                  "path": [
                                      "modifier"
                                  ],
                                  "name": "strength"
                              },
                              "operator": "+",
                              "fn": "add"
                          },
                          {
                              "parseType": "constant",
                              "valueType": "number",
                              "value": 0
                          }
                      ]
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "libraryTags": [],
              "libraryNodeId": "GkewkjfiAFGRBnquj",
              "_id": "TH77JQjP4WPJYg5mT",
              "total": 0,
              "value": 0,
              "effects": [
                  {
                      "_id": "TH77JQjP4WPJYg5mT",
                      "name": "High Jump Distance",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  }
              ]
          },
          "highestSpellcastingMod": {
              "attributeType": "utility",
              "type": "attribute",
              "name": "Highest Spellcasting Mod",
              "variableName": "highestSpellcastingMod",
              "baseValue": {
                  "calculation": "0",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 3136312542826423,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 0
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "order": 181,
              "tags": [],
              "libraryNodeId": "AdrMWRzvobbW2NYAb",
              "_id": "ZAhqeJBQqqhkkpgpG",
              "total": 0,
              "value": 0,
              "effects": [
                  {
                      "_id": "ZAhqeJBQqqhkkpgpG",
                      "name": "Highest Spellcasting Mod",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  }
              ]
          },
          "history": {
              "skillType": "skill",
              "type": "skill",
              "name": "History",
              "variableName": "history",
              "ability": "intelligence",
              "order": 100,
              "tags": [
                  "abilityCheck",
                  "intelligenceCheck"
              ],
              "description": {
                  "text": "Your Intelligence (History) check measures your ability to recall lore about historical events, legendary people, ancient kingdoms, past disputes, recent wars, and lost civilizations.",
                  "hash": 467375199849152,
                  "inlineCalculations": [],
                  "value": "Your Intelligence (History) check measures your ability to recall lore about historical events, legendary people, ancient kingdoms, past disputes, recent wars, and lost civilizations."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "MmJ2fWGocxBrugW8p",
              "_id": "QBy5Whjkw88eeojnW",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "hitPoints": {
              "attributeType": "healthBar",
              "type": "attribute",
              "name": "Hit Points",
              "variableName": "hitPoints",
              "baseValue": {
                  "calculation": "0",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 3136312542826423,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 0
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "order": 53,
              "tags": [
                  "hitPoints"
              ],
              "libraryTags": [
                  "hitPoints"
              ],
              "color": "#4caf50",
              "healthBarDamageOrder": 1,
              "healthBarHealingOrder": 0,
              "reset": "longRest",
              "healthBarColorLow": "#212121",
              "healthBarColorMid": "#f44336",
              "fillSlots": true,
              "searchable": true,
              "libraryNodeId": "dBjb9TLKFqezbLhSz",
              "_id": "KmSJkLLQXv8ubDRM9",
              "total": 0,
              "value": 0,
              "advantage": 0,
              "effects": [
                  {
                      "_id": "KmSJkLLQXv8ubDRM9",
                      "name": "Hit Points",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "FYytXv8D2gRjxY4YP",
                      "name": "Minimum",
                      "operation": "min",
                      "amount": {
                          "value": 0
                      },
                      "type": "effect"
                  }
              ]
          },
          "incapacitated": {
              "variableName": "incapacitated",
              "errors": [],
              "type": "constant",
              "name": "Incapacitated",
              "calculation": "true",
              "order": 84,
              "tags": [],
              "libraryTags": [],
              "libraryNodeId": "y9KSejfStmkqnA9Ph",
              "_id": "vSp9ztAACokKivgcb",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "initiative": {
              "skillType": "check",
              "type": "skill",
              "name": "Initiative",
              "variableName": "initiative",
              "ability": "dexterity",
              "order": 92,
              "tags": [
                  "initiativeRoll"
              ],
              "description": {
                  "text": "Initiative determines the order of turns during combat. When combat starts, every participant makes a Dexterity check to determine their place in the initiative order. The DM makes one roll for an entire group of identical creatures, so each member of the group acts at the same time.\n\nThe DM ranks the combatants in order from the one with the highest Dexterity check total to the one with the lowest. This is the order (called the initiative order) in which they act during each round. The initiative order remains the same from round to round.\n\nIf a tie occurs, the DM decides the order among tied DM-controlled creatures, and the players decide the order among their tied characters. The DM can decide the order if the tie is between a monster and a player character. Optionally, the DM can have the tied characters and monsters each roll a d20 to determine the order, highest roll going first.",
                  "hash": 5765655148636001,
                  "inlineCalculations": [],
                  "value": "Initiative determines the order of turns during combat. When combat starts, every participant makes a Dexterity check to determine their place in the initiative order. The DM makes one roll for an entire group of identical creatures, so each member of the group acts at the same time.\n\nThe DM ranks the combatants in order from the one with the highest Dexterity check total to the one with the lowest. This is the order (called the initiative order) in which they act during each round. The initiative order remains the same from round to round.\n\nIf a tie occurs, the DM decides the order among tied DM-controlled creatures, and the players decide the order among their tied characters. The DM can decide the order if the tie is between a monster and a player character. Optionally, the DM can have the tied characters and monsters each roll a d20 to determine the order, highest roll going first."
              },
              "libraryTags": [
                  "initiativeRoll"
              ],
              "fillSlots": true,
              "searchable": false,
              "libraryNodeId": "HHgAHuzDSGjqXxB4N",
              "_id": "xXYFTLauq8WekikwX",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "insight": {
              "skillType": "skill",
              "type": "skill",
              "name": "Insight",
              "variableName": "insight",
              "ability": "wisdom",
              "order": 101,
              "tags": [
                  "abilityCheck",
                  "wisdomCheck"
              ],
              "description": {
                  "text": "Your Wisdom (Insight) check decides whether you can determine the true intentions of a creature, such as when searching out a lie or predicting someone's next move. Doing so involves gleaning clues from body language, speech habits, and changes in mannerisms.",
                  "hash": 1883053379107350,
                  "inlineCalculations": [],
                  "value": "Your Wisdom (Insight) check decides whether you can determine the true intentions of a creature, such as when searching out a lie or predicting someone's next move. Doing so involves gleaning clues from body language, speech habits, and changes in mannerisms."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "PrGYeo8cT8iKLYzsq",
              "_id": "zKotKxG6ZZx6jQp5h",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "intelligence": {
              "name": "Intelligence",
              "variableName": "intelligence",
              "attributeType": "ability",
              "type": "attribute",
              "order": 126,
              "tags": [
                  "abilityCheck",
                  "intelligenceCheck"
              ],
              "baseValue": {
                  "calculation": "unmodifiedIntelligence",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 7245189004734411,
                  "parseNode": {
                      "parseType": "symbol",
                      "name": "unmodifiedIntelligence"
                  },
                  "parseError": null,
                  "errors": [
                      {
                          "type": "info",
                          "message": "unmodifiedIntelligence not found, set to 0"
                      }
                  ],
                  "value": 0
              },
              "description": {
                  "text": "Intelligence measures mental acuity, accuracy of recall, and the ability to reason.\n\nAn Intelligence check comes into play when you need to draw on logic, education, memory, or deductive reasoning. The Arcana, History, Investigation, Nature, and Religion Skills reflect aptitude in certain kinds of Intelligence Checks.\n\nThe GM might call for an Intelligence check when you try to accomplish tasks like the following:\n- Communicate with a creature without using words\n- Estimate the value of a precious item\n- Pull together a disguise to pass as a city guard\n- Forge a document\n- Recall lore about a craft or trade\n- Win a game of skill",
                  "hash": 3464417848840727,
                  "inlineCalculations": [],
                  "value": "Intelligence measures mental acuity, accuracy of recall, and the ability to reason.\n\nAn Intelligence check comes into play when you need to draw on logic, education, memory, or deductive reasoning. The Arcana, History, Investigation, Nature, and Religion Skills reflect aptitude in certain kinds of Intelligence Checks.\n\nThe GM might call for an Intelligence check when you try to accomplish tasks like the following:\n- Communicate with a creature without using words\n- Estimate the value of a precious item\n- Pull together a disguise to pass as a city guard\n- Forge a document\n- Recall lore about a craft or trade\n- Win a game of skill"
              },
              "libraryTags": [
                  "abilityCheck"
              ],
              "fillSlots": true,
              "searchable": true,
              "reset": "longRest",
              "libraryNodeId": "GmKTrQExiZoLK7wFE",
              "_id": "5hyW93yiinJkPGecs",
              "total": 0,
              "value": 0,
              "advantage": 0,
              "modifier": -5,
              "effects": [
                  {
                      "_id": "5hyW93yiinJkPGecs",
                      "name": "Intelligence",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "xr93hyGxpXo9yf7cy",
                      "name": "Max Intelligence",
                      "operation": "max",
                      "amount": {
                          "value": 20
                      },
                      "type": "effect"
                  }
              ]
          },
          "intelligenceSave": {
              "skillType": "save",
              "type": "skill",
              "name": "Intelligence Save",
              "variableName": "intelligenceSave",
              "ability": "intelligence",
              "order": 127,
              "tags": [
                  "savingThrow"
              ],
              "description": {
                  "text": "Intelligence measures mental acuity, accuracy of recall, and the ability to reason.\n\n### Intelligence Checks\nAn Intelligence check comes into play when you need to draw on logic, education, memory, or deductive reasoning. The Arcana, History, Investigation, Nature, and Religion skills reflect aptitude in certain kinds of Intelligence checks.\n\n***Arcana.*** Your Intelligence (Arcana) check measures your ability to recall lore about spells, magic items, eldritch symbols, magical traditions, the planes of existence, and the inhabitants of those planes.\n***History.*** Your Intelligence (History) check measures your ability to recall lore about historical events, legendary people, ancient kingdoms, past disputes, recent wars, and lost civilizations.\n***Investigation.*** When you look around for clues and make deductions based on those clues, you make an Intelligence (Investigation) check. You might deduce the location of a hidden object, discern from the appearance of a wound what kind of weapon dealt it, or determine the weakest point in a tunnel that could cause it to collapse. Poring through ancient scrolls in search of a hidden fragment of knowledge might also call for an Intelligence (Investigation) check.\n***Nature.*** Your Intelligence (Nature) check measures your ability to recall lore about terrain, plants and animals, the weather, and natural cycles.\n***Religion.*** Your Intelligence (Religion) check measures your ability to recall lore about deities, rites and prayers, religious hierarchies, holy symbols, and the practices of secret cults.\n\n***Other Intelligence Checks.*** The DM might call for an Intelligence check when you try to accomplish tasks like the following:\n\n- Communicate with a creature without using words\n- Estimate the value of a precious item\n- Pull together a disguise to pass as a city guard\n- Forge a document\n- Recall lore about a craft or trade\n- Win a game of skill\n\n### Spellcasting Ability\nWizards use Intelligence as their spellcasting ability, which helps determine the saving throw DCs of spells they cast.",
                  "hash": 3118855513388764,
                  "inlineCalculations": [],
                  "value": "Intelligence measures mental acuity, accuracy of recall, and the ability to reason.\n\n### Intelligence Checks\nAn Intelligence check comes into play when you need to draw on logic, education, memory, or deductive reasoning. The Arcana, History, Investigation, Nature, and Religion skills reflect aptitude in certain kinds of Intelligence checks.\n\n***Arcana.*** Your Intelligence (Arcana) check measures your ability to recall lore about spells, magic items, eldritch symbols, magical traditions, the planes of existence, and the inhabitants of those planes.\n***History.*** Your Intelligence (History) check measures your ability to recall lore about historical events, legendary people, ancient kingdoms, past disputes, recent wars, and lost civilizations.\n***Investigation.*** When you look around for clues and make deductions based on those clues, you make an Intelligence (Investigation) check. You might deduce the location of a hidden object, discern from the appearance of a wound what kind of weapon dealt it, or determine the weakest point in a tunnel that could cause it to collapse. Poring through ancient scrolls in search of a hidden fragment of knowledge might also call for an Intelligence (Investigation) check.\n***Nature.*** Your Intelligence (Nature) check measures your ability to recall lore about terrain, plants and animals, the weather, and natural cycles.\n***Religion.*** Your Intelligence (Religion) check measures your ability to recall lore about deities, rites and prayers, religious hierarchies, holy symbols, and the practices of secret cults.\n\n***Other Intelligence Checks.*** The DM might call for an Intelligence check when you try to accomplish tasks like the following:\n\n- Communicate with a creature without using words\n- Estimate the value of a precious item\n- Pull together a disguise to pass as a city guard\n- Forge a document\n- Recall lore about a craft or trade\n- Win a game of skill\n\n### Spellcasting Ability\nWizards use Intelligence as their spellcasting ability, which helps determine the saving throw DCs of spells they cast."
              },
              "libraryTags": [
                  "savingThrow"
              ],
              "fillSlots": true,
              "searchable": false,
              "libraryNodeId": "AoDcJ2txdCEcj2HKM",
              "_id": "NGX4nAJrvTAfAgnYg",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "intimidation": {
              "skillType": "skill",
              "type": "skill",
              "name": "Intimidation",
              "variableName": "intimidation",
              "ability": "charisma",
              "order": 102,
              "tags": [
                  "abilityCheck",
                  "charismaCheck"
              ],
              "description": {
                  "text": "When you attempt to influence someone through overt threats, hostile actions, and physical violence, the DM might ask you to make a Charisma (Intimidation) check. Examples include trying to pry information out of a prisoner, convincing street thugs to back down from a confrontation, or using the edge of a broken bottle to convince a sneering vizier to reconsider a decision.",
                  "hash": 7202510279012271,
                  "inlineCalculations": [],
                  "value": "When you attempt to influence someone through overt threats, hostile actions, and physical violence, the DM might ask you to make a Charisma (Intimidation) check. Examples include trying to pry information out of a prisoner, convincing street thugs to back down from a confrontation, or using the edge of a broken bottle to convince a sneering vizier to reconsider a decision."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "g5J384bPBRtZ9Qz9Z",
              "_id": "PFthNHuTxYrNMY956",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "investigation": {
              "skillType": "skill",
              "type": "skill",
              "name": "Investigation",
              "variableName": "investigation",
              "ability": "intelligence",
              "order": 103,
              "tags": [
                  "abilityCheck",
                  "intelligenceCheck"
              ],
              "description": {
                  "text": "When you look around for clues and make deductions based on those clues, you make an Intelligence (Investigation) check. You might deduce the location of a hidden object, discern from the appearance of a wound what kind of weapon dealt it, or determine the weakest point in a tunnel that could cause it to collapse. Poring through ancient scrolls in search of a hidden fragment of knowledge might also call for an Intelligence (Investigation) check.",
                  "hash": 8018941725920433,
                  "inlineCalculations": [],
                  "value": "When you look around for clues and make deductions based on those clues, you make an Intelligence (Investigation) check. You might deduce the location of a hidden object, discern from the appearance of a wound what kind of weapon dealt it, or determine the weakest point in a tunnel that could cause it to collapse. Poring through ancient scrolls in search of a hidden fragment of knowledge might also call for an Intelligence (Investigation) check."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "scffAw4XWj6ncZQir",
              "_id": "j3Gr7fqqqMYF6navb",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "jonStatus": {
              "attributeType": "utility",
              "type": "attribute",
              "baseValue": {
                  "calculation": "4",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 8553285446493293,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 4
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 4
              },
              "name": "jonStatus",
              "variableName": "jonStatus",
              "damage": 0,
              "order": 5,
              "tags": [],
              "libraryTags": [],
              "libraryNodeId": "vRaNCpjJowEPsEesL",
              "_id": "MDFxywvbjJnjXSfyP",
              "total": 4,
              "value": 4,
              "effects": [
                  {
                      "_id": "MDFxywvbjJnjXSfyP",
                      "name": "jonStatus",
                      "operation": "base",
                      "amount": {
                          "value": 4
                      },
                      "type": "attribute"
                  }
              ]
          },
          "level": {},
          "longJumpDistance": {
              "name": "Long Jump Distance",
              "variableName": "longJumpDistance",
              "attributeType": "utility",
              "type": "attribute",
              "order": 116,
              "tags": [],
              "baseValue": {
                  "calculation": "strength",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 5770508834547116,
                  "parseNode": {
                      "parseType": "symbol",
                      "name": "strength"
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "libraryTags": [],
              "libraryNodeId": "H5LWTpSR8XfcesQ7N",
              "_id": "dKpfbjniudhCdcGBK",
              "total": 0,
              "value": 0,
              "effects": [
                  {
                      "_id": "dKpfbjniudhCdcGBK",
                      "name": "Long Jump Distance",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  }
              ]
          },
          "martialMeleeWeapon": {},
          "martialRangedWeapon": {},
          "maxCharismaScore": {
              "name": "maxCharismaScore",
              "variableName": "maxCharismaScore",
              "attributeType": "utility",
              "type": "attribute",
              "order": 144,
              "tags": [],
              "baseValue": {
                  "calculation": "20",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 5429744425536711,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 20
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 20
              },
              "libraryTags": [],
              "libraryNodeId": "qQq6PoeiWG5dCxxES",
              "_id": "BmS88tM4W7i7cszce",
              "total": 20,
              "value": 20,
              "advantage": 0,
              "effects": [
                  {
                      "_id": "BmS88tM4W7i7cszce",
                      "name": "maxCharismaScore",
                      "operation": "base",
                      "amount": {
                          "value": 20
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "jkPF7WnSepfggNWLN",
                      "name": "True Stat Cap",
                      "operation": "max",
                      "amount": {
                          "value": 30
                      },
                      "type": "effect"
                  }
              ]
          },
          "maxConstitutionScore": {
              "name": "maxConstitutionScore",
              "variableName": "maxConstitutionScore",
              "attributeType": "utility",
              "type": "attribute",
              "order": 138,
              "tags": [],
              "baseValue": {
                  "calculation": "20",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 5429744425536711,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 20
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 20
              },
              "libraryTags": [],
              "libraryNodeId": "zz6GHZGiQhFTkoThZ",
              "_id": "MWKidsNZw4f7ePrbM",
              "total": 20,
              "value": 20,
              "advantage": 0,
              "effects": [
                  {
                      "_id": "MWKidsNZw4f7ePrbM",
                      "name": "maxConstitutionScore",
                      "operation": "base",
                      "amount": {
                          "value": 20
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "jkPF7WnSepfggNWLN",
                      "name": "True Stat Cap",
                      "operation": "max",
                      "amount": {
                          "value": 30
                      },
                      "type": "effect"
                  }
              ]
          },
          "maxDexterityScore": {
              "name": "maxDexterityScore",
              "variableName": "maxDexterityScore",
              "attributeType": "utility",
              "type": "attribute",
              "order": 136,
              "tags": [],
              "baseValue": {
                  "calculation": "20",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 5429744425536711,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 20
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 20
              },
              "libraryTags": [],
              "libraryNodeId": "nZuXsWLjcuwWp7GCE",
              "_id": "N6C5CQL83fa3azTq6",
              "total": 20,
              "value": 20,
              "advantage": 0,
              "effects": [
                  {
                      "_id": "N6C5CQL83fa3azTq6",
                      "name": "maxDexterityScore",
                      "operation": "base",
                      "amount": {
                          "value": 20
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "jkPF7WnSepfggNWLN",
                      "name": "True Stat Cap",
                      "operation": "max",
                      "amount": {
                          "value": 30
                      },
                      "type": "effect"
                  }
              ]
          },
          "maxIntelligenceScore": {
              "name": "maxIntelligenceScore",
              "variableName": "maxIntelligenceScore",
              "attributeType": "utility",
              "type": "attribute",
              "order": 140,
              "tags": [],
              "baseValue": {
                  "calculation": "20",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 5429744425536711,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 20
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 20
              },
              "libraryTags": [],
              "libraryNodeId": "ANQTHTvKcKK7dJpKx",
              "_id": "M2H7HCd3ja37dsRe6",
              "total": 20,
              "value": 20,
              "advantage": 0,
              "effects": [
                  {
                      "_id": "M2H7HCd3ja37dsRe6",
                      "name": "maxIntelligenceScore",
                      "operation": "base",
                      "amount": {
                          "value": 20
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "jkPF7WnSepfggNWLN",
                      "name": "True Stat Cap",
                      "operation": "max",
                      "amount": {
                          "value": 30
                      },
                      "type": "effect"
                  }
              ]
          },
          "maxStrengthScore": {
              "name": "maxStrengthScore",
              "variableName": "maxStrengthScore",
              "attributeType": "utility",
              "type": "attribute",
              "order": 134,
              "tags": [],
              "baseValue": {
                  "calculation": "20",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 5429744425536711,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 20
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 20
              },
              "libraryTags": [],
              "libraryNodeId": "ejL7rRa5Moxe8uqEK",
              "_id": "sNFdGiS8ufG9uSrgh",
              "total": 20,
              "value": 20,
              "advantage": 0,
              "effects": [
                  {
                      "_id": "sNFdGiS8ufG9uSrgh",
                      "name": "maxStrengthScore",
                      "operation": "base",
                      "amount": {
                          "value": 20
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "jkPF7WnSepfggNWLN",
                      "name": "True Stat Cap",
                      "operation": "max",
                      "amount": {
                          "value": 30
                      },
                      "type": "effect"
                  }
              ]
          },
          "maxWisdomScore": {
              "name": "maxWisdomScore",
              "variableName": "maxWisdomScore",
              "attributeType": "utility",
              "type": "attribute",
              "order": 142,
              "tags": [],
              "baseValue": {
                  "calculation": "20",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 5429744425536711,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 20
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 20
              },
              "libraryTags": [],
              "libraryNodeId": "ueiuhZk8YgaK5H7Dj",
              "_id": "djNNtY2XS4rnCfHfv",
              "total": 20,
              "value": 20,
              "advantage": 0,
              "effects": [
                  {
                      "_id": "djNNtY2XS4rnCfHfv",
                      "name": "maxWisdomScore",
                      "operation": "base",
                      "amount": {
                          "value": 20
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "jkPF7WnSepfggNWLN",
                      "name": "True Stat Cap",
                      "operation": "max",
                      "amount": {
                          "value": 30
                      },
                      "type": "effect"
                  }
              ]
          },
          "medicine": {
              "skillType": "skill",
              "type": "skill",
              "name": "Medicine",
              "variableName": "medicine",
              "ability": "wisdom",
              "order": 104,
              "tags": [
                  "abilityCheck",
                  "wisdomCheck"
              ],
              "description": {
                  "text": "A Wisdom (Medicine) check lets you try to stabilize a dying companion or diagnose an illness.",
                  "hash": 7128212748165576,
                  "inlineCalculations": [],
                  "value": "A Wisdom (Medicine) check lets you try to stabilize a dying companion or diagnose an illness."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "j7TwLterg6G6mxq9p",
              "_id": "qxK48L5gajKcwBSd6",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "midnightItem": {},
          "midnightTrigger": {},
          "milestoneLevels": {
              "value": 1
          },
          "nature": {
              "skillType": "skill",
              "type": "skill",
              "name": "Nature",
              "variableName": "nature",
              "ability": "intelligence",
              "order": 105,
              "tags": [
                  "abilityCheck",
                  "intelligenceCheck"
              ],
              "description": {
                  "text": "Your Intelligence (Nature) check measures your ability to recall lore about terrain, plants and animals, the weather, and natural cycles.",
                  "hash": 170317924877070,
                  "inlineCalculations": [],
                  "value": "Your Intelligence (Nature) check measures your ability to recall lore about terrain, plants and animals, the weather, and natural cycles."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "oFPmstpNe25FegyMg",
              "_id": "GtZLDzpitBrgarqgt",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "perception": {
              "skillType": "skill",
              "type": "skill",
              "name": "Perception",
              "variableName": "perception",
              "ability": "wisdom",
              "order": 106,
              "tags": [
                  "abilityCheck",
                  "wisdomCheck"
              ],
              "description": {
                  "text": "Your Wisdom (Perception) check lets you spot, hear, or otherwise detect the presence of something. It measures your general awareness of your surroundings and the keenness of your senses. For example, you might try to hear a conversation through a closed door, eavesdrop under an open window, or hear monsters moving stealthily in the forest. Or you might try to spot things that are obscured or easy to miss, whether they are orcs lying in ambush on a road, thugs hiding in the shadows of an alley, or candlelight under a closed secret door.",
                  "hash": 6782537919260759,
                  "inlineCalculations": [],
                  "value": "Your Wisdom (Perception) check lets you spot, hear, or otherwise detect the presence of something. It measures your general awareness of your surroundings and the keenness of your senses. For example, you might try to hear a conversation through a closed door, eavesdrop under an open window, or hear monsters moving stealthily in the forest. Or you might try to spot things that are obscured or easy to miss, whether they are orcs lying in ambush on a road, thugs hiding in the shadows of an alley, or candlelight under a closed secret door."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "8QEhpZcrsjLqh8uAQ",
              "_id": "EfMkYNab2x7D2Fjyg",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5,
              "effects": [
                  {
                      "_id": "XLPStyLtMgS7Y8euD",
                      "name": "Show Passive",
                      "operation": "passiveAdd",
                      "amount": {
                          "value": 0
                      },
                      "type": "effect"
                  }
              ],
              "advantage": 0,
              "passiveBonus": 0,
              "conditionalBenefits": [],
              "rollBonus": [],
              "fail": 0,
              "rollBonuses": []
          },
          "performance": {
              "skillType": "skill",
              "type": "skill",
              "name": "Performance",
              "variableName": "performance",
              "ability": "charisma",
              "order": 108,
              "tags": [
                  "abilityCheck",
                  "charismaCheck"
              ],
              "description": {
                  "text": "Your Charisma (Performance) check determines how well you can delight an audience with music, dance, acting, storytelling, or some other form of entertainment.",
                  "hash": 8997986110135003,
                  "inlineCalculations": [],
                  "value": "Your Charisma (Performance) check determines how well you can delight an audience with music, dance, acting, storytelling, or some other form of entertainment."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "XA4BA4QCckZu3s8z7",
              "_id": "vbvbjaJNme56Tn4HM",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "permanentDeathSaves": {},
          "persuasion": {
              "skillType": "skill",
              "type": "skill",
              "name": "Persuasion",
              "variableName": "persuasion",
              "ability": "charisma",
              "order": 109,
              "tags": [
                  "abilityCheck",
                  "charismaCheck"
              ],
              "description": {
                  "text": "When you attempt to influence someone or a group of people with tact, social graces, or good nature, the DM might ask you to make a Charisma (Persuasion) check. Typically, you use persuasion when acting in good faith, to foster friendships, make cordial requests, or exhibit proper etiquette. Examples of persuading others include convincing a chamberlain to let your party see the king, negotiating peace between warring tribes, or inspiring a crowd of townsfolk.",
                  "hash": 6355562356529096,
                  "inlineCalculations": [],
                  "value": "When you attempt to influence someone or a group of people with tact, social graces, or good nature, the DM might ask you to make a Charisma (Persuasion) check. Typically, you use persuasion when acting in good faith, to foster friendships, make cordial requests, or exhibit proper etiquette. Examples of persuading others include convincing a chamberlain to let your party see the king, negotiating peace between warring tribes, or inspiring a crowd of townsfolk."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "hXXbCogaX3yZMakwv",
              "_id": "KwkmL5fL6TakdPrXb",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "polearmMasterTaken": {},
          "proficiencyBonus": {
              "name": "Proficiency Bonus",
              "variableName": "proficiencyBonus",
              "attributeType": "modifier",
              "type": "attribute",
              "order": 93,
              "tags": [],
              "baseValue": {
                  "calculation": "2+floor((level-1)/4)",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 5031043758359286,
                  "parseNode": {
                      "parseType": "operator",
                      "left": {
                          "parseType": "constant",
                          "valueType": "number",
                          "value": 2
                      },
                      "right": {
                          "parseType": "call",
                          "functionName": "floor",
                          "args": [
                              {
                                  "parseType": "operator",
                                  "left": {
                                      "parseType": "parenthesis",
                                      "content": {
                                          "parseType": "operator",
                                          "left": {
                                              "parseType": "symbol",
                                              "name": "level"
                                          },
                                          "right": {
                                              "parseType": "constant",
                                              "valueType": "number",
                                              "value": 1
                                          },
                                          "operator": "-",
                                          "fn": "add"
                                      }
                                  },
                                  "right": {
                                      "parseType": "constant",
                                      "valueType": "number",
                                      "value": 4
                                  },
                                  "operator": "/",
                                  "fn": "multiply"
                              }
                          ]
                      },
                      "operator": "+",
                      "fn": "add"
                  },
                  "parseError": null,
                  "errors": [
                      {
                          "type": "info",
                          "message": "level not found, set to 0"
                      }
                  ],
                  "value": 1
              },
              "description": {
                  "text": "The table that appears in your class description shows your proficiency bonus, which is +2 for a 1st-level character. Your proficiency bonus applies to many of the numbers you'll be recording on your character sheet:\n\n- Attack rolls using weapons you're proficient with\n- Attack rolls with spells you cast\n- Ability checks using skills you're proficient in\n- Ability checks using tools you're proficient with\n- Saving throws you're proficient in\n- Saving throw DCs for spells you cast (explained in each spellcasting class)\n\nYour class determines your weapon proficiencies, your saving throw proficiencies, and some of your skill and tool proficiencies. (Skills are described in chapter 7, tools in chapter 5.) Your background gives you additional skill and tool proficiencies, and some races give you more proficiencies. Be sure to note all of these proficiencies, as well as your proficiency bonus, on your character sheet.\n\nYour proficiency bonus can't be added to a single die roll or other number more than once. Occasionally, your proficiency bonus might be modified (doubled or halved, for example) before you apply it. If a circumstance suggests that your proficiency bonus applies more than once to the same roll or that it should be multiplied more than once, you nevertheless add it only once, multiply it only once, and halve it only once.",
                  "hash": 4722390157390356,
                  "inlineCalculations": [],
                  "value": "The table that appears in your class description shows your proficiency bonus, which is +2 for a 1st-level character. Your proficiency bonus applies to many of the numbers you'll be recording on your character sheet:\n\n- Attack rolls using weapons you're proficient with\n- Attack rolls with spells you cast\n- Ability checks using skills you're proficient in\n- Ability checks using tools you're proficient with\n- Saving throws you're proficient in\n- Saving throw DCs for spells you cast (explained in each spellcasting class)\n\nYour class determines your weapon proficiencies, your saving throw proficiencies, and some of your skill and tool proficiencies. (Skills are described in chapter 7, tools in chapter 5.) Your background gives you additional skill and tool proficiencies, and some races give you more proficiencies. Be sure to note all of these proficiencies, as well as your proficiency bonus, on your character sheet.\n\nYour proficiency bonus can't be added to a single die roll or other number more than once. Occasionally, your proficiency bonus might be modified (doubled or halved, for example) before you apply it. If a circumstance suggests that your proficiency bonus applies more than once to the same roll or that it should be multiplied more than once, you nevertheless add it only once, multiply it only once, and halve it only once."
              },
              "libraryTags": [],
              "libraryNodeId": "HfiP6AAsWs54dHYrN",
              "_id": "smd7QtGwKjmfELGiz",
              "total": 1,
              "value": 1,
              "effects": [
                  {
                      "_id": "smd7QtGwKjmfELGiz",
                      "name": "Proficiency Bonus",
                      "operation": "base",
                      "amount": {
                          "value": 1
                      },
                      "type": "attribute"
                  }
              ]
          },
          "religion": {
              "skillType": "skill",
              "type": "skill",
              "name": "Religion",
              "variableName": "religion",
              "ability": "intelligence",
              "order": 110,
              "tags": [
                  "abilityCheck",
                  "intelligenceCheck"
              ],
              "description": {
                  "text": "Your Intelligence (Religion) check measures your ability to recall lore about deities, rites and prayers, religious hierarchies, holy symbols, and the practices of secret cults.",
                  "hash": 1113141946278217,
                  "inlineCalculations": [],
                  "value": "Your Intelligence (Religion) check measures your ability to recall lore about deities, rites and prayers, religious hierarchies, holy symbols, and the practices of secret cults."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "aCKhnbufnj7eNYgEj",
              "_id": "aAQEZ8mizm7BGQo7i",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "showBGG": {
              "variableName": "showBGG",
              "errors": [],
              "type": "constant",
              "name": "Bigby Presents: Glory of the Giants",
              "icon": {
                  "name": "book-cover",
                  "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
              },
              "calculation": "true",
              "order": 202,
              "tags": [],
              "fillSlots": true,
              "slotQuantityFilled": 1,
              "libraryTags": [
                  "LoV",
                  "source",
                  "BGG"
              ],
              "libraryNodeId": "uQdwqCWbwTXgExZF3",
              "_id": "Eq6AyKgnftesJbJLc",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "showBMT": {
              "variableName": "showBMT",
              "errors": [],
              "type": "constant",
              "name": "The Book of Many Things",
              "calculation": "true",
              "fillSlots": true,
              "slotQuantityFilled": 1,
              "libraryTags": [
                  "LoV",
                  "source",
                  "BMT"
              ],
              "order": 203,
              "tags": [],
              "icon": {
                  "name": "book-cover",
                  "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
              },
              "libraryNodeId": "S5z2S5bzAD7ENPLiY",
              "_id": "jEWcojQcrnJn7C5Bt",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "showDMG": {
              "variableName": "showDMG",
              "errors": [],
              "type": "constant",
              "name": "Dungeon Master's Guide",
              "icon": {
                  "name": "book-cover",
                  "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
              },
              "calculation": "true",
              "order": 193,
              "tags": [],
              "fillSlots": true,
              "libraryTags": [
                  "LoV",
                  "source",
                  "DMG"
              ],
              "slotFillerType": "folder",
              "libraryNodeId": "Ba9X7DeD8zmzbJNfp",
              "_id": "crwNYoSrDQEfkkmJg",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "showFTD": {
              "variableName": "showFTD",
              "errors": [],
              "type": "constant",
              "name": "Fizban's Treasury of Dragons",
              "icon": {
                  "name": "book-cover",
                  "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
              },
              "calculation": "true",
              "order": 200,
              "tags": [],
              "fillSlots": true,
              "libraryTags": [
                  "LoV",
                  "source",
                  "FTD"
              ],
              "slotFillerType": "folder",
              "libraryNodeId": "rtpGnMXDGBA5Ky5kN",
              "_id": "vCxB2wuFFnL4eeqQa",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "showMM": {
              "variableName": "showMM",
              "errors": [],
              "type": "constant",
              "name": "Monster Manual",
              "icon": {
                  "name": "book-cover",
                  "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
              },
              "calculation": "true",
              "order": 194,
              "tags": [],
              "fillSlots": true,
              "libraryTags": [
                  "LoV",
                  "source",
                  "MM"
              ],
              "slotFillerType": "folder",
              "libraryNodeId": "uR8TgENWHfCnEmDJi",
              "_id": "TYFy5ABEfjcdPu94H",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "showMPMM": {
              "variableName": "showMPMM",
              "errors": [],
              "type": "constant",
              "name": "Mordenkainen Presents: Monsters of the Multiverse",
              "icon": {
                  "name": "book-cover",
                  "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
              },
              "calculation": "true",
              "order": 201,
              "tags": [],
              "fillSlots": true,
              "libraryTags": [
                  "LoV",
                  "source",
                  "MPMM",
                  "MotM"
              ],
              "slotFillerType": "folder",
              "libraryNodeId": "6wNNSdWRnTdJuTqey",
              "_id": "mmnesZx7FCcSsntbt",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "showMTF": {
              "variableName": "showMTF",
              "errors": [],
              "type": "constant",
              "name": "Mordenkainen's Tome of Foes",
              "icon": {
                  "name": "book-cover",
                  "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
              },
              "calculation": "true",
              "order": 198,
              "tags": [],
              "fillSlots": true,
              "libraryTags": [
                  "LoV",
                  "source",
                  "MTF"
              ],
              "slotFillerType": "folder",
              "libraryNodeId": "owHZKozTScdPWwJNf",
              "_id": "kaojsDvkKYokkJo8c",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "showPHB": {
              "variableName": "showPHB",
              "errors": [],
              "type": "constant",
              "name": "Player's Handbook",
              "icon": {
                  "name": "book-cover",
                  "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
              },
              "calculation": "true",
              "order": 191,
              "tags": [],
              "fillSlots": true,
              "libraryTags": [
                  "LoV",
                  "source",
                  "PHB"
              ],
              "slotFillerType": "folder",
              "libraryNodeId": "8b564Zge8aTAkTnCT",
              "_id": "iobw7s6iFekkeWhMZ",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "showTCE": {
              "variableName": "showTCE",
              "errors": [],
              "type": "constant",
              "name": "Tasha's Cauldron of Everything",
              "icon": {
                  "name": "book-cover",
                  "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
              },
              "calculation": "true",
              "order": 199,
              "tags": [],
              "fillSlots": true,
              "libraryTags": [
                  "LoV",
                  "source",
                  "TCE"
              ],
              "slotFillerType": "folder",
              "libraryNodeId": "nf4sTR5EPBLiN7XhZ",
              "_id": "X3aadnXmwzBCahgC9",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "showVGM": {
              "variableName": "showVGM",
              "errors": [],
              "type": "constant",
              "name": "Volo's Guide to Monsters",
              "icon": {
                  "name": "book-cover",
                  "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
              },
              "calculation": "true",
              "order": 196,
              "tags": [],
              "fillSlots": true,
              "libraryTags": [
                  "LoV",
                  "source",
                  "VGM"
              ],
              "slotFillerType": "folder",
              "libraryNodeId": "JPHMNeokZzBnWzC8r",
              "_id": "Xr7yyCMM9ZF8uxEvG",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "showXGE": {
              "variableName": "showXGE",
              "errors": [],
              "type": "constant",
              "name": "Xanathar's Guide to Everything",
              "icon": {
                  "name": "book-cover",
                  "shape": "M102.53 26.063l90 345.75 289.22 23.25-90.03-345.72-289.19-23.28zm-18.968 1.406c-30.44 11.894-55.62 53.07-49.687 75.28l3.25 11.813c.654-1.722 1.345-3.44 2.063-5.157C49.102 85.688 65.734 62.636 89.56 50.5l-6-23.03zM94.44 69.187c-16.66 10.016-29.916 28.1-38 47.437-5.2 12.44-8 25.417-8.75 36.25v.03L112.56 388.5c.305-.572.593-1.148.907-1.72 10.585-19.223 27.804-37.623 51.06-48.405L94.438 69.187zM154 107.968l239.78 16.188-1.28 18.625-239.75-16.155L154 107.97zm46.03 34.407l5.657 8.875 14.188 22.313 39.03-15.25 7.595-2.938 3.97 7.094 16.28 29.124 4.313 7.72-7.438 4.717c-10.267 6.524-17.392 12.284-21.75 16.782-3.03 3.13-4.247 5.232-4.906 6.594 1.38.303 3.433.577 6.624.28 18.268-1.69 56.285-19.964 79-61.592l5.47-10.03 8.748 7.374 46 38.812 11.532 9.72-13.844 6-33.28 14.374c5.447 4.925 11.436 5.916 18.436 5.406 9.95-.724 21.427-6.07 29.125-11.063l10.158 15.657c-9.41 6.1-22.867 12.934-37.938 14.03-15.07 1.098-32.27-5.296-42.594-23.155l-5.25-9.095 9.625-4.156 30.44-13.157-26.033-22c-25.716 40.294-62.68 59.168-87.843 61.5-6.78.628-12.945.26-18.594-2.688-5.65-2.95-9.984-10.6-9-17.406.984-6.806 4.838-12.4 10.688-18.44 4.385-4.526 10.612-9.367 17.875-14.436l-8.188-14.656L219.5 193.75l-7.156 2.78-4.125-6.468L196 170.875c-6.308 7.158-9.485 14.528-9 21.406.654 9.28 7.854 21.054 30.594 33.69l-9.094 16.343c-25.688-14.273-38.877-31.016-40.125-48.72-1.248-17.703 9.393-33.013 23.5-44.562l8.156-6.655zm-5.968 118.188l239.782 16.156-1.25 18.655-239.78-16.188 1.25-18.625zm-24.75 96.25c-17.637 9.072-31.065 23.708-39.468 38.968-4.49 8.153-7.307 16.452-8.72 23.876l11.626 42.156 1.688.157c-3.824-27.514 11.358-60.383 41.187-80.97l-6.313-24.188zm26.22 34c-32.403 17.28-46.273 52.303-41.657 72.78l289.78 24.532c-5.298-7.743-8.625-17.827-8.592-28.313l-22.47-9.03 46.626-7.313-13.69-13.064c5.552-6.838 13.54-12.915 24.47-17.53l-274.47-22.063z"
              },
              "calculation": "true",
              "order": 197,
              "tags": [],
              "fillSlots": true,
              "libraryTags": [
                  "LoV",
                  "source",
                  "XGE"
              ],
              "slotFillerType": "folder",
              "libraryNodeId": "vdmfLGfazjbRXvzsA",
              "_id": "FGoKWA4gzfGNpzH2v",
              "value": {
                  "parseType": "constant",
                  "valueType": "boolean",
                  "value": true
              }
          },
          "simpleMeleeWeapon": {},
          "simpleRangedWeapon": {},
          "sleightOfHand": {
              "skillType": "skill",
              "type": "skill",
              "name": "Sleight of Hand",
              "variableName": "sleightOfHand",
              "ability": "dexterity",
              "order": 111,
              "tags": [
                  "abilityCheck",
                  "dexterityCheck"
              ],
              "description": {
                  "text": "Whenever you attempt an act of legerdemain or manual trickery, such as planting something on someone else or concealing an object on your person, make a Dexterity (Sleight of Hand) check. The DM might also call for a Dexterity (Sleight of Hand) check to determine whether you can lift a coin purse off another person or slip something out of another person's pocket.",
                  "hash": 2961862631923726,
                  "inlineCalculations": [],
                  "value": "Whenever you attempt an act of legerdemain or manual trickery, such as planting something on someone else or concealing an object on your person, make a Dexterity (Sleight of Hand) check. The DM might also call for a Dexterity (Sleight of Hand) check to determine whether you can lift a coin purse off another person or slip something out of another person's pocket."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "5aiuBRguz4EPezeik",
              "_id": "oLvCMDziCKcQ4CGwC",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "speed": {
              "name": "Speed",
              "variableName": "speed",
              "attributeType": "stat",
              "type": "attribute",
              "order": 52,
              "tags": [],
              "baseValue": {
                  "calculation": "0",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 3136312542826423,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 0
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "description": {
                  "text": "On your turn, you can move a distance up to your speed. You can use as much or as little of your speed as you like on your turn, following the rules here.\nYour movement can include jumping, climbing, and swimming. These different modes of movement can be combined with walking, or they can constitute your entire move. However you’re moving, you deduct the distance of each part of your move from your speed until it is used up or until you are done moving.\n\n**Breaking Up Your Move**\nYou can break up your Movement on Your Turn, using some of your speed before and after your action. For example, if you have a speed of 30 feet, you can move 10 feet, take your action, and then move 20 feet.\n\n**Moving between Attacks**\nIf you take an action that includes more than one weapon attack, you can break up your movement even further by moving between those attacks. For example, a Fighter who can make two attacks with the Extra Attack feature and who has a speed of 25 feet could move 10 feet, make an Attack, move 15 feet, and then Attack again.\n\n**Using Different Speeds**\nIf you have more than one speed, such as your walking speed and a flying speed, you can switch back and forth between your speeds during your move. Whenever you switch, subtract the distance you’ve already moved from the new speed. The result determines how much farther you can move. If the result is 0 or less, you can’t use the new speed during the current move.\n\n**Difficult Terrain**\nCombat rarely takes place in bare rooms or on featureless plains. Boulder--strewn caverns, briar-- choked forests, treacherous staircases—the setting of a typical fight contains difficult terrain. Every foot of Movement in difficult terrain costs 1 extra foot. This rule is true even if multiple things in a space count as difficult terrain. Low furniture, rubble, undergrowth, steep stairs, snow, and shallow bogs are examples of difficult terrain. The space of another creature, whether Hostile or not, also counts as difficult terrain.\n\n**Being Prone**\nCombatants often find themselves lying on the ground, either because they are knocked down or because they throw themselves down. In the game, they are Prone. You can drop prone without using any of your speed. Standing up takes more effort; doing so costs an amount of Movement equal to half your speed.\nFor example, if your speed is 30 feet, you must spend 15 feet of Movement to stand up. You can’t stand up if you don’t have enough Movement left or if your speed is 0. To move while prone, you must crawl or use magic such as teleportation. Every foot of Movement while crawling costs 1 extra foot. Crawling 1 foot in difficult terrain, therefore, costs 3 feet of Movement.",
                  "hash": 4692255785694738,
                  "inlineCalculations": [],
                  "value": "On your turn, you can move a distance up to your speed. You can use as much or as little of your speed as you like on your turn, following the rules here.\nYour movement can include jumping, climbing, and swimming. These different modes of movement can be combined with walking, or they can constitute your entire move. However you’re moving, you deduct the distance of each part of your move from your speed until it is used up or until you are done moving.\n\n**Breaking Up Your Move**\nYou can break up your Movement on Your Turn, using some of your speed before and after your action. For example, if you have a speed of 30 feet, you can move 10 feet, take your action, and then move 20 feet.\n\n**Moving between Attacks**\nIf you take an action that includes more than one weapon attack, you can break up your movement even further by moving between those attacks. For example, a Fighter who can make two attacks with the Extra Attack feature and who has a speed of 25 feet could move 10 feet, make an Attack, move 15 feet, and then Attack again.\n\n**Using Different Speeds**\nIf you have more than one speed, such as your walking speed and a flying speed, you can switch back and forth between your speeds during your move. Whenever you switch, subtract the distance you’ve already moved from the new speed. The result determines how much farther you can move. If the result is 0 or less, you can’t use the new speed during the current move.\n\n**Difficult Terrain**\nCombat rarely takes place in bare rooms or on featureless plains. Boulder--strewn caverns, briar-- choked forests, treacherous staircases—the setting of a typical fight contains difficult terrain. Every foot of Movement in difficult terrain costs 1 extra foot. This rule is true even if multiple things in a space count as difficult terrain. Low furniture, rubble, undergrowth, steep stairs, snow, and shallow bogs are examples of difficult terrain. The space of another creature, whether Hostile or not, also counts as difficult terrain.\n\n**Being Prone**\nCombatants often find themselves lying on the ground, either because they are knocked down or because they throw themselves down. In the game, they are Prone. You can drop prone without using any of your speed. Standing up takes more effort; doing so costs an amount of Movement equal to half your speed.\nFor example, if your speed is 30 feet, you must spend 15 feet of Movement to stand up. You can’t stand up if you don’t have enough Movement left or if your speed is 0. To move while prone, you must crawl or use magic such as teleportation. Every foot of Movement while crawling costs 1 extra foot. Crawling 1 foot in difficult terrain, therefore, costs 3 feet of Movement."
              },
              "libraryTags": [],
              "libraryNodeId": "ZhKaf3dWaAFKgFJ8y",
              "_id": "8xifea4KFi2xaXs9f",
              "total": 0,
              "value": 0,
              "advantage": 0,
              "effects": [
                  {
                      "_id": "Jq93fy4RZgeSTxDbF",
                      "name": "Minimum",
                      "operation": "min",
                      "amount": {
                          "value": 0
                      },
                      "type": "effect"
                  },
                  {
                      "_id": "aysGyCPDW4s6awbKi",
                      "name": "Zero while unconscious",
                      "operation": "max",
                      "amount": {
                          "value": 0
                      },
                      "type": "effect"
                  },
                  {
                      "_id": "8xifea4KFi2xaXs9f",
                      "name": "Speed",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  }
              ]
          },
          "speedModifier": {},
          "standingHighJumpDistance": {
              "name": "Standing High Jump Distance",
              "variableName": "standingHighJumpDistance",
              "attributeType": "utility",
              "type": "attribute",
              "order": 119,
              "tags": [],
              "baseValue": {
                  "calculation": "highJumpDistance/2",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 2115547914179416,
                  "parseNode": {
                      "parseType": "operator",
                      "left": {
                          "parseType": "symbol",
                          "name": "highJumpDistance"
                      },
                      "right": {
                          "parseType": "constant",
                          "valueType": "number",
                          "value": 2
                      },
                      "operator": "/",
                      "fn": "multiply"
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "libraryTags": [],
              "libraryNodeId": "XRu5EnYChwxqnRHeK",
              "_id": "eZAiSxikgocHy2CD8",
              "total": 0,
              "value": 0,
              "effects": [
                  {
                      "_id": "eZAiSxikgocHy2CD8",
                      "name": "Standing High Jump Distance",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  }
              ]
          },
          "standingLongJumpDistance": {
              "name": "Standing Long Jump Distance",
              "variableName": "standingLongJumpDistance",
              "attributeType": "utility",
              "type": "attribute",
              "order": 117,
              "tags": [],
              "baseValue": {
                  "calculation": "longJumpDistance/2",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 5727617274512322,
                  "parseNode": {
                      "parseType": "operator",
                      "left": {
                          "parseType": "symbol",
                          "name": "longJumpDistance"
                      },
                      "right": {
                          "parseType": "constant",
                          "valueType": "number",
                          "value": 2
                      },
                      "operator": "/",
                      "fn": "multiply"
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "libraryTags": [],
              "libraryNodeId": "gTytCGhM6BAdYzvhm",
              "_id": "s5KEypCqSPGKPx48L",
              "total": 0,
              "value": 0,
              "effects": [
                  {
                      "_id": "s5KEypCqSPGKPx48L",
                      "name": "Standing Long Jump Distance",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  }
              ]
          },
          "stealth": {
              "skillType": "skill",
              "type": "skill",
              "name": "Stealth",
              "variableName": "stealth",
              "ability": "dexterity",
              "order": 112,
              "tags": [
                  "abilityCheck",
                  "dexterityCheck"
              ],
              "description": {
                  "text": "Make a Dexterity (Stealth) check when you attempt to conceal yourself from enemies, slink past guards, slip away without being noticed, or sneak up on someone without being seen or heard.",
                  "hash": 3988058055869790,
                  "inlineCalculations": [],
                  "value": "Make a Dexterity (Stealth) check when you attempt to conceal yourself from enemies, slink past guards, slip away without being noticed, or sneak up on someone without being seen or heard."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "jWPorgri8jfqHC59H",
              "_id": "EZjYPCg55BqhX5eXY",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "strength": {
              "name": "Strength",
              "variableName": "strength",
              "attributeType": "ability",
              "type": "attribute",
              "order": 115,
              "tags": [
                  "abilityCheck",
                  "strengthCheck"
              ],
              "baseValue": {
                  "calculation": "unmodifiedStrength",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 8223934651834346,
                  "parseNode": {
                      "parseType": "symbol",
                      "name": "unmodifiedStrength"
                  },
                  "parseError": null,
                  "errors": [
                      {
                          "type": "info",
                          "message": "unmodifiedStrength not found, set to 0"
                      }
                  ],
                  "value": 0
              },
              "description": {
                  "text": "Strength measures bodily power, athletic Training, and the extent to which you can exert raw physical force. A Strength check can model any attempt to lift, push, pull, or break something, to force your body through a space, or to otherwise apply brute force to a situation. The Athletics skill reflects aptitude in certain kinds of Strength Checks. \n\nThe GM might call for a Strength check when you try to accomplish tasks like the following:\n- Force open a stuck, locked, or barred door\n- Break free of bonds\n- Push through a tunnel that is too small\n- Hang on to a wagon while being dragged behind it\n- Tip over a statue\n- Keep a boulder from rolling  \n<br></br>\n\n**Variant: Encumbrance**\nThe rules for Lifting and Carrying are intentionally simple. Here is a variant if you are looking for more detailed rules for determining how a character is hindered by the weight of Equipment. When you use this variant, ignore the Strength column of the Armor table.\n\n**Lifting and Carrying**\nYour Strength score determines the amount of weight you can bear. The following terms define what you can lift or carry.\n\n**Carrying Capacity.** Your carrying Capacity is **{carryingCapacity}**. This is the weight (in pounds) that you can carry, which is high enough that most characters don’t usually have to worry about it.\n\n**Push, Drag, or Lift.** You can push, drag, or lift up to **{carryingCapacity*2}** pounds. While pushing or dragging weight in excess of your carrying Capacity, your speed drops to 5 feet.\n\n**Size and Strength.** Larger creatures can bear more weight, whereas Tiny creatures can carry less. For each size category above Medium, double the creature’s carrying Capacity and the amount it can push, drag, or lift. For a Tiny creature, halve these weights.\n\n**Long Jump**\nWhen you make a long jump, you cover **{longJumpDistance}** feet if you move at least 10 feet on foot immediately before the jump. When you make a standing long jump, you can leap only **{standingLongJumpDistance}** feet. Either way, each foot you clear on the jump costs a foot of movement.\n\nThis rule assumes that the height of your jump doesn't matter, such as a jump across a stream or chasm. At your DM's option, you must succeed on a DC 10 Strength (Athletics) check to clear a low obstacle (no taller than a quarter of the jump's distance), such as a hedge or low wall. Otherwise, you hit it.\n\nWhen you land in difficult terrain, you must succeed on a DC 10 Dexterity (Acrobatics) check to land on your feet. Otherwise, you land prone.\n\n**High Jump**\nWhen you make a high jump, you leap **{highJumpDistance}** feet into the air if you move at least 10 feet on foot immediately before the jump. When you make a standing high jump, you can jump **{standingHighJumpDistance}** feet. Either way, each foot you clear on the jump costs a foot of movement. In some circumstances, your DM might allow you to make a Strength (Athletics) check to jump higher than you normally can.\n\nYou can extend your arms half your height above yourself during the jump. Thus, you can reach above you a difference equal to the height of the jump plus 1 1/2 times your height.",
                  "hash": 4984814973538502,
                  "inlineCalculations": [
                      {
                          "calculation": "carryingCapacity",
                          "_key": "description.inlineCalculations[0]",
                          "type": "_calculation",
                          "hash": 6997942009923035,
                          "parseNode": {
                              "parseType": "symbol",
                              "name": "carryingCapacity"
                          },
                          "parseError": null,
                          "errors": [],
                          "value": null
                      },
                      {
                          "calculation": "carryingCapacity*2",
                          "_key": "description.inlineCalculations[1]",
                          "type": "_calculation",
                          "hash": 6191061912358917,
                          "parseNode": {
                              "parseType": "operator",
                              "left": {
                                  "parseType": "symbol",
                                  "name": "carryingCapacity"
                              },
                              "right": {
                                  "parseType": "constant",
                                  "valueType": "number",
                                  "value": 2
                              },
                              "operator": "*",
                              "fn": "multiply"
                          },
                          "parseError": null,
                          "errors": [],
                          "value": null
                      },
                      {
                          "calculation": "longJumpDistance",
                          "_key": "description.inlineCalculations[2]",
                          "type": "_calculation",
                          "hash": 1402486909811367,
                          "parseNode": {
                              "parseType": "symbol",
                              "name": "longJumpDistance"
                          },
                          "parseError": null,
                          "errors": [],
                          "value": 0
                      },
                      {
                          "calculation": "standingLongJumpDistance",
                          "_key": "description.inlineCalculations[3]",
                          "type": "_calculation",
                          "hash": 8860965257820906,
                          "parseNode": {
                              "parseType": "symbol",
                              "name": "standingLongJumpDistance"
                          },
                          "parseError": null,
                          "errors": [],
                          "value": 0
                      },
                      {
                          "calculation": "highJumpDistance",
                          "_key": "description.inlineCalculations[4]",
                          "type": "_calculation",
                          "hash": 1929181741216232,
                          "parseNode": {
                              "parseType": "symbol",
                              "name": "highJumpDistance"
                          },
                          "parseError": null,
                          "errors": [],
                          "value": 0
                      },
                      {
                          "calculation": "standingHighJumpDistance",
                          "_key": "description.inlineCalculations[5]",
                          "type": "_calculation",
                          "hash": 2080804089365979,
                          "parseNode": {
                              "parseType": "symbol",
                              "name": "standingHighJumpDistance"
                          },
                          "parseError": null,
                          "errors": [],
                          "value": 0
                      }
                  ],
                  "value": "Strength measures bodily power, athletic Training, and the extent to which you can exert raw physical force. A Strength check can model any attempt to lift, push, pull, or break something, to force your body through a space, or to otherwise apply brute force to a situation. The Athletics skill reflects aptitude in certain kinds of Strength Checks. \n\nThe GM might call for a Strength check when you try to accomplish tasks like the following:\n- Force open a stuck, locked, or barred door\n- Break free of bonds\n- Push through a tunnel that is too small\n- Hang on to a wagon while being dragged behind it\n- Tip over a statue\n- Keep a boulder from rolling  \n<br></br>\n\n**Variant: Encumbrance**\nThe rules for Lifting and Carrying are intentionally simple. Here is a variant if you are looking for more detailed rules for determining how a character is hindered by the weight of Equipment. When you use this variant, ignore the Strength column of the Armor table.\n\n**Lifting and Carrying**\nYour Strength score determines the amount of weight you can bear. The following terms define what you can lift or carry.\n\n**Carrying Capacity.** Your carrying Capacity is **NaN**. This is the weight (in pounds) that you can carry, which is high enough that most characters don’t usually have to worry about it.\n\n**Push, Drag, or Lift.** You can push, drag, or lift up to **NaN** pounds. While pushing or dragging weight in excess of your carrying Capacity, your speed drops to 5 feet.\n\n**Size and Strength.** Larger creatures can bear more weight, whereas Tiny creatures can carry less. For each size category above Medium, double the creature’s carrying Capacity and the amount it can push, drag, or lift. For a Tiny creature, halve these weights.\n\n**Long Jump**\nWhen you make a long jump, you cover **0** feet if you move at least 10 feet on foot immediately before the jump. When you make a standing long jump, you can leap only **0** feet. Either way, each foot you clear on the jump costs a foot of movement.\n\nThis rule assumes that the height of your jump doesn't matter, such as a jump across a stream or chasm. At your DM's option, you must succeed on a DC 10 Strength (Athletics) check to clear a low obstacle (no taller than a quarter of the jump's distance), such as a hedge or low wall. Otherwise, you hit it.\n\nWhen you land in difficult terrain, you must succeed on a DC 10 Dexterity (Acrobatics) check to land on your feet. Otherwise, you land prone.\n\n**High Jump**\nWhen you make a high jump, you leap **0** feet into the air if you move at least 10 feet on foot immediately before the jump. When you make a standing high jump, you can jump **0** feet. Either way, each foot you clear on the jump costs a foot of movement. In some circumstances, your DM might allow you to make a Strength (Athletics) check to jump higher than you normally can.\n\nYou can extend your arms half your height above yourself during the jump. Thus, you can reach above you a difference equal to the height of the jump plus 1 1/2 times your height."
              },
              "libraryTags": [
                  "abilityCheck"
              ],
              "fillSlots": true,
              "searchable": true,
              "reset": "longRest",
              "libraryNodeId": "tjcgNBtrwE27WmS5r",
              "_id": "QPp7QCAbGMKFbFMkY",
              "total": 0,
              "value": 0,
              "advantage": 0,
              "modifier": -5,
              "effects": [
                  {
                      "_id": "QPp7QCAbGMKFbFMkY",
                      "name": "Strength",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "uXByyFFqHZE7p9yYA",
                      "name": "Max Strength",
                      "operation": "max",
                      "amount": {
                          "value": 20
                      },
                      "type": "effect"
                  }
              ]
          },
          "strengthSave": {
              "skillType": "save",
              "type": "skill",
              "name": "Strength Save",
              "variableName": "strengthSave",
              "ability": "strength",
              "order": 121,
              "tags": [
                  "savingThrow"
              ],
              "description": {
                  "text": "Strength measures bodily power, athletic training, and the extent to which you can exert raw physical force.\n\n### Strength Checks\nA Strength check can model any attempt to lift, push, pull, or break something, to force your body through a space, or to otherwise apply brute force to a situation. The Athletics skill reflects aptitude in certain kinds of Strength checks.\n\n***Athletics.*** Your Strength (Athletics) check covers difficult situations you encounter while climbing, jumping, or swimming. Examples include the following activities:\n\n- You attempt to climb a sheer or slippery cliff, avoid hazards while scaling a wall, or cling to a surface while something is trying to knock you off.\n- You try to jump an unusually long distance or pull off a stunt mid jump.\n- You struggle to swim or stay afloat in treacherous currents, storm-tossed waves, or areas of thick seaweed. Or another creature tries to push or pull you underwater or otherwise interfere with your swimming.\n\n***Other Strength Checks.*** The DM might also call for a Strength check when you try to accomplish tasks like the following:\n\n- Force open a stuck, locked, or barred door\n- Break free of bonds\n- Push through a tunnel that is too small\n- Hang on to a wagon while being dragged behind it\n- Tip over a statue\n- Keep a boulder from rolling\n\n### Attack Rolls and Damage\nYou add your Strength modifier to your attack roll and your damage roll when attacking with a melee weapon such as a mace, a battleaxe, or a javelin. You use melee weapons to make melee attacks in hand-to-hand combat, and some of them can be thrown to make a ranged attack.\n\n### Lifting and Carrying\nYour Strength score determines the amount of weight you can bear. The following terms define what you can lift or carry.\n\n***Carrying Capacity.*** Your carrying capacity is your Strength score multiplied by 15. This is the weight (in pounds) that you can carry, which is high enough that most characters don't usually have to worry about it.\n***Push, Drag, or Lift.*** You can push, drag, or lift a weight in pounds up to twice your carrying capacity (or 30 times your Strength score). While pushing or dragging weight in excess of your carrying capacity, your speed drops to 5 feet.\n***Size and Strength.*** Larger creatures can bear more weight, whereas Tiny creatures can carry less. For each size category above Medium, double the creature's carrying capacity and the amount it can push, drag, or lift. For a Tiny creature, halve these weights.\n\n### Variant: Encumbrance\nThe rules for lifting and carrying are intentionally simple. Here is a variant if you are looking for more detailed rules for determining how a character is hindered by the weight of equipment. When you use this variant, ignore the Strength column of the Armor table in chapter 5.\n\nIf you carry weight in excess of 5 times your Strength score, you are encumbered, which means your speed drops by 10 feet.\n\nIf you carry weight in excess of 10 times your Strength score, up to your maximum carrying capacity, you are instead heavily encumbered, which means your speed drops by 20 feet and you have disadvantage on ability checks, attack rolls, and saving throws that use Strength, Dexterity, or Constitution.",
                  "hash": 7741804650381958,
                  "inlineCalculations": [],
                  "value": "Strength measures bodily power, athletic training, and the extent to which you can exert raw physical force.\n\n### Strength Checks\nA Strength check can model any attempt to lift, push, pull, or break something, to force your body through a space, or to otherwise apply brute force to a situation. The Athletics skill reflects aptitude in certain kinds of Strength checks.\n\n***Athletics.*** Your Strength (Athletics) check covers difficult situations you encounter while climbing, jumping, or swimming. Examples include the following activities:\n\n- You attempt to climb a sheer or slippery cliff, avoid hazards while scaling a wall, or cling to a surface while something is trying to knock you off.\n- You try to jump an unusually long distance or pull off a stunt mid jump.\n- You struggle to swim or stay afloat in treacherous currents, storm-tossed waves, or areas of thick seaweed. Or another creature tries to push or pull you underwater or otherwise interfere with your swimming.\n\n***Other Strength Checks.*** The DM might also call for a Strength check when you try to accomplish tasks like the following:\n\n- Force open a stuck, locked, or barred door\n- Break free of bonds\n- Push through a tunnel that is too small\n- Hang on to a wagon while being dragged behind it\n- Tip over a statue\n- Keep a boulder from rolling\n\n### Attack Rolls and Damage\nYou add your Strength modifier to your attack roll and your damage roll when attacking with a melee weapon such as a mace, a battleaxe, or a javelin. You use melee weapons to make melee attacks in hand-to-hand combat, and some of them can be thrown to make a ranged attack.\n\n### Lifting and Carrying\nYour Strength score determines the amount of weight you can bear. The following terms define what you can lift or carry.\n\n***Carrying Capacity.*** Your carrying capacity is your Strength score multiplied by 15. This is the weight (in pounds) that you can carry, which is high enough that most characters don't usually have to worry about it.\n***Push, Drag, or Lift.*** You can push, drag, or lift a weight in pounds up to twice your carrying capacity (or 30 times your Strength score). While pushing or dragging weight in excess of your carrying capacity, your speed drops to 5 feet.\n***Size and Strength.*** Larger creatures can bear more weight, whereas Tiny creatures can carry less. For each size category above Medium, double the creature's carrying capacity and the amount it can push, drag, or lift. For a Tiny creature, halve these weights.\n\n### Variant: Encumbrance\nThe rules for lifting and carrying are intentionally simple. Here is a variant if you are looking for more detailed rules for determining how a character is hindered by the weight of equipment. When you use this variant, ignore the Strength column of the Armor table in chapter 5.\n\nIf you carry weight in excess of 5 times your Strength score, you are encumbered, which means your speed drops by 10 feet.\n\nIf you carry weight in excess of 10 times your Strength score, up to your maximum carrying capacity, you are instead heavily encumbered, which means your speed drops by 20 feet and you have disadvantage on ability checks, attack rolls, and saving throws that use Strength, Dexterity, or Constitution."
              },
              "libraryTags": [
                  "savingThrow"
              ],
              "fillSlots": true,
              "searchable": false,
              "libraryNodeId": "Mp4L9hGjD92tt6u3S",
              "_id": "cQQJsn6ZHdcscnNdy",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "survival": {
              "skillType": "skill",
              "type": "skill",
              "name": "Survival",
              "variableName": "survival",
              "ability": "wisdom",
              "order": 113,
              "tags": [
                  "abilityCheck",
                  "wisdomCheck"
              ],
              "description": {
                  "text": "The DM might ask you to make a Wisdom (Survival) check to follow tracks, hunt wild game, guide your group through frozen wastelands, identify signs that owlbears live nearby, predict the weather, or avoid quicksand and other natural hazards.",
                  "hash": 4295751239595560,
                  "inlineCalculations": [],
                  "value": "The DM might ask you to make a Wisdom (Survival) check to follow tracks, hunt wild game, guide your group through frozen wastelands, identify signs that owlbears live nearby, predict the weather, or avoid quicksand and other natural hazards."
              },
              "libraryTags": [],
              "fillSlots": false,
              "searchable": false,
              "libraryNodeId": "x7tDS4rfKXu5u2jLA",
              "_id": "GbzhQj59hTgdopXRg",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "swimSpeed": {
              "value": 0,
              "advantage": 0,
              "conditionalBenefits": [],
              "rollBonus": [],
              "fail": 0,
              "rollBonuses": []
          },
          "tempHP": {
              "attributeType": "healthBar",
              "type": "attribute",
              "name": "Temporary Hit Points",
              "variableName": "tempHP",
              "order": 90,
              "tags": [],
              "libraryTags": [],
              "healthBarDamageOrder": 0,
              "hideWhenTotalZero": true,
              "hideWhenValueZero": true,
              "healthBarNoHealing": true,
              "libraryNodeId": "DttisFweXFRyQmuJK",
              "_id": "MBqXT5EAGYxmSR2y2",
              "total": 0,
              "value": 0,
              "hide": true
          },
          "tutorialStatus": {},
          "twoWeaponFightingStyle": {},
          "unmodifiedCharisma": {},
          "unmodifiedConstitution": {},
          "unmodifiedCreatureSize": {
              "name": "Unmodified Creature Size",
              "variableName": "unmodifiedCreatureSize",
              "attributeType": "utility",
              "type": "attribute",
              "order": 56,
              "tags": [],
              "baseValue": {
                  "calculation": "0",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 3136312542826423,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 0
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "description": {
                  "text": "1 - Tiny\n2 - Small\n3 - Medium\n4 - Large\n5 - Huge\n6 - Gargantuan",
                  "hash": 5409603312154709,
                  "inlineCalculations": [],
                  "value": "1 - Tiny\n2 - Small\n3 - Medium\n4 - Large\n5 - Huge\n6 - Gargantuan"
              },
              "libraryTags": [],
              "libraryNodeId": "ZatRQoAhbbmJCkQno",
              "_id": "K4wkwutAvEzTfQRLL",
              "total": 0,
              "value": 0,
              "effects": [
                  {
                      "_id": "K4wkwutAvEzTfQRLL",
                      "name": "Unmodified Creature Size",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  }
              ]
          },
          "unmodifiedDexterity": {},
          "unmodifiedIntelligence": {},
          "unmodifiedSpeed": {
              "name": "Unmodified Speed",
              "variableName": "unmodifiedSpeed",
              "attributeType": "utility",
              "type": "attribute",
              "order": 48,
              "tags": [],
              "baseValue": {
                  "calculation": "0",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 3136312542826423,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 0
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "libraryTags": [],
              "libraryNodeId": "TdsWmo7AykBkyBkZF",
              "_id": "iMHDsMjueKDSEAgx9",
              "total": 0,
              "value": 0,
              "advantage": 0,
              "effects": [
                  {
                      "_id": "iMHDsMjueKDSEAgx9",
                      "name": "Unmodified Speed",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "Jq93fy4RZgeSTxDbF",
                      "name": "Minimum",
                      "operation": "min",
                      "amount": {
                          "value": 0
                      },
                      "type": "effect"
                  },
                  {
                      "_id": "aysGyCPDW4s6awbKi",
                      "name": "Zero while unconscious",
                      "operation": "max",
                      "amount": {
                          "value": 0
                      },
                      "type": "effect"
                  }
              ]
          },
          "unmodifiedStrength": {},
          "unmodifiedWisdom": {},
          "weaponsEquipped": {},
          "wildShapeActive": {
              "attributeType": "utility",
              "type": "attribute",
              "name": "Wild Shape Active",
              "variableName": "wildShapeActive",
              "baseValue": {
                  "calculation": "0",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 3136312542826423,
                  "parseNode": {
                      "parseType": "constant",
                      "valueType": "number",
                      "value": 0
                  },
                  "parseError": null,
                  "errors": [],
                  "value": 0
              },
              "order": 86,
              "tags": [],
              "libraryTags": [],
              "libraryNodeId": "p79ffvDykrDEfdAzc",
              "_id": "eTd5i5TTiZNoKc8ee",
              "total": 0,
              "value": 0,
              "effects": [
                  {
                      "_id": "eTd5i5TTiZNoKc8ee",
                      "name": "Wild Shape Active",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  }
              ]
          },
          "wildShapeActiveToggle": {},
          "wisdom": {
              "name": "Wisdom",
              "variableName": "wisdom",
              "attributeType": "ability",
              "type": "attribute",
              "order": 128,
              "tags": [
                  "abilityCheck",
                  "wisdomCheck"
              ],
              "baseValue": {
                  "calculation": "unmodifiedWisdom",
                  "_key": "baseValue",
                  "type": "_calculation",
                  "hash": 4588504102685352,
                  "parseNode": {
                      "parseType": "symbol",
                      "name": "unmodifiedWisdom"
                  },
                  "parseError": null,
                  "errors": [
                      {
                          "type": "info",
                          "message": "unmodifiedWisdom not found, set to 0"
                      }
                  ],
                  "value": 0
              },
              "description": {
                  "text": "Wisdom reflects how attuned you are to the world around you and represents perceptiveness and intuition. A Wisdom check might reflect an effort to read body language, understand someone’s feelings, notice things about the environment, or care for an injured person. The Animal Handling, Insight, Medicine, Perception, and Survival Skills reflect aptitude in certain kinds of Wisdom Checks.\n\nThe GM might call for a Wisdom check when you try to accomplish tasks like the following:\n- Get a gut feeling about what course of action to follow\n- Discern whether a seemingly dead or living creature is Undead",
                  "hash": 6573960610326175,
                  "inlineCalculations": [],
                  "value": "Wisdom reflects how attuned you are to the world around you and represents perceptiveness and intuition. A Wisdom check might reflect an effort to read body language, understand someone’s feelings, notice things about the environment, or care for an injured person. The Animal Handling, Insight, Medicine, Perception, and Survival Skills reflect aptitude in certain kinds of Wisdom Checks.\n\nThe GM might call for a Wisdom check when you try to accomplish tasks like the following:\n- Get a gut feeling about what course of action to follow\n- Discern whether a seemingly dead or living creature is Undead"
              },
              "libraryTags": [
                  "abilityCheck"
              ],
              "fillSlots": true,
              "searchable": true,
              "reset": "longRest",
              "libraryNodeId": "tJXX8kneEbCmXaJxY",
              "_id": "yobsWF82fk3H6rcWs",
              "total": 0,
              "value": 0,
              "advantage": 0,
              "modifier": -5,
              "effects": [
                  {
                      "_id": "yobsWF82fk3H6rcWs",
                      "name": "Wisdom",
                      "operation": "base",
                      "amount": {
                          "value": 0
                      },
                      "type": "attribute"
                  },
                  {
                      "_id": "xNkYbk5Lkijwj2Ppd",
                      "name": "Max Wisdom",
                      "operation": "max",
                      "amount": {
                          "value": 20
                      },
                      "type": "effect"
                  }
              ]
          },
          "wisdomSave": {
              "skillType": "save",
              "type": "skill",
              "name": "Wisdom Save",
              "variableName": "wisdomSave",
              "ability": "wisdom",
              "order": 129,
              "tags": [
                  "savingThrow"
              ],
              "description": {
                  "text": "Wisdom reflects how attuned you are to the world around you and represents perceptiveness and intuition.\n\n### Wisdom Checks\nA Wisdom check might reflect an effort to read body language, understand someone's feelings, notice things about the environment, or care for an injured person. The Animal Handling, Insight, Medicine, Perception, and Survival skills reflect aptitude in certain kinds of Wisdom checks.\n\n***Animal Handling.*** When there is any question whether you can calm down a domesticated animal, keep a mount from getting spooked, or intuit an animal's intentions, the DM might call for a Wisdom (Animal Handling) check. You also make a Wisdom (Animal Handling) check to control your mount when you attempt a risky maneuver.\n\n***Insight.*** Your Wisdom (Insight) check decides whether you can determine the true intentions of a creature, such as when searching out a lie or predicting someone's next move. Doing so involves gleaning clues from body language, speech habits, and changes in mannerisms.\n\n***Medicine.*** A Wisdom (Medicine) check lets you try to stabilize a dying companion or diagnose an illness.\n\n***Perception.*** Your Wisdom (Perception) check lets you spot, hear, or otherwise detect the presence of something. It measures your general awareness of your surroundings and the keenness of your senses.\nFor example, you might try to hear a conversation through a closed door, eavesdrop under an open window, or hear monsters moving stealthily in the forest. Or you might try to spot things that are obscured or easy to miss, whether they are orcs lying in ambush on a road, thugs hiding in the shadows of an alley, or candlelight under a closed secret door.\n\n***Survival.*** The DM might ask you to make a Wisdom (Survival) check to follow tracks, hunt wild game, guide your group through frozen wastelands, identify signs that owlbears live nearby, predict the weather, or avoid quicksand and other natural hazards.\n\n***Other Wisdom Checks.*** The DM might call for a Wisdom check when you try to accomplish tasks like the following:\n\n- Get a gut feeling about what course of action to follow\n- Discern whether a seemingly dead or living creature is undead\n\n### Spellcasting Ability\nClerics, druids, and rangers use Wisdom as their spellcasting ability, which helps determine the saving throw DCs of spells they cast.",
                  "hash": 8387525951273524,
                  "inlineCalculations": [],
                  "value": "Wisdom reflects how attuned you are to the world around you and represents perceptiveness and intuition.\n\n### Wisdom Checks\nA Wisdom check might reflect an effort to read body language, understand someone's feelings, notice things about the environment, or care for an injured person. The Animal Handling, Insight, Medicine, Perception, and Survival skills reflect aptitude in certain kinds of Wisdom checks.\n\n***Animal Handling.*** When there is any question whether you can calm down a domesticated animal, keep a mount from getting spooked, or intuit an animal's intentions, the DM might call for a Wisdom (Animal Handling) check. You also make a Wisdom (Animal Handling) check to control your mount when you attempt a risky maneuver.\n\n***Insight.*** Your Wisdom (Insight) check decides whether you can determine the true intentions of a creature, such as when searching out a lie or predicting someone's next move. Doing so involves gleaning clues from body language, speech habits, and changes in mannerisms.\n\n***Medicine.*** A Wisdom (Medicine) check lets you try to stabilize a dying companion or diagnose an illness.\n\n***Perception.*** Your Wisdom (Perception) check lets you spot, hear, or otherwise detect the presence of something. It measures your general awareness of your surroundings and the keenness of your senses.\nFor example, you might try to hear a conversation through a closed door, eavesdrop under an open window, or hear monsters moving stealthily in the forest. Or you might try to spot things that are obscured or easy to miss, whether they are orcs lying in ambush on a road, thugs hiding in the shadows of an alley, or candlelight under a closed secret door.\n\n***Survival.*** The DM might ask you to make a Wisdom (Survival) check to follow tracks, hunt wild game, guide your group through frozen wastelands, identify signs that owlbears live nearby, predict the weather, or avoid quicksand and other natural hazards.\n\n***Other Wisdom Checks.*** The DM might call for a Wisdom check when you try to accomplish tasks like the following:\n\n- Get a gut feeling about what course of action to follow\n- Discern whether a seemingly dead or living creature is undead\n\n### Spellcasting Ability\nClerics, druids, and rangers use Wisdom as their spellcasting ability, which helps determine the saving throw DCs of spells they cast."
              },
              "libraryTags": [
                  "savingThrow"
              ],
              "fillSlots": true,
              "searchable": false,
              "libraryNodeId": "Jsxt7SzgoSorwkBAJ",
              "_id": "Yp9NHs3pN7bZYe7bN",
              "proficiency": 0,
              "abilityMod": -5,
              "value": -5
          },
          "~saveDiceRoll": {}
      }
  ]
}